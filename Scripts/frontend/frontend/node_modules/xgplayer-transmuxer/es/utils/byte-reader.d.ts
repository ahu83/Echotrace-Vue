export declare class ByteReader {
    private dv;
    start: number;
    offset: number;
    end: number;
    constructor(buf: ArrayBuffer, offset: number, len: number);
    static fromUint8(uint8: Uint8Array): ByteReader;
    static concatUint8s(args: Uint8Array[]): Uint8Array;
    static concatUint8(...args: Uint8Array[]): Uint8Array;
    get buffer(): ArrayBuffer;
    get unreadLength(): number;
    get size(): number;
    readFloat(byteNum: number): number;
    back(byteNum: number): void;
    skip(byteNum: number): void;
    readInt(byteNum: number): number;
    read(byteNum: number): any;
    write(byteNum: number, val: number): void;
    readToBuffer(len?: number): ArrayBuffer;
    readToUint8(len?: number): Uint8Array;
    readString(len: number): string;
}
