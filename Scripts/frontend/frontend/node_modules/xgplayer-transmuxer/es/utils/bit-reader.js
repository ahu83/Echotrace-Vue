import { createClass as _createClass, classCallCheck as _classCallCheck } from "../_virtual/_rollupPluginBabelHelpers.js";
var BitReader = /* @__PURE__ */ function() {
  function BitReader2(val, size) {
    _classCallCheck(this, BitReader2);
    this.offset = 0;
    this.val = val;
    this.size = size;
  }
  _createClass(BitReader2, [{
    key: "skip",
    value: function skip(len) {
      this.offset += len;
    }
  }, {
    key: "read",
    value: function read(len) {
      var unreadLength = this.size - this.offset - len;
      if (unreadLength >= 0) {
        var bits = 0, i = 0;
        this.offset += len;
        if (this.size > 31) {
          for (; i < len; i++) {
            bits += Math.pow(2, i);
          }
          return this.val / Math.pow(2, unreadLength) & bits;
        } else {
          for (; i < len; i++) {
            bits += 1 << i;
          }
          return this.val >>> unreadLength & bits;
        }
      }
      throw new Error("the number of the read operation exceeds the total length limit of bits");
    }
  }], [{
    key: "fromByte",
    value: function fromByte(byte, len) {
      return new BitReader2(byte.read(len), len << 3);
    }
  }]);
  return BitReader2;
}();
export { BitReader };
