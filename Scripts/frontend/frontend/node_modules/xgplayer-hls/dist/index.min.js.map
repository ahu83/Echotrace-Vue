{"version":3,"file":"index.min.js","sources":["../../xgplayer-streaming-shared/src/buffer.js","../../xgplayer-streaming-shared/src/env.js","../../xgplayer-streaming-shared/src/error.js","../../xgplayer-streaming-shared/src/logger.js","../../xgplayer-streaming-shared/src/utils.js","../../xgplayer-streaming-shared/src/mse.js","../../xgplayer-streaming-shared/src/net/types.js","../../xgplayer-streaming-shared/src/net/error.js","../../xgplayer-streaming-shared/src/is.js","../../xgplayer-streaming-shared/src/net/helper.js","../../xgplayer-streaming-shared/src/event.js","../../../node_modules/eventemitter3/index.js","../../xgplayer-streaming-shared/src/net/fetch.js","../../xgplayer-streaming-shared/src/net/xhr.js","../../xgplayer-streaming-shared/src/net/task.js","../../xgplayer-streaming-shared/src/streaming-helper.js","../../xgplayer-streaming-shared/src/net/index.js","../../xgplayer-streaming-shared/src/net/config.js","../../xgplayer-streaming-shared/src/services/gap.js","../../xgplayer-streaming-shared/src/services/sei.js","../../xgplayer-streaming-shared/src/services/bandwidth.js","../../xgplayer-streaming-shared/src/services/stats.js","../../xgplayer-transmuxer/src/model/types.js","../../xgplayer-transmuxer/src/model/video-track.js","../../xgplayer-transmuxer/src/model/audio-track.js","../../xgplayer-transmuxer/src/model/video-sample.js","../../xgplayer-transmuxer/src/model/audio-sample.js","../../xgplayer-transmuxer/src/model/metadata-track.js","../../xgplayer-transmuxer/src/utils/exp-golomb.js","../../xgplayer-transmuxer/src/utils/logger.js","../../xgplayer-transmuxer/src/utils/utf8.js","../../xgplayer-transmuxer/src/utils/env.js","../../xgplayer-transmuxer/src/utils/index.js","../../xgplayer-transmuxer/src/codec/aac.js","../../xgplayer-transmuxer/src/codec/nalu.js","../../xgplayer-transmuxer/src/codec/avc.js","../../xgplayer-transmuxer/src/codec/hevc.js","../../xgplayer-transmuxer/src/codec/opus.js","../../xgplayer-transmuxer/src/codec/mpeg.js","../../xgplayer-transmuxer/src/flv/fixer.js","../../xgplayer-transmuxer/src/flv/amf.js","../../xgplayer-transmuxer/src/flv/soundFormat.js","../../xgplayer-transmuxer/src/flv/index.js","../../xgplayer-transmuxer/src/mpeg-ts/fixer.js","../../xgplayer-transmuxer/src/mpeg-ts/index.js","../../xgplayer-transmuxer/src/utils/byte-reader.ts","../../xgplayer-transmuxer/src/utils/bit-reader.ts","../../xgplayer-transmuxer/src/mp4/mp4-parser.js","../../xgplayer-transmuxer/src/mp4/fmp4-demuxer.js","../../xgplayer-transmuxer/src/mp4/buffer.js","../../xgplayer-transmuxer/src/mp4/mp4.js","../../xgplayer-transmuxer/src/mp4/logger.js","../../../node_modules/crypto-es/lib/md5.js","../../xgplayer-transmuxer/src/mp4/fmp4-remuxer.js","../../../node_modules/crypto-es/lib/core.js","../../../node_modules/crypto-es/lib/enc-base64.js","../../../node_modules/crypto-es/lib/evpkdf.js","../../../node_modules/crypto-es/lib/cipher-core.js","../../../node_modules/crypto-es/lib/aes.js","../../../node_modules/crypto-es/lib/mode-ctr.js","../src/hls/buffer-service/decrypt/index.js","../src/hls/constants.js","../src/hls/buffer-service/transmuxer/index.js","../src/hls/buffer-service/index.js","../src/hls/manifest-loader/parser/model.js","../src/hls/manifest-loader/parser/utils.js","../src/hls/manifest-loader/parser/master.js","../src/hls/manifest-loader/parser/media.js","../src/hls/manifest-loader/parser/index.js","../src/hls/manifest-loader/index.js","../src/hls/utils.js","../src/hls/playlist/stream.js","../src/hls/playlist/index.js","../src/hls/segment-loader/index.js","../src/hls/index.js","../src/hls/config.js","../src/plugin-extension.js","../src/plugin.js"],"sourcesContent":["export class Buffer {\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static start (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n    // Edge bug: https://bit.ly/2JYLPeB\n    if (buf.length === 1 && buf.start(0) < 0) return 0\n\n    return buf.start(0)\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @returns {number}\n   */\n  static end (buf) {\n    if (!buf || !buf.length) return 0\n\n    // Safari bug: https://bit.ly/2trx6O8\n    if (buf.length === 1 && buf.end(0) - buf.start(0) < 1e-6) return 0\n\n    return buf.end(buf.length - 1)\n  }\n\n  /**\n   * @param {{buffered?: TimeRanges}} b\n   * @returns {TimeRanges | void}\n   */\n  static get (b) {\n    if (!b) return\n    try {\n      return b.buffered\n    } catch (error) {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {[number,number][]}\n   */\n  static buffers (buf, maxHole) {\n    if (!buf || !buf.length) return []\n\n    const buffers = []\n    for (let i = 0, l = buf.length; i < l; i++) {\n      const bufLen = buffers.length\n      if (!bufLen || !maxHole) {\n        buffers.push([buf.start(i), buf.end(i)])\n      } else {\n        const last = buffers[bufLen - 1]\n        const lastEnd = last[1]\n        const start = buf.start(i)\n        if (start - lastEnd <= maxHole) {\n          const end = buf.end(i)\n          if (end > lastEnd) {\n            last[1] = end\n          }\n        } else {\n          buffers.push([buf.start(i), buf.end(i)])\n        }\n      }\n    }\n    return buffers\n  }\n\n  /**\n   * @param {TimeRanges} buf\n   * @param {number} [maxHole]\n   * @returns {{buffers:[number,number][],length:number}}\n   */\n  static totalLength (buffers) {\n    if (!buffers || !buffers.length) return 0\n    return buffers.reduce((a, c) => (a += (c[1] - c[0])), 0)\n  }\n\n  /**\n   *\n   * @param {TimeRanges} buf\n   * @param {number} [pos=0]\n   * @param {number} [maxHole=0]\n   * @returns {{start:number,end:number,buffers:[number,number][],remaining:number,index?:number,nextStart?:number,nextEnd?:number,prevStart?:number,prevEnd?:number}}\n   */\n  static info (buf, pos = 0, maxHole = 0) {\n    if (!buf || !buf.length) return { start: 0, end: 0, buffers: [] }\n\n    let start = 0\n    let end = 0\n    let index = 0\n    let nextStart = 0\n    let nextEnd = 0\n    let prevStart = 0\n    let prevEnd = 0\n    const buffers = Buffer.buffers(buf, maxHole)\n\n    for (let i = 0, l = buffers.length; i < l; i++) {\n      const item = buffers[i]\n      if (pos + maxHole >= item[0] && pos <= item[1]) {\n        start = item[0]\n        end = item[1]\n        index = i\n      } else if (pos + maxHole < item[0]) {\n        nextStart = item[0]\n        nextEnd = item[1]\n        break\n      } else if (pos + maxHole > item[1]) {\n        prevStart = item[0]\n        prevEnd = item[1]\n      }\n    }\n\n    return {\n      start,\n      end,\n      index,\n      buffers,\n      nextStart,\n      nextEnd,\n      prevStart,\n      prevEnd,\n      currentTime: pos,\n      behind: pos - start,\n      remaining: end ? end - pos : 0,\n      length: Buffer.totalLength && Buffer.totalLength(buffers)\n    }\n  }\n\n  /**\n   *\n   * @param {HTMLMediaElement} media\n   * @param {number} pos\n   * @returns {Boolean}\n   */\n  static isBuffered (media, pos) {\n    if (media) {\n      const buffered = Buffer.get(media)\n\n      if (buffered?.length) {\n        for (let i = 0; i < buffered.length; i++) {\n          if (pos >= buffered.start(i) && pos <= buffered.end(i)) {\n            return true\n          }\n        }\n      }\n    }\n    return false\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n","export const ERR = {\n  MANIFEST: 'manifest',\n  NETWORK: 'network',\n  NETWORK_TIMEOUT: 'network_timeout',\n  NETWORK_FORBIDDEN: 'network_forbidden',\n  NETWORK_NOTFOUND: 'network_notfound',\n  NETWROK_RANGE_NOT_SATISFIABLE: 'network_range_not_satisfiable',\n  DEMUX: 'demux',\n  REMUX: 'remux',\n  MEDIA: 'media',\n  DRM: 'drm',\n  OTHER: 'other',\n  RUNTIME: 'runtime',\n\n  SUB_TYPES: {\n    FLV: 'FLV',\n    HLS: 'HLS',\n    MP4: 'MP4',\n    FMP4: 'FMP4',\n    MSE_ADD_SB: 'MSE_ADD_SB',\n    MSE_APPEND_BUFFER: 'MSE_APPEND_BUFFER',\n    MSE_OTHER: 'MSE_OTHER',\n    MSE_FULL: 'MSE_FULL',\n    MSE_CHANGE_TYPE: 'MSE_CHANGE_TYPE',\n    OPTION: 'OPTION',\n    DASH: 'DASH',\n    LICENSE: 'LICENSE',\n    CUSTOM_LICENSE: 'CUSTOM_LICENSE',\n    MSE_HIJACK: 'MSE_HIJACK',\n    EME_HIJACK: 'EME_HIJACK',\n    SIDX: 'SIDX',\n    NO_CANPLAY_ERROR: 'NO_CANPLAY_ERROR',\n    BUFFERBREAK_ERROR: 'BUFFERBREAK_ERROR',\n    WAITING_TIMEOUT_ERROR: 'WAITING_TIMEOUT_ERROR',\n    MEDIA_ERR_ABORTED: 'MEDIA_ERR_ABORTED',\n    MEDIA_ERR_NETWORK: 'MEDIA_ERR_NETWORK',\n    MEDIA_ERR_DECODE: 'MEDIA_ERR_DECODE',\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 'MEDIA_ERR_SRC_NOT_SUPPORTED',\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 'MEDIA_ERR_CODEC_NOT_SUPPORTED',\n    MEDIA_ERR_URL_EMPTY: 'MEDIA_ERR_URL_EMPTY'\n  }\n}\n\nexport const ERR_CODE = {\n  [ERR.MANIFEST]: {\n    HLS: 1100,\n    DASH: 1200\n  },\n  [ERR.NETWORK]: 2100,\n  [ERR.NETWORK_TIMEOUT]: 2101,\n  [ERR.NETWORK_FORBIDDEN]: 2103,\n  [ERR.NETWORK_NOTFOUND]: 2104,\n  [ERR.NETWROK_RANGE_NOT_SATISFIABLE]: 2116,\n  [ERR.DEMUX]: {\n    FLV: 3100,\n    HLS: 3200,\n    MP4: 3300,\n    FMP4: 3400,\n    SIDX: 3410\n  },\n  [ERR.REMUX]: {\n    FMP4: 4100,\n    MP4: 4200\n  },\n  [ERR.MEDIA]: {\n    MEDIA_ERR_ABORTED: 5101,\n    MEDIA_ERR_NETWORK: 5102,\n    MEDIA_ERR_DECODE: 5103,\n    MEDIA_ERR_SRC_NOT_SUPPORTED: 5104,\n    MEDIA_ERR_CODEC_NOT_SUPPORTED: 5105,\n    MEDIA_ERR_URL_EMPTY: 5106,\n    MSE_ADD_SB: 5200,\n    MSE_APPEND_BUFFER: 5201,\n    MSE_OTHER: 5202,\n    MSE_FULL: 5203,\n    MSE_HIJACK: 5204,\n    MSE_CHANGE_TYPE: 5205,\n    EME_HIJACK: 5301\n  },\n  [ERR.DRM]: {\n    LICENSE: 7100,\n    CUSTOM_LICENSE: 7200\n  },\n  [ERR.OTHER]: 8000,\n  [ERR.RUNTIME]: {\n    NO_CANPLAY_ERROR: 9001,\n    BUFFERBREAK_ERROR: 9002,\n    WAITING_TIMEOUT_ERROR: 9003\n  }\n}\n\nexport class StreamingError extends Error {\n  constructor (type, subType, origin, payload, msg) {\n    super(msg || origin?.message)\n    this.errorType = type === ERR.NETWORK_TIMEOUT ? ERR.NETWORK : type\n    this.originError = origin\n    this.ext = payload\n    this.errorCode = ERR_CODE[type][subType] || ERR_CODE[type]\n    this.errorMessage = this.message\n    if (!this.errorCode) {\n      this.errorType = ERR.OTHER\n      this.errorCode = ERR_CODE[this.errorType]\n    }\n  }\n\n  static create (type, subType, origin, payload, msg) {\n    if (type instanceof StreamingError) {\n      return type\n    } else if (type instanceof Error) {\n      origin = type\n      type = ''\n    }\n\n    if (!type) type = ERR.OTHER\n\n    return new StreamingError(type, subType, origin, payload, msg)\n  }\n\n  static network (error) {\n    return new StreamingError(\n      error?.isTimeout ? ERR.NETWORK_TIMEOUT : ERR.NETWORK,\n      null,\n      error instanceof Error ? error : null,\n      {\n        url: error?.url,\n        response: error?.response,\n        httpCode: error?.response?.status\n      }\n    )\n  }\n}\n","\nexport const LogCacheLevel = {\n  'DEBUG': 1,\n  'LOG': 2,\n  'WARN': 3,\n  'ERROR': 4\n}\nconst LOG_MAX_SIZE = 200 * 1024\nconst SIMPLE_TYPE = ['Boolean', 'Number' ,'String', 'Undefined','Null', 'Date','Object']\nexport class Logger {\n  constructor (name,config) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    this.logCacheLevel = config?.logCacheLevel || 3\n    this.logMaxSize = config?.logMaxSize || LOG_MAX_SIZE\n    this.logSize = 0\n    this.logTextArray = []\n  }\n\n  debug (...args) {\n    this.logCache(LogCacheLevel.DEBUG,...args)\n    if (Logger.disabled) return\n    console.debug(`[${nowTime()}]`, this._prefix, ...args)\n  }\n\n  log (...args) {\n    this.logCache(LogCacheLevel.LOG,...args)\n    if (Logger.disabled) return\n    console.log(`[${nowTime()}]`, this._prefix, ...args)\n  }\n\n  warn (...args) {\n    this.logCache(LogCacheLevel.WARN,...args)\n    if (Logger.disabled) return\n    console.warn(`[${nowTime()}]`, this._prefix, ...args)\n  }\n\n  error (...args) {\n    this.logCache(LogCacheLevel.ERROR,...args)\n    if (Logger.disabled) return\n    console.error(`[${nowTime()}]`, this._prefix, ...args)\n  }\n\n  logCache (logCacheLevel, ...logText) {\n    if (logCacheLevel < this.logCacheLevel) return\n    let text = ''\n    try {\n      const finLogText = logText.map( item => logable(item))\n      text = `[${nowTime()}]` + this._prefix + (JSON.stringify(finLogText))\n    } catch (e) {\n      return\n    }\n    if (logCacheLevel >= this.logCacheLevel) {\n      this.logSize += text.length\n      this.logTextArray.push(text)\n    }\n    if (this.logSize > this.logMaxSize) {\n      const delLog = this.logTextArray.shift()\n      this.logSize -= delLog.length\n    }\n  }\n\n  getLogCache () {\n    const logText = this.logTextArray.join('\\n')\n    this.reset()\n    return logText\n  }\n\n  reset () {\n    this.logTextArray = []\n    this.logSize = 0\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n\n  setLogLevel (val) {\n    this.logCacheLevel = val\n  }\n}\nfunction nowTime () {\n  return new Date().toLocaleString()\n}\n\nfunction reduceDepth (val) {\n  if (typeof val !== 'object') {\n    return val\n  }\n  const objType = Object.prototype.toString.call(val).slice(8, -1)\n  switch (objType) {\n    case 'Array':\n    case 'Uint8Array':\n    case 'ArrayBuffer':\n\n      return objType + '[' + val.length + ']'\n    case 'Object':\n      return '{}'\n    default:\n      return objType\n  }\n}\n\nfunction logable (obj, maxDepth, depth) {\n  if (!depth) depth = 1\n  if (!maxDepth) maxDepth = 2\n  const result = {}\n\n  if (!obj || typeof obj !== 'object') {\n    return obj\n  }\n\n  const objType = Object.prototype.toString.call(obj).slice(8, -1)\n  if (!SIMPLE_TYPE.includes(objType)) {\n    return objType\n  }\n\n  if (depth > maxDepth) {\n    return undefined\n  }\n\n\n  for (const key in obj) {\n    if (Object.prototype.hasOwnProperty.call(obj, key)) {\n      if (depth === maxDepth) {\n        result[key] = reduceDepth(obj[key])\n      } else if (typeof obj[key] === 'object') {\n        result[key] = logable(obj[key], maxDepth, depth + 1)\n      } else {\n        result[key] = obj[key]\n      }\n    }\n  }\n  return result\n}\n\n","export function createPublicPromise () {\n  let res, rej\n  const promise = new Promise((resolve, reject) => {\n    res = resolve\n    rej = reject\n  })\n  promise.used = false\n  promise.resolve = (...args) => {\n    promise.used = true\n    return res(...args)\n  }\n  promise.reject = (...args) => {\n    promise.used = true\n    return rej(...args)\n  }\n  return promise\n}\n\nexport function nowTime () {\n  try {\n    return parseInt(performance.now(), 10)\n  } catch (e) {\n    return new Date().getTime()\n  }\n}\n\n\nexport const SafeJSON = {\n  stringify (obj) {\n    try {\n      return JSON.stringify(obj)\n    } catch (e) {\n      return ''\n    }\n  },\n  parse (obj) {\n    try {\n      return JSON.parse(obj)\n    } catch (e) {\n      return undefined\n    }\n  }\n}\n","/* eslint-disable no-undef */\nimport { Buffer } from './buffer'\nimport { isBrowser } from './env'\nimport { ERR, StreamingError } from './error'\nimport { Logger } from './logger'\nimport { createPublicPromise, nowTime, SafeJSON } from './utils'\n\nfunction getMediaSource (preferMMS = true) {\n  try {\n    if (!isBrowser) return null\n\n    if (preferMMS && typeof ManagedMediaSource !== 'undefined') return ManagedMediaSource\n\n    return window.MediaSource\n  } catch (e) {}\n}\n\nfunction isMMS (mediaSource) {\n  return /ManagedMediaSource/gi.test(Object.prototype.toString.call(mediaSource))\n}\n\n/**\n * @param {TimeRanges} buffered\n */\nfunction getTimeRanges (buffered) {\n  const ranges = []\n\n  if (buffered instanceof TimeRanges) {\n    for (let i = 0; i < buffered.length; i++) {\n      ranges.push({\n        start: buffered.start(i),\n        end: buffered.end(i)\n      })\n    }\n  }\n  return ranges\n}\n\n/** @enum {string} */\nexport const MSEErrorType = {\n  UPDATE_ERROR: 'updateError'\n}\n\nconst OP_NAME = {\n  APPEND: 'appendBuffer',\n  REMOVE: 'removeBuffer',\n  UPDATE_DURATION:'updateDuration'\n}\n\nexport class MSEError extends Error {\n  /**\n   * @param {MSEErrorType} type\n   * @param {any} [msg]\n   */\n  constructor (type, msg) {\n    super(msg || type)\n    this.type = type\n    this.msg = msg\n  }\n}\n\nexport class MSE {\n  static VIDEO = 'video'\n\n  static AUDIO = 'audio'\n\n  /**\n   * @param {string} [mime='video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"']\n   * @param { boolean} preferMMS\n   * @returns {boolean}\n   */\n  static isSupported (mime = 'video/mp4; codecs=\"avc1.42E01E,mp4a.40.2\"') {\n    const MediaSource = getMediaSource()\n    if (!MediaSource) return false\n    try {\n      return MediaSource.isTypeSupported(mime)\n    } catch (error) {\n      this._logger.error(mime, error)\n      return false\n    }\n  }\n\n  static isMMSOnly () {\n    return typeof ManagedMediaSource !== 'undefined' && typeof MediaSource === 'undefined'\n  }\n\n  /** @type { HTMLMediaElement | null } */\n  media = null\n\n  /** @type { MediaSource | null } */\n  mediaSource = null\n\n  _openPromise = createPublicPromise()\n\n  _queue = Object.create(null)\n\n  _sourceBuffer = Object.create(null)\n\n  _mseFullFlag = {}\n\n  _st = 0\n\n  _opst = 0\n\n  _logger = null\n\n  _config = null\n  _url = null\n\n\n  static getDefaultConfig () {\n    return {\n      openLog: false,\n      preferMMS: false\n    }\n  }\n\n  /**\n   * @param {HTMLMediaElement} [media]\n   */\n  constructor (media, config) {\n    this._config = Object.assign(MSE.getDefaultConfig(), config)\n    if (media) this.bindMedia(media)\n    this._logger = new Logger('MSE')\n    if (this._config.openLog) {\n      Logger.enable()\n    }\n  }\n\n  get isOpened () {\n    return this.mediaSource?.readyState === 'open'\n  }\n\n  get hasOpTasks () {\n    let flag = false\n    Object.keys(this._queue).forEach(k => {\n      const queue = this._queue[k]\n      if (Array.isArray(queue)) {\n        flag ||= queue.length > 0\n      }\n    })\n    return flag\n  }\n\n  get url () {\n    return this._url\n  }\n\n  get duration () {\n    return this.mediaSource?.duration || -1\n  }\n\n  get isEnded () {\n    return this.mediaSource ? this.mediaSource.readyState === 'ended' : false\n  }\n\n  get streaming () {\n    return isMMS(this.mediaSource) ? this.mediaSource.streaming : true\n  }\n\n  isFull (type) {\n    return type ? this._mseFullFlag[type] : this._mseFullFlag[MSE.VIDEO]\n  }\n\n  /**\n   * @param { number } duration\n   * @return { Promise }\n   */\n  updateDuration (duration) {\n    const isReduceDuration = this.mediaSource && this.mediaSource.duration > duration\n    if (this.mediaSource && this.mediaSource.duration > duration) {\n      let bufferEnd = 0\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          bufferEnd = Math.max(this.bufferEnd(k) || 0, bufferEnd)\n        } catch (error) {\n          // ignore\n        }\n      })\n      if (duration < bufferEnd) {\n        // 设置值比bufferEnd值小，会导致异常\n        return Promise.resolve()\n      }\n    }\n\n    return this._enqueueBlockingOp(() => {\n      if (this.isEnded) {\n        this._logger.debug('setDuration but ended')\n        return\n      }\n      if (this.mediaSource) {\n        this.mediaSource.duration = duration\n        this._logger.debug('setDuration', duration)\n      }\n    }, OP_NAME.UPDATE_DURATION, {isReduceDuration})\n  }\n\n  /** @return { Promise } */\n  open () {\n    if (this._openPromise.used && !this.isOpened && this.mediaSource) {\n      const ms = this.mediaSource\n      const onOpen = () => {\n        const costTime = nowTime() - this._st\n        this._logger.debug('sourceopen', costTime)\n        ms.removeEventListener('sourceopen', onOpen)\n        this._openPromise.resolve({costtime: costTime})\n      }\n      ms.addEventListener('sourceopen', onOpen)\n      this._openPromise = createPublicPromise()\n    }\n\n    return this._openPromise\n  }\n\n  /**\n   * @private\n   */\n  _onStartStreaming = () => {\n    this._logger.debug('startstreaming')\n  }\n\n  /**\n   * @private\n   */\n  _onEndStreaming = () => {\n    this._logger.debug('endstreaming')\n  }\n\n  /**\n   * @param { HTMLMediaElement } media\n   * @return { Promise }\n   */\n  async bindMedia (media) {\n    if (this.mediaSource || this.media) await this.unbindMedia()\n\n    const MediaSource = getMediaSource(this._config.preferMMS)\n\n    if (!media || !MediaSource) throw new Error('Param media or MediaSource does not exist')\n    this.media = media\n    const ms = this.mediaSource = new MediaSource()\n    const useMMS = isMMS(ms)\n    this._st = nowTime()\n\n    const onOpen = () => {\n      const costTime = nowTime() - this._st\n      this._logger.debug('sourceopen')\n      ms.removeEventListener('sourceopen', onOpen)\n      URL.revokeObjectURL(media.src)\n      this._openPromise.resolve({costtime: costTime})\n    }\n    ms.addEventListener('sourceopen', onOpen)\n    if (useMMS) {\n      ms.addEventListener('startstreaming', this._onStartStreaming)\n      ms.addEventListener('endstreaming', this._onEndStreaming)\n    }\n\n    this._url = URL.createObjectURL(ms)\n    media.src = this._url\n    media.disableRemotePlayback = useMMS\n\n    return this._openPromise\n  }\n\n  /** @return { Promise } */\n  async unbindMedia () {\n    if (!this._openPromise.used) this._openPromise.resolve()\n    const ms = this.mediaSource\n\n    if (ms) {\n      Object.keys(this._queue).forEach((t) => {\n        const queue = this._queue[t]\n        if (queue) {\n          queue.forEach(x => x.promise?.resolve?.())\n        }\n      })\n\n      const hasMetadata = !!this.media && this.media.readyState >= 1\n      const mseOpen = ms.readyState === 'open'\n\n      if (hasMetadata && mseOpen) {\n        try {\n          ms.endOfStream()\n        } catch (error) {\n          // ignore\n        }\n      }\n\n      Object.keys(this._sourceBuffer).forEach(k => {\n        try {\n          ms.removeSourceBuffer(this._sourceBuffer[k])\n        } catch (error) {\n          // ignore\n        }\n      })\n\n      if (isMMS(ms)) {\n        ms.removeEventListener('startstreaming', this._onStartStreaming)\n        ms.removeEventListener('endstreaming', this._onEndStreaming)\n      }\n    }\n\n    if (this.media) {\n      this.media.disableRemotePlayback = false\n      this.media.removeAttribute('src')\n      try {\n        this.media.load()\n      } catch (error) {\n        // ignore\n      }\n      this.media = null\n    }\n\n    this.mediaSource = null\n    this._openPromise = createPublicPromise()\n    this._queue = Object.create(null)\n    this._sourceBuffer = Object.create(null)\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   */\n  createSource (type, mimeType) {\n    if (this._sourceBuffer[type] || !this.mediaSource) return\n    let sb\n    try {\n      sb = this._sourceBuffer[type] = this.mediaSource.addSourceBuffer(mimeType)\n    } catch (error) {\n      throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_ADD_SB, error)\n    }\n    sb.mimeType = mimeType\n    sb.addEventListener('updateend', this._onSBUpdateEnd.bind(this, type))\n    sb.addEventListener('error', this._onSBUpdateError.bind(this, type))\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  changeType (type, mimeType) {\n    const sb = this._sourceBuffer[type]\n    if (!this.mediaSource || !sb || sb.mimeType === mimeType) return Promise.resolve()\n\n    if (typeof sb.changeType !== 'function') {\n      return Promise.reject(\n        new StreamingError(\n          ERR.MEDIA,\n          ERR.SUB_TYPES.MSE_CHANGE_TYPE,\n          new Error('changeType is not a function')\n        )\n      )\n    }\n\n    return this._enqueueOp(type, () => {\n      try {\n        sb.changeType(mimeType)\n      } catch (e) {\n        throw new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_CHANGE_TYPE, e)\n      }\n\n      sb.mimeType = mimeType\n      this._onSBUpdateEnd(type)\n    }, 'changeType', {mimeType})\n  }\n\n  /**\n   * @param { string } type\n   * @param { string } mimeType\n   * @return { Promise }\n   */\n  createOrChangeSource (type, mimeType) {\n    this.createSource(type, mimeType)\n    return this.changeType(type, mimeType)\n  }\n\n  /**\n   * @param { string } type\n   * @param { BufferSource } buffer\n   * @return { Promise }\n   */\n  append (type, buffer, context) {\n    if (!buffer || !buffer.byteLength) {\n      return Promise.resolve()\n    }\n\n    if (!this._sourceBuffer[type]) return Promise.resolve()\n\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      this._logger.debug('MSE APPEND START', context)\n      this._opst = nowTime()\n      this._sourceBuffer[type]?.appendBuffer(buffer)\n    }, OP_NAME.APPEND, context)\n\n  }\n\n  /**\n   * @param { string } type\n   * @param { number } startTime\n   * @param { number } endTime\n   * @return { Promise }\n   */\n  remove (type, startTime, endTime, context) {\n    // if (Object.keys(this._sourceBuffer).length === 1) return Promise.resolve()\n    let isInsertHead = false\n    if (this._mseFullFlag[type]) {\n      isInsertHead = true\n    }\n    return this._enqueueOp(type, () => {\n      if (!this.mediaSource || this.media.error) return\n      const sb = this._sourceBuffer[type]\n      if (startTime >= endTime || !sb) {\n        this._onSBUpdateEnd(type)\n        return\n      }\n      this._opst = nowTime()\n      this._logger.debug('MSE REMOVE START', type, startTime, endTime, context)\n      sb.remove(startTime, endTime)\n    }, OP_NAME.REMOVE, context, isInsertHead)\n  }\n\n  clearBuffer (startTime, endTime) {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      p = this.remove(k, startTime, endTime)\n    })\n    return p || Promise.resolve()\n  }\n\n  clearAllBuffer () {\n    let p\n    Object.keys(this._sourceBuffer).forEach(k => {\n      const sb = this._sourceBuffer[k]\n      p = this.remove(k, 0, Buffer.end(Buffer.get(sb)))\n    })\n    return p\n  }\n\n  clearOpQueues (type, allClear) {\n    this._logger.debug('MSE clearOpQueue START')\n    const queue = this._queue[type]\n    if (allClear && queue) {\n      this._queue[type] = []\n      return\n    }\n    if (!queue || !queue[type] || queue.length < 5) return\n    const initQueue = []\n    queue.forEach(op => {\n      if (op.context && op.context.isinit) {\n        initQueue.push(op)\n      }\n    })\n    this._queue[type] = queue.slice(0, 2)\n    initQueue.length > 0 && this._queue[type].push(...initQueue)\n  }\n\n  /**\n   * @param {EndOfStreamError} [reason]\n   * @returns {Promise}\n   */\n  endOfStream (reason) {\n    if (!this.mediaSource || this.mediaSource.readyState !== 'open') return Promise.resolve()\n    return this._enqueueBlockingOp(() => {\n      const ms = this.mediaSource\n      if (!ms || ms.readyState !== 'open') return\n      this._logger.debug('MSE endOfStream START')\n      if (reason) {\n        ms.endOfStream(reason)\n      } else {\n        ms.endOfStream()\n      }\n    }, 'endOfStream')\n  }\n\n  setLiveSeekableRange (start, end) {\n    const ms = this.mediaSource\n    if (start < 0 || end < start || !ms?.setLiveSeekableRange || ms.readyState !== 'open') return\n    ms.setLiveSeekableRange(start, end)\n  }\n\n  /**\n   * @param {string} type\n   * @returns {?SourceBuffer}\n   */\n  getSourceBuffer (type) {\n    return this._sourceBuffer[type]\n  }\n\n  /**\n   * @param { string } type\n   * @return { TimeRanges | void }\n   */\n  buffered (type) {\n    return Buffer.get(this._sourceBuffer[type])\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferStart (type) {\n    return Buffer.start(this.buffered(type))\n  }\n\n  /**\n   * @param { string } type\n   * @return { number }\n   */\n  bufferEnd (type) {\n    return Buffer.end(this.buffered(type))\n  }\n\n  _enqueueOp (type, exec, opName, context, isInsertHead) {\n    if (!this.mediaSource) return Promise.resolve()\n    const queue = this._queue[type] = this._queue[type] || []\n    const op = {\n      exec,\n      promise: createPublicPromise(),\n      opName,\n      context\n    }\n\n    if (isInsertHead) {\n      queue.splice(0, 0, op)\n      this._mseFullFlag[type] = false\n      this._startQueue(type)\n    } else {\n      queue.push(op)\n    }\n\n    if (this.isOpened || this.isEnded) {\n      if (queue.length === 1) {\n        this._startQueue(type)\n      }\n    } else {\n      this._openPromise.then(() => {\n        if (queue.length === 1) {\n          this._startQueue(type)\n        }\n      })\n    }\n\n\n    return op.promise\n  }\n\n  async _enqueueBlockingOp (exec, opName, context) {\n    if (!this.mediaSource) return Promise.resolve()\n    const types = Object.keys(this._sourceBuffer)\n    if (!types.length) {\n      return exec()\n    }\n\n    const waiters = []\n    types.forEach(t => {\n      const queue = this._queue[t]\n      const prom = createPublicPromise()\n      waiters.push(prom)\n      queue.push({exec: () => {\n        prom.resolve()}, promise: prom, opName, context})\n      if (queue.length === 1) {\n        this._startQueue(t)\n      }\n    })\n\n    return Promise.all(waiters).then(() => {\n      try {\n        return exec()\n      } finally {\n        types.forEach(t => {\n          const queue = this._queue[t]\n          const sb = this._sourceBuffer[t]\n          queue?.shift()\n          if (!sb || !sb.updating) {\n            this._startQueue(t)\n          }\n        })\n      }\n    })\n  }\n\n  _startQueue (type) {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op && !this._mseFullFlag[type]) {\n        try {\n          op.exec()\n        } catch (error) {\n          if (error && error.message && error.message.indexOf('SourceBuffer is full') >= 0) {\n            this._mseFullFlag[type] = true\n            if (op.context && typeof op.context === 'object'){\n              op.context.isFull = true\n            }\n            this._logger.error('[MSE error],  context,', op.context, ' ,name,', op.opName, ',err,SourceBuffer is full')\n            op?.promise?.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_FULL, error))\n          } else {\n            this._logger.error(error)\n            op?.promise?.reject(\n              error.constructor === StreamingError\n                ? error\n                : new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_OTHER, error)\n            )\n            queue.shift()\n            this._startQueue(type)\n          }\n        }\n      }\n    }\n  }\n\n  _onSBUpdateEnd = (type) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (!(op?.opName === OP_NAME.UPDATE_DURATION)) {\n        queue.shift()\n      }\n      if (op) {\n        const costtime = nowTime() - this._opst\n        this._logger.debug(`UpdateEnd(${type}/${op.opName})`, SafeJSON.stringify(getTimeRanges(this._sourceBuffer[type]?.buffered)), costtime, op.context)\n        op.promise.resolve({name: op.opName, context: op.context, costtime})\n        const callback = op.context?.callback\n        if (callback && typeof callback === 'function'){\n          callback(op.context)\n        }\n        this._startQueue(type)\n      }\n    }\n  }\n\n  _onSBUpdateError = (type, event) => {\n    const queue = this._queue[type]\n    if (queue) {\n      const op = queue[0]\n      if (op) {\n        this._logger.error('UpdateError', type, op.opName, op.context)\n        op.promise.reject(new StreamingError(ERR.MEDIA, ERR.SUB_TYPES.MSE_APPEND_BUFFER, event))\n        // Do not shift from queue, 'updateend' event will fire next\n      }\n    }\n  }\n\n  setTimeoffset (type, timestampOffset, context) {\n    return this._enqueueOp(type, () => {\n      if (timestampOffset < 0) {\n        timestampOffset += 0.001\n      }\n      this._sourceBuffer[type].timestampOffset = timestampOffset\n      this._onSBUpdateEnd(type)\n    }, 'setTimeoffset', context)\n  }\n\n  /** *重置decode时间戳 */\n  abort (type, context) {\n    if (!this.isOpened) {\n      return Promise.resolve()\n    }\n    return this._enqueueOp(type, () => {\n      this._sourceBuffer[type].abort()\n      this._onSBUpdateEnd(type)\n    }, 'abort', context)\n  }\n}\n","export const LoaderType = {\n  FETCH: 'fetch',\n  XHR: 'xhr'\n}\n\nexport const ResponseType = {\n  ARRAY_BUFFER: 'arraybuffer',\n  TEXT: 'text',\n  JSON: 'json'\n}\n","import { LoaderType } from './types'\n\nexport class NetError extends Error {\n  retryCount = 0\n  isTimeout = false\n  loaderType = LoaderType.FETCH\n  startTime = 0\n  endTime = 0\n  options = {}\n\n  constructor (url, request, response, msg) {\n    super(msg)\n    this.url = url\n    this.request = request\n    this.response = response\n  }\n}\n","const toString = Object.prototype.toString\n\nexport function isObject (a) {\n  return a !== null && typeof a === 'object'\n}\n\nexport function isPlainObject (val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false\n  }\n\n  const prototype = Object.getPrototypeOf(val)\n  return prototype === null || prototype === Object.prototype\n}\n\nexport function isDate (a) {\n  return toString.call(a) === '[object Date]'\n}\n\nexport function isNumber (n) {\n  return typeof n === 'number' && !Number.isNaN(n)\n}\n","import { isDate, isObject } from '../is'\n\nexport function getRangeValue (value) {\n  if (!value || value[0] === null || value[0] === undefined || (value[0] === 0 && (value[1] === null || value[1] === undefined))) {\n    return\n  }\n  let ret = 'bytes=' + value[0] + '-'\n  if (value[1]) ret += value[1]\n  return ret\n}\n\nfunction encode (val) {\n  return encodeURIComponent(val)\n    .replace(/%3A/gi, ':')\n    .replace(/%24/g, '$')\n    .replace(/%2C/gi, ',')\n    .replace(/%20/g, '+')\n    .replace(/%5B/gi, '[')\n    .replace(/%5D/gi, ']')\n}\n\nexport function setUrlParams (url, params) {\n  if (!url) return\n  if (!params) return url\n  let v\n  const str = Object.keys(params).map(k => {\n    v = params[k]\n    if (v === null || v === undefined) return\n    if (Array.isArray(v)) {\n      k = k + '[]'\n    } else {\n      v = [v]\n    }\n\n    return v.map(x => {\n      if (isDate(x)) {\n        x = x.toISOString()\n      } else if (isObject(x)) {\n        x = JSON.stringify(x)\n      }\n      return `${encode(k)}=${encode(x)}`\n    }).join('&')\n  }).filter(Boolean).join('&')\n\n  if (str) {\n    const hashIndex = url.indexOf('#')\n    if (hashIndex !== -1) {\n      url = url.slice(0, hashIndex)\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + str\n  }\n\n  return url\n}\n\nexport function createResponse (\n  data,\n  done,\n  response,\n  contentLength,\n  age,\n  startTime,\n  firstByteTime,\n  index,\n  range,\n  vid,\n  priOptions\n) {\n  age = (age !== null && age !== undefined) ? parseFloat(age) : null\n  contentLength = parseInt(contentLength || '0', 10)\n  if (Number.isNaN(contentLength)) contentLength = 0\n  const options = { range, vid, index, contentLength, age, startTime, firstByteTime, endTime: Date.now(), priOptions }\n  return { data, done, options, response }\n}\n\nexport function calculateSpeed (byteLen, milliSecond) {\n  return Math.round(byteLen * 8 * 1000 / milliSecond / 1024) // Kb/s\n}\n","export const EVENT = {\n  ERROR: 'error',\n\n  TTFB: 'core.ttfb',\n  LOAD_START: 'core.loadstart',\n  LOAD_RESPONSE_HEADERS: 'core.loadresponseheaders',\n  LOAD_COMPLETE: 'core.loadcomplete',\n  LOAD_RETRY: 'core.loadretry',\n  SOURCEBUFFER_CREATED: 'core.sourcebuffercreated',\n  MEDIASOURCE_OPENED: 'core.mediasourceopened',\n  ANALYZE_DURATION_EXCEEDED: 'core.analyzedurationexceeded',\n  APPEND_BUFFER: 'core.appendbuffer',\n  REMOVE_BUFFER: 'core.removebuffer',\n  BUFFEREOS: 'core.buffereos',\n  KEYFRAME: 'core.keyframe',\n  CHASEFRAME: 'core.chaseframe',\n  METADATA_PARSED: 'core.metadataparsed',\n  SEI: 'core.sei',\n  SEI_IN_TIME: 'core.seiintime',\n  FLV_SCRIPT_DATA: 'core.flvscriptdata',\n  LOWDECODE: 'core.lowdecode',\n  SWITCH_URL_SUCCESS: 'core.switchurlsuccess',\n  SWITCH_URL_FAILED: 'core.switchurlfailed',\n  SPEED: 'core.speed',\n  HLS_MANIFEST_LOADED: 'core.hlsmanifestloaded',\n  HLS_LEVEL_LOADED: 'core.hlslevelloaded',\n  DEMUXED_TRACK:'core.demuxedtrack',\n\n  STREAM_EXCEPTION: 'core.streamexception',\n  LARGE_AV_FIRST_FRAME_GAP_DETECT: 'LARGE_AV_FIRST_FRAME_GAP_DETECT',\n  LARGE_VIDEO_DTS_GAP_DETECT: 'LARGE_VIDEO_DTS_GAP_DETECT',\n  LARGE_AUDIO_DTS_GAP_DETECT: 'LARGE_AUDIO_DTS_GAP_DETECT',\n  AUDIO_GAP_DETECT: 'AUDIO_GAP_DETECT',\n  AUDIO_OVERLAP_DETECT: 'AUDIO_OVERLAP_DETECT',\n  MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT: 'MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT',\n  REAL_TIME_SPEED: 'real_time_speed'\n}\n","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nconst CACHESIZE = 2 * 1024 * 1024\nexport class FetchLoader extends EventEmitter {\n  _abortController = null\n  _timeoutTimer = null\n  _reader = null\n  _response = null\n  _aborted = false\n  _index = -1\n  _range = null\n  _receivedLength = 0\n  _running = false\n  _logger = null\n  _vid = ''\n  _onProcessMinLen = 0\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n  constructor () {\n    super()\n  }\n\n  load ({\n    url,\n    vid,\n    timeout, // ms\n    responseType,\n    onProgress,\n    index,\n    onTimeout,\n    onCancel,\n    range,\n    transformResponse,\n    request,\n    params,\n    logger,\n\n    method,\n    headers,\n    body,\n    mode,\n    credentials,\n    cache,\n    redirect,\n    referrer,\n    referrerPolicy,\n    onProcessMinLen,\n    priOptions\n  }) {\n    this._logger = logger\n    this._aborted = false\n    this._onProcessMinLen = onProcessMinLen\n    this._onCancel = onCancel\n    this._abortController = typeof AbortController !== 'undefined' && new AbortController()\n    this._running = true\n    this._index = index\n    this._range = range || [0, 0]\n    this._vid = vid || url\n    this._priOptions = priOptions || {}\n    const init = {\n      method,\n      headers,\n      body,\n      mode,\n      credentials,\n      cache,\n      redirect,\n      referrer,\n      referrerPolicy,\n      signal: this._abortController?.signal\n    }\n\n    let isTimeout = false\n    clearTimeout(this._timeoutTimer)\n\n    url = setUrlParams(url, params)\n\n    const rangeValue = getRangeValue(range)\n    if (rangeValue) {\n      if (request) {\n        headers = request.headers\n      } else {\n        headers = init.headers = init.headers || (Headers ? new Headers() : {})\n      }\n      if (Headers && headers instanceof Headers) {\n        headers.append('Range', rangeValue)\n      } else {\n        headers.Range = rangeValue\n      }\n    }\n\n    if (timeout) {\n      this._timeoutTimer = setTimeout(() => {\n        isTimeout = true\n        this.cancel()\n        if (onTimeout) {\n          const error = new NetError(url, init, null, 'timeout')\n          error.isTimeout = true\n          onTimeout(error, {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n      }, timeout)\n    }\n\n    const startTime = Date.now()\n    this._logger.debug('[fetch load start], index,', index, ',range,', range)\n    return new Promise((resolve, reject) => {\n      fetch(request || url, request ? undefined : init).then(async (response) => {\n        clearTimeout(this._timeoutTimer)\n        this._response = response\n        if (this._aborted || !this._running) return\n        if (transformResponse) {\n          response = transformResponse(response, url) || response\n        }\n        if (!response.ok) {\n          throw new NetError(url, init, response, 'bad network response')\n        }\n\n        const firstByteTime = Date.now()\n        let data\n        if (responseType === ResponseType.TEXT) {\n          data = await response.text()\n          this._running = false\n        } else if (responseType === ResponseType.JSON) {\n          data = await response.json()\n          this._running = false\n        } else {\n          if (onProgress) {\n            this.resolve = resolve\n            this.reject = reject\n            this._loadChunk(response, onProgress, startTime, firstByteTime)\n            return\n          } else {\n            data = await response.arrayBuffer()\n            data = new Uint8Array(data)\n            this._running = false\n            const costTime = Date.now() - startTime\n            const speed = calculateSpeed(data.byteLength, costTime)\n            this.emit(EVENT.REAL_TIME_SPEED, {speed,len: data.byteLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n          }\n        }\n        this._logger.debug('[fetch load end], index,', index, ',range,', range)\n        resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          startTime,\n          firstByteTime,\n          index,\n          range,\n          this._vid,\n          this._priOptions\n        ))\n      }).catch((error) => {\n        clearTimeout(this._timeoutTimer)\n        this._running = false\n        if (this._aborted && !isTimeout) return\n        error = error instanceof NetError ? error : new NetError(url, init, null, error?.message)\n        error.startTime = startTime\n        error.endTime = Date.now()\n        error.isTimeout = isTimeout\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        reject(error)\n      })\n    })\n  }\n\n  async cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._running = false\n    if (this._response) {\n      try {\n        // await this._response.body.cancel()\n        if (this._reader) {\n          await this._reader.cancel()\n        }\n      } catch (error) {\n        // ignore\n      }\n      this._response = this._reader = null\n    }\n\n    if (this._abortController) {\n      try {\n        this._abortController.abort()\n      } catch (error) {\n        // ignore\n      }\n      this._abortController = null\n    }\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n  }\n\n  _loadChunk (response, onProgress, st, firstByteTime) {\n    if (!response.body || !response.body.getReader) {\n      this._running = false\n      const err = new NetError(response.url, '', response, 'onProgress of bad response.body.getReader')\n      err.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      this.reject(err)\n      return\n    }\n    if (this._onProcessMinLen > 0) {\n      this._cache = new Uint8Array(CACHESIZE)\n      this._writeIdx = 0\n    }\n    const reader = this._reader = response.body.getReader()\n    let data\n\n    let startTime\n    let endTime\n    const pump = async () => {\n      startTime = Date.now()\n      try {\n        data = await reader.read()\n        endTime = Date.now()\n      } catch (e) {\n        // request aborted\n        endTime = Date.now()\n        if (!this._aborted) {\n          this._running = false\n          e.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n          this.reject(e)\n        }\n        return\n      }\n      const startRange = this._range?.length > 0 ? this._range[0] : 0\n      const startByte = startRange + this._receivedLength\n      if (this._aborted) {\n        this._running = false\n        onProgress(undefined, false, { range: [startByte, startByte], vid: this._vid, index: this._index, startTime, endTime, st, firstByteTime, priOptions:this._priOptions }, response)\n        return\n      }\n      const curLen = data.value ? data.value.byteLength : 0\n      this._receivedLength += curLen\n      this._logger.debug('【fetchLoader,onProgress call】,task,', this._range, ', start,', startByte, ', end,', startRange + this._receivedLength, ', done,', data.done)\n      let retData\n      if (this._onProcessMinLen > 0) {\n        if (this._writeIdx + curLen >= this._onProcessMinLen || data.done) {\n          retData = new Uint8Array(this._writeIdx + curLen)\n          retData.set(this._cache.slice(0, this._writeIdx), 0)\n          curLen > 0 && retData.set(data.value, this._writeIdx)\n          this._writeIdx = 0\n          this._logger.debug('【fetchLoader,onProgress enough】,done,', data.done, ',len,', retData.byteLength, ', writeIdx,', this._writeIdx)\n        } else {\n          if (curLen > 0 && this._writeIdx + curLen < CACHESIZE) {\n            this._cache.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            this._logger.debug('【fetchLoader,onProgress cache】,len,', curLen, ', writeIdx,', this._writeIdx)\n          } else if (curLen > 0) {\n            const temp = new Uint8Array(this._writeIdx + curLen + 2048)\n            this._logger.debug('【fetchLoader,onProgress extra start】,size,', this._writeIdx + curLen + 2048, ', datalen,', curLen, ', writeIdx,', this._writeIdx)\n            temp.set(this._cache.slice(0, this._writeIdx), 0)\n            curLen > 0 && temp.set(data.value, this._writeIdx)\n            this._writeIdx += curLen\n            delete this._cache\n            this._cache = temp\n            this._logger.debug('【fetchLoader,onProgress extra end】,len,', curLen, ', writeIdx,', this._writeIdx)\n          }\n        }\n      } else {\n        retData = data.value\n      }\n      if (retData && retData.byteLength > 0 || data.done) {\n        onProgress(retData, data.done, {\n          range: [this._range[0] + this._receivedLength - (retData ? retData.byteLength : 0), this._range[0] + this._receivedLength],\n          vid: this._vid,\n          index: this._index,\n          startTime,\n          endTime,\n          st,\n          firstByteTime,\n          priOptions:this._priOptions\n        }, response)\n      }\n      if (!data.done) {\n        pump()\n      } else {\n        const costTime = Date.now() - st\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed,len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: this._range, priOptions: this._priOptions})\n        this._running = false\n        this._logger.debug('[fetchLoader onProgress end],task,', this._range, ',done,', data.done)\n        this.resolve(createResponse(\n          data,\n          true,\n          response,\n          response.headers.get('Content-Length'),\n          response.headers.get('age'),\n          st,\n          firstByteTime,\n          this._index,\n          this._range,\n          this._vid,\n          this._priOptions\n        ))\n      }\n    }\n    pump()\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  static isSupported () {\n    return !!(typeof fetch !== 'undefined')\n  }\n}\n","import { NetError } from './error'\nimport { createResponse, getRangeValue, setUrlParams, calculateSpeed } from './helper'\nimport { ResponseType } from './types'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\nexport class XhrLoader extends EventEmitter {\n\n  _xhr = null\n  _aborted = false\n  _timeoutTimer = null\n  _range = null\n  _receivedLength = 0\n  _url = null\n  _onProgress = null\n  _index = -1\n  _headers = null\n  // _chunkSizeKBList = [\n  //   128, 256, 384, 512, 768, 1024, 1536, 2048, 3072, 4096, 5120, 6144, 7168, 8192\n  // ]\n\n  _currentChunkSizeKB = 384\n  _timeout = null\n  _xhr = null\n  _withCredentials = null\n  _startTime = -1\n  // _speedSampler = new SpeedSampler()\n  _loadCompleteResolve = null\n  _loadCompleteReject = null\n  _runing = false\n  _logger = false\n  _vid = ''\n  _responseType\n  _credentials\n  _method\n  _transformResponse\n  _firstRtt\n  _onCancel = null\n  _priOptions = null // 比较私有化的参数传递，回调时候透传\n\n\n  constructor () {\n    super()\n  }\n\n  load (req) {\n    clearTimeout(this._timeoutTimer)\n    this._logger = req.logger\n    this._range = req.range\n    this._onProgress = req.onProgress\n    this._index = req.index\n    this._headers = req.headers\n    this._withCredentials = req.credentials === 'include' || req.credentials === 'same-origin'\n    this._body = req.body || null\n    req.method && (this._method = req.method)\n    this._timeout = req.timeout || null\n    this._runing = true\n    this._vid = req.vid || req.url\n    this._responseType = req.responseType\n    this._firstRtt = -1\n    this._onTimeout = req.onTimeout\n    this._onCancel = req.onCancel\n    this._request = req.request\n    this._priOptions = req.priOptions || {}\n    this._logger.debug('【xhrLoader task】, range', this._range)\n\n    this._url = setUrlParams(req.url, req.params)\n\n    const startTime = Date.now()\n    return new Promise((resolve, reject) => {\n      this._loadCompleteResolve = resolve\n      this._loadCompleteReject = reject\n      this._startLoad()\n    }).catch((error) => {\n      clearTimeout(this._timeoutTimer)\n      this._runing = false\n      if (this._aborted) return\n      error = error instanceof NetError ? error : new NetError(this._url, this._request)\n      error.startTime = startTime\n      error.endTime = Date.now()\n      error.options = {index: this._index, vid: this._vid, priOptions: this._priOptions}\n      throw error\n    })\n  }\n\n  _startLoad () {\n    let range = null\n    if (this._responseType === ResponseType.ARRAY_BUFFER && this._range && this._range.length > 1) {\n      if (this._onProgress) {\n        this._firstRtt = -1\n        const chunkSize = this._currentChunkSizeKB * 1024\n        const from = this._range[0] + this._receivedLength\n        let to = this._range[1]\n        if (chunkSize < this._range[1] - from) {\n          to = from + chunkSize\n        }\n        range = [from, to]\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', SubRange, ', range)\n      } else {\n        range = this._range\n        this._logger.debug('[xhr_loader->],tast :', this._range, ', allRange, ', range)\n      }\n    }\n    this._internalOpen(range)\n  }\n\n  _internalOpen (range) {\n    try {\n      this._startTime = Date.now()\n      const xhr = this._xhr = new XMLHttpRequest()\n      xhr.open(this._method || 'GET', this._url, true)\n      xhr.responseType = this._responseType\n      this._timeout && (xhr.timeout = this._timeout)\n      xhr.withCredentials = this._withCredentials\n      xhr.onload = this._onLoad.bind(this)\n      xhr.onreadystatechange = this._onReadyStatechange.bind(this)\n      xhr.onerror = (errorEvent) => {\n        this._running = false\n        const error = new NetError(this._url, this._request, errorEvent?.currentTarget?.response, ('xhr.onerror.status:' + errorEvent?.currentTarget?.status + ',statusText,' + errorEvent?.currentTarget?.statusText))\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      xhr.ontimeout = (event) => {\n        this.cancel()\n        const error = new NetError(this._url, this._request, {status:408}, 'timeout')\n        if (this._onTimeout) {\n          error.isTimeout = true\n          this._onTimeout(error,{index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n        }\n        error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n        this._loadCompleteReject(error)\n      }\n      const headers = this._headers || {}\n      const rangeValue = getRangeValue(range)\n      if (rangeValue) {\n        headers.Range = rangeValue\n      }\n      if (headers) {\n        Object.keys(headers).forEach(k => {\n          xhr.setRequestHeader(k, headers[k])\n        })\n      }\n      this._logger.debug('[xhr.send->] tast,', this._range, ',load sub range, ', range)\n      xhr.send(this._body)\n    } catch (e) {\n      e.options = {index: this._index, range, vid: this._vid, priOptions: this._priOptions}\n      this._loadCompleteReject(e)\n    }\n  }\n\n  _onReadyStatechange (e) {\n    const xhr = e.target\n    if (xhr.readyState === 2) {\n      this._firstRtt < 0 && (this._firstRtt = Date.now())\n    }\n  }\n\n  _onLoad (e) {\n    const status = e.target.status\n    if (status < 200 || status > 299) {\n      const error = new NetError(this._url, null, { ...e.target.response, status }, 'bad response,status:' + status)\n      error.options = {index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions}\n      return this._loadCompleteReject(error)\n    }\n    let data = null\n    let done = false\n    let byteStart\n    const startRange = (this._range?.length > 0 ? this._range [0] : 0 )\n    if (this._responseType === ResponseType.ARRAY_BUFFER) {\n      const chunk = new Uint8Array(e.target.response)\n      byteStart = startRange + this._receivedLength\n      if (chunk && chunk.byteLength > 0) {\n        this._receivedLength += chunk.byteLength\n        const costTime = Date.now() - this._startTime\n        const speed = calculateSpeed(this._receivedLength, costTime)\n        this.emit(EVENT.REAL_TIME_SPEED, {speed, len: this._receivedLength, time: costTime, vid: this._vid, index: this._index, range: [byteStart, startRange + this._receivedLength], priOptions: this._priOptions})\n      }\n      data = chunk\n      if (this._range?.length > 1 && this._range[1] && this._receivedLength < this._range[1] - this._range[0]) {\n        done = false\n      } else {\n        done = true\n      }\n      this._logger.debug('[xhr load done->], tast :', this._range, ', start', byteStart, 'end ', startRange + this._receivedLength, ',dataLen,', (chunk ? chunk.byteLength : 0), ',receivedLength', this._receivedLength, ',index,', this._index, ', done,', done)\n    } else {\n      done = true\n      data = e.target.response\n    }\n    let response = {\n      ok: status >= 200 && status < 300,\n      status,\n      statusText: this._xhr.statusText,\n      url: this._xhr.responseURL,\n      headers: this._getHeaders(this._xhr),\n      body: this._xhr.response\n    }\n    if (this._transformResponse) {\n      response = this._transformResponse(response, this._url) || response\n    }\n    if (this._onProgress) {\n      this._onProgress(data, done, { index: this._index, vid: this._vid, range: [byteStart, startRange + this._receivedLength], startTime: this._startTime, endTime: Date.now(), priOptions: this._priOptions }, response)\n    }\n\n    if (!done) {\n      this._startLoad()\n    } else {\n      this._runing = false\n      this._loadCompleteResolve && this._loadCompleteResolve(createResponse(\n        this._onProgress ? null : data,\n        done,\n        response,\n        response.headers['content-length'],\n        response.headers.age,\n        this._startTime,\n        this._firstRtt,\n        this._index,\n        this._range,\n        this._vid,\n        this._priOptions\n      ))\n    }\n  }\n\n  cancel () {\n    if (this._aborted) return\n    this._aborted = true\n    this._runing = false\n    super.removeAllListeners()\n    if (this._onCancel) {\n      this._onCancel({index: this._index, range: this._range, vid: this._vid, priOptions: this._priOptions})\n    }\n    if (this._xhr) {\n      return this._xhr.abort()\n    }\n  }\n\n  static isSupported () {\n    return typeof XMLHttpRequest !== 'undefined'\n  }\n\n  get receiveLen () {\n    return this._receivedLength\n  }\n\n  get running () {\n    return this._running\n  }\n\n  set running (status) {\n    this._running = status\n  }\n\n  _getHeaders (xhr) {\n    const headerLines = xhr.getAllResponseHeaders().trim().split('\\r\\n')\n    const headers = {}\n    for (const header of headerLines) {\n      const parts = header.split(': ')\n      headers[parts[0].toLowerCase()] = parts.slice(1).join(': ')\n    }\n    return headers\n  }\n}\n","import { FetchLoader } from './fetch'\nimport { XhrLoader } from './xhr'\nimport { LoaderType } from './types'\nimport { createPublicPromise } from '../utils'\nimport { Logger } from '../logger'\n\nexport class Task {\n  constructor (type, config) {\n    this.promise = createPublicPromise()\n    this.alive = !!config.onProgress\n    !config.logger && (config.logger = new Logger('Loader'))\n    this._loaderType = type\n    this._loader = type === LoaderType.FETCH && typeof fetch !== 'undefined' ? new FetchLoader() : new XhrLoader()\n    this._config = config\n    this._retryCount = 0\n    this._retryTimer = null\n    this._canceled = false\n    this._retryCheckFunc = config.retryCheckFunc\n    this._logger = config.logger\n  }\n\n  exec () {\n    const {\n      retry,\n      retryDelay,\n      onRetryError,\n      transformError,\n      ...rest\n    } = this._config\n\n    const request = async () => {\n      try {\n        const response = await this._loader.load(rest)\n        this.promise.resolve(response)\n      } catch (e) {\n        this._loader.running = false\n        this._logger.debug('[task request catch err]', e)\n        if (this._canceled) return\n\n        e.loaderType = this._loaderType\n        e.retryCount = this._retryCount\n\n        let error = e\n        if (transformError) {\n          error = transformError(error) || error\n        }\n\n        if (onRetryError && this._retryCount > 0) onRetryError(error, this._retryCount, {index: rest.index, vid: rest.vid, range: rest.range, priOptions: rest.priOptions})\n\n        this._retryCount++\n        let isRetry = true\n        if (this._retryCheckFunc) {\n          isRetry = this._retryCheckFunc(e)\n        }\n        if (isRetry && this._retryCount <= retry) {\n          clearTimeout(this._retryTimer)\n          this._logger.debug('[task request setTimeout],retry', this._retryCount, ',retry range,', rest.range)\n          this._retryTimer = setTimeout(request, retryDelay)\n          return\n        }\n        this.promise.reject(error)\n      }\n    }\n\n    request()\n    return this.promise\n  }\n\n  async cancel () {\n    clearTimeout(this._retryTimer)\n    this._canceled = true\n    this._loader.running = false\n    return this._loader.cancel()\n  }\n\n  get running () {\n    return this._loader && this._loader.running\n  }\n\n  get loader () {\n    return this._loader\n  }\n}\n","export function isMediaPlaying (media) {\n  return media && !media.paused && !media.ended && media.playbackRate !== 0 && media.readyState !== 0\n}\n\nexport function getVideoPlaybackQuality (video) {\n  if (!video) return {}\n  if (typeof video.getVideoPlaybackQuality === 'function') {\n    const info = video.getVideoPlaybackQuality()\n    return {\n      droppedVideoFrames: info.droppedVideoFrames || info.corruptedVideoFrames,\n      totalVideoFrames: info.totalVideoFrames,\n      creationTime: info.creationTime\n    }\n  }\n\n  return {\n    droppedVideoFrames: video.webkitDroppedFrameCount,\n    totalVideoFrames: video.webkitDecodedFrameCount,\n    creationTime: performance.now()\n  }\n}\n\n/**\n * @param {Array.<Uint8Array>} arr\n * @returns\n */\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  if (arr.length < 2) return arr[0]\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport function sleep (t = 0) {\n  return new Promise((resolve) => setTimeout(resolve, t))\n}\n","import { FetchLoader } from './fetch'\nimport { LoaderType, ResponseType } from './types'\nimport { getConfig } from './config'\nimport { Task } from './task'\nimport { isPlainObject } from '../is'\nimport { sleep } from '../streaming-helper'\nimport { EVENT } from '../event'\nimport EventEmitter from 'eventemitter3'\n\nexport {\n  LoaderType,\n  ResponseType\n}\n\nexport class NetLoader extends EventEmitter {\n  type = LoaderType.FETCH\n\n  _queue = []\n\n  _alive = []\n\n  _currentTask = null\n\n  _finnalUrl = ''\n\n  _config\n\n  constructor (cfg) {\n    super(cfg)\n    this._config = getConfig(cfg)\n    if (\n      this._config.loaderType === LoaderType.XHR ||\n      !FetchLoader.isSupported()\n    ) {\n      this.type = LoaderType.XHR\n    }\n    this.log = cfg.logger\n  }\n\n  isFetch () {\n    return this.type === LoaderType.FETCH\n  }\n\n  static isFetchSupport () {\n    return FetchLoader.isSupported()\n  }\n\n  load (url, config = {}) {\n    if (typeof url === 'string' || !url) {\n      config.url = url || config.url || this._config.url\n    } else {\n      config = url\n    }\n\n    config = Object.assign({}, this._config, config)\n\n    if (config.params) config.params = Object.assign({}, config.params)\n    if (config.headers && isPlainObject(config.headers)) config.headers = Object.assign({}, config.headers)\n    if (config.body && isPlainObject(config.body)) config.body = Object.assign({}, config.body)\n\n    if (config.transformRequest) {\n      config = config.transformRequest(config) || config\n    }\n    config.logger = this.log\n\n    const task = new Task(this.type, config)\n    task.loader.on(EVENT.REAL_TIME_SPEED, (data) => {\n      this.emit(EVENT.REAL_TIME_SPEED, data)\n    })\n    this._queue.push(task)\n    if (this._queue.length === 1 && (!this._currentTask || !this._currentTask.running)) {\n      this._processTask()\n    }\n\n    return task.promise\n  }\n\n  async cancel () {\n    const cancels = this._queue.map(t => t.cancel()).concat(this._alive.map(t => t.cancel()))\n    if (this._currentTask) {\n      cancels.push(this._currentTask.cancel())\n    }\n    this._queue = []\n    this._alive = []\n    await Promise.all(cancels)\n    await sleep()\n  }\n\n  _processTask () {\n    this._currentTask = this._queue.shift()\n    if (!this._currentTask) return\n\n    if (this._currentTask.alive) {\n      this._alive.push(this._currentTask)\n    }\n    const req = this._currentTask.exec().catch(e => {})\n\n    if (!(req && typeof req.finally === 'function')) return\n\n    req.finally(() => {\n      if (this._currentTask?.alive && this._alive?.length > 0) {\n        this._alive = this._alive.filter(task => task && task !== this._currentTask)\n      }\n      this._processTask()\n    })\n\n  }\n}\n","import { LoaderType, ResponseType } from './types'\n\nexport function getConfig (cfg) {\n  return {\n    loaderType: LoaderType.FETCH,\n    retry: 0,\n    retryDelay: 0, // ms\n    timeout: 0,\n    request: null, // Request\n    onTimeout: undefined,\n    onProgress: undefined,\n    onRetryError: undefined,\n    transformRequest: undefined,\n    transformResponse: undefined,\n    transformError: undefined,\n    responseType: ResponseType.TEXT,\n    range: undefined,\n    url: '',\n    params: undefined,\n    method: 'GET',\n    headers: {},\n    body: undefined,\n    mode: undefined,\n    credentials: undefined,\n    cache: undefined,\n    redirect: undefined,\n    referrer: undefined,\n    referrerPolicy: undefined,\n    integrity: undefined,\n    onProcessMinLen: 0,\n    ...cfg\n  }\n}\n","import { Buffer } from '../buffer'\n\nexport class GapService {\n  _prevCurrentTime = 0\n\n  do (media, maxJumpDistance = 3, isLive, seekThreshold = 1) {\n    if (!media) return\n\n    const currentTime = media.currentTime\n    let jumpTo = 0\n\n    if (this._prevCurrentTime === currentTime) {\n      const info = Buffer.info(Buffer.get(media), currentTime)\n      if (!info.buffers.length) return\n      if (\n        (isLive && info.nextStart) ||\n        (info.nextStart && info.nextStart - currentTime < maxJumpDistance)\n      ) {\n        jumpTo = info.nextStart + 0.1\n      } else if (info.end && info.end - currentTime > seekThreshold && !media.seeking) {\n        jumpTo = currentTime + 0.1\n      }\n    }\n\n    this._prevCurrentTime = currentTime\n\n    if (jumpTo && currentTime !== jumpTo) {\n      media.currentTime = jumpTo\n    }\n  }\n}\n","import { EVENT } from '../event'\n\nexport class SeiService {\n  _seiSet = new Set()\n\n  constructor (emitter) {\n    this.emitter = emitter\n\n    emitter.on(EVENT.SEI, sei => {\n      if (sei) this._seiSet.add(sei)\n    })\n  }\n\n  throw (currentTime, isLive) {\n    if (currentTime === null || currentTime === undefined || !this._seiSet.size) return\n    const min = currentTime - 0.2\n    const max = currentTime + 0.2\n    const toThrow = []\n    this._seiSet.forEach(sei => {\n      if (sei.time >= min && sei.time <= max) {\n        toThrow.push(sei)\n      }\n    })\n\n    toThrow.forEach(sei => {\n      this._seiSet.delete(sei)\n      this.emitter.emit(EVENT.SEI_IN_TIME, sei)\n    })\n\n    if (!isLive) return\n\n    this._seiSet.forEach(s => {\n      if (s.time < currentTime - 5) {\n        this._seiSet.delete(s)\n      }\n    })\n  }\n\n  reset () {\n    this._seiSet.clear()\n  }\n}\n","\n\nconst SKIP_SMALL_CHUNK = 1000\nconst MAX_CHUNK_SAVE_SIZE = 50\nconst MAX_SEGMENT_SAVE_SIZE = 3\nconst LONGTIME_NO_RECEIVE = 3000\n\nexport class BandwidthService {\n  _chunkSpeed = 0 // bps\n  _chunkCache = []\n  _speeds = [] // bps\n  _totalSize = 0\n  _totalCost = 0\n\n  /**\n   * @typedef {{\n   *  chunkCountForSpeed?: number,\n   *  skipChunkSize?: number,\n   *  longtimeNoReceived?: number\n   * }} Opts\n   *\n   * @param {Opts} opts\n   */\n  constructor (opts) {\n    this._opts = opts || {}\n  }\n\n  addRecord (totalByte, ms) {\n    if (!totalByte || !ms) return\n    this._speeds.push(8000 * totalByte / ms)\n    this._speeds = this._speeds.slice(-MAX_SEGMENT_SAVE_SIZE)\n  }\n\n  addChunkRecord (totalByte, ms) {\n    if (!totalByte || !ms || totalByte < (this._opts?.skipChunkSize || SKIP_SMALL_CHUNK)) return\n\n    this._totalSize += totalByte\n    this._totalCost += ms\n\n    this._chunkSpeed = 8000 * totalByte / ms\n    this._chunkCache.push({\n      size: totalByte,\n      duration: ms,\n      timestamp: performance.now()\n    })\n\n    const size = this._opts?.chunkCountForSpeed || MAX_CHUNK_SAVE_SIZE\n\n    if (this._chunkCache.length > size) {\n      this._chunkCache = this._chunkCache.slice(-size)\n    }\n  }\n\n  /**\n   *\n   * @returns { number }\n   */\n  getAvgSpeed () {\n    if (!this._chunkCache.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds.reduce((a, c) => (a += c)) / this._speeds.length\n    }\n\n    // for long time no chunk received, append 0 size chunk\n    const lastSample = this._chunkCache[this._chunkCache.length - 1]\n    const cost = performance.now() - lastSample.timestamp\n    if ( cost > (this._opts?.longtimeNoReceived || LONGTIME_NO_RECEIVE)) {\n      this._chunkCache.push({\n        size: 0,\n        duration: cost,\n        timestamp: performance.now()\n      })\n    }\n\n    const totalSize = this._chunkCache.reduce((a, c) => a += c.size, 0)\n    const totalDuration = this._chunkCache.reduce((a, c) => a += c.duration, 0)\n    return 8000 * totalSize / totalDuration\n  }\n\n  /**\n   *\n   * @returns { number }\n   */\n  getLatestSpeed () {\n    if (!this._chunkCache.length && !this._speeds.length) return 0\n    if (this._speeds.length) {\n      return this._speeds[this._speeds.length - 1]\n    }\n    return this._chunkSpeed\n  }\n\n  /**\n   *\n   * @returns { number }\n   */\n  getTotalSize () {\n    return this._totalSize\n  }\n\n  /**\n   *\n   * @returns { number }\n   */\n  getTotalCost () {\n    return this._totalCost\n  }\n\n  reset () {\n    this._chunkCache = []\n    this._speeds = []\n    this._totalSize = 0\n    this._totalCost = 0\n  }\n}\n\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nclass Stats {\n  encodeType = '' // hevc | avc\n  audioCodec = ''\n  videoCodec = ''\n  domain = '' // stream url domain\n  fps = 0\n  bitrate = 0 // 最新1s下载数据的码率\n  width = 0\n  height = 0\n  samplerate = 0\n  channelCount = 0\n  gop = 0 // 第一个gop帧数\n\n  _bitsAccumulateSize = 0\n  _bitsAccumulateDuration = 0\n  _startGopId = -1\n\n  constructor (timescale) {\n    this._timescale = timescale\n  }\n\n  getStats () {\n    return {\n      encodeType: this.encodeType,\n      audioCodec: this.audioCodec,\n      videoCodec: this.videoCodec,\n      domain: this.domain,\n      fps: this.fps,\n      bitrate: this.bitrate,\n      width: this.width,\n      height: this.height,\n      samplerate: this.samplerate,\n      channelCount: this.channelCount,\n      gop: this.gop\n    }\n  }\n\n  setEncodeType (encode) {\n    this.encodeType = encode\n  }\n\n  setFpsFromScriptData ({data}) {\n    const fps = data?.onMetaData?.framerate\n    if (fps && fps > 0 && fps < 100) {\n      this.fps = fps\n    }\n  }\n\n  setVideoMeta (track) {\n    this.width = track.width\n    this.height = track.height\n    this.videoCodec = track.codec\n    this.encodeType = track.codecType\n    if (track.fpsNum && track.fpsDen) {\n      const fps = track.fpsNum / track.fpsDen\n      if (fps > 0 && fps < 100) {\n        this.fps = fps\n      }\n    }\n  }\n\n  setAudioMeta (track) {\n    this.audioCodec = track.codec\n    this.samplerate = track.sampleRate\n    this.channelCount = track.channelCount\n  }\n\n  setDomain (responseUrl) {\n    this.domain = responseUrl.split('/').slice(2, 3)[0]\n  }\n\n  updateBitrate (samples) {\n    if (!this.fps || this.fps >= 100) {\n      if (samples.length) {\n        const duration = samples.reduce((a,b) => a += b.duration, 0) / samples.length\n        this.fps = Math.round(this._timescale / duration)\n      }\n    }\n    samples.forEach(sample => {\n      if (this._startGopId === -1) {\n        this._startGopId = sample.gopId\n      }\n      if (sample.gopId === this._startGopId) {\n        this.gop++\n      }\n      this._bitsAccumulateDuration += sample.duration / (this._timescale / 1000)\n      this._bitsAccumulateSize += sample.units.reduce((a, c) => (a += c.length), 0)\n      if (this._bitsAccumulateDuration >= 1000) {\n        this.bitrate = this._bitsAccumulateSize * 8\n        this._bitsAccumulateDuration = 0\n        this._bitsAccumulateSize = 0\n      }\n    })\n  }\n}\n\n\n/**\n * @typedef {Object} StatsInfo\n * @property {number} downloadSpeed\n * @property {number} avgSpeed\n * @property {number} currentTime\n * @property {number} bufferEnd\n * @property {number} decodeFps\n * @property {string} encodeType\n * @property {string} audioCodec\n * @property {string} videoCodec\n * @property {string} domain\n * @property {number} fps\n * @property {number} bitrate\n * @property {number} width\n * @property {number} height\n * @property {number} samplerate\n * @property {number} channelCount\n * @property {number} gop\n */\nclass MediaStatsService {\n\n  _core = null\n\n  _samples = []\n\n  constructor (core, timescale = 1000) {\n    this._core = core\n    this._timescale = timescale\n    this._stats = new Stats(timescale)\n    this._bindEvents()\n  }\n\n\n  /** @returns {StatsInfo} */\n  getStats () {\n    const { currentTime = 0, decodeFps = 0 } = this._core?.media || {}\n    return {\n      ...this._stats.getStats(),\n      downloadSpeed: this._core?.speedInfo?.().speed || 0,\n      avgSpeed: this._core?.speedInfo?.().avgSpeed || 0,\n      totalReceivedByte: this._core?.speedInfo?.().totalSize || 0,\n      totalReceivedCost: this._core?.speedInfo?.().totalCost || 0,\n      currentTime,\n      bufferEnd: this._core?.bufferInfo()?.remaining || 0,\n      decodeFps\n    }\n  }\n\n  _bindEvents () {\n    this._core.on(EVENT.DEMUXED_TRACK, ({videoTrack}) => this._stats.updateBitrate(videoTrack.samples))\n\n    this._core.on(EVENT.FLV_SCRIPT_DATA, data => {\n      this._stats.setFpsFromScriptData(data)\n    })\n\n    this._core.on(EVENT.METADATA_PARSED, e => {\n      if (e.type === 'video') {\n        this._stats.setVideoMeta(e.track)\n      } else {\n        this._stats.setAudioMeta(e.track)\n      }\n    })\n\n    this._core.on(EVENT.TTFB, e => {\n      this._stats.setDomain(e.responseUrl)\n    })\n\n  }\n\n  reset () {\n    this._samples = []\n    this._stats = new Stats(this._timescale)\n  }\n\n}\n\nexport { MediaStatsService }\n","/** @enum {string} */\nexport const TrackType = {\n  VIDEO: 'video',\n  AUDIO: 'audio',\n  METADATA: 'metadata'\n}\n\n/** @enum {string} */\nexport const VideoCodecType = {\n  AV1: 'av1',\n  AVC: 'avc',\n  HEVC: 'hevc'\n}\n\n/** @enum {string} */\nexport const AudioCodecType = {\n  AAC: 'aac',\n  G711PCMA: 'g7110a',\n  G711PCMU: 'g7110m',\n  OPUS: 'opus',\n  MP3: 'mp3'\n}\n\n/** @enum {string} */\nexport const WarningType = {\n  LARGE_AV_SHIFT: 'LARGE_AV_SHIFT',\n  LARGE_VIDEO_GAP: 'LARGE_VIDEO_GAP',\n  LARGE_VIDEO_GAP_BETWEEN_CHUNK: 'LARGE_VIDEO_GAP_BETWEEN_CHUNK',\n  LARGE_AUDIO_GAP: 'LARGE_AUDIO_GAP',\n  AUDIO_FILLED: 'AUDIO_FILLED',\n  AUDIO_DROPPED: 'AUDIO_DROPPED'\n}\n","import { TrackType, VideoCodecType } from './types'\n\nexport class VideoTrack {\n  id = 1\n\n  /** @readonly */\n  type = TrackType.VIDEO\n\n  codecType = VideoCodecType.AVC\n\n  pid = -1 // ts use\n\n  /** @type {Uint8Array | Object} */\n  hvcC = undefined\n\n  codec = ''\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  sequenceNumber = 0\n\n  baseMediaDecodeTime = 0\n\n  baseDts = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./video-sample').VideoSample[]} */\n  samples = []\n\n  /** @type {Uint8Array[]} */\n  pps = []\n\n  /** @type {Uint8Array[]} */\n  sps = []\n\n  /** @type {Uint8Array[]} */\n  vps = []\n\n  fpsNum = 0\n\n  fpsDen = 0\n\n  /** @type {[number, number]} */\n  sarRatio = [] // [hSpacing, vSpacing]\n\n  width = 0\n\n  height = 0\n\n  nalUnitSize = 4\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  isVideo = true\n\n  lastKeyFrameDts = 0\n\n  kid = null\n\n  pssh = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber =\n    this.width =\n    this.height =\n    this.fpsDen =\n    this.fpsNum =\n    this.duration =\n    this.baseMediaDecodeTime =\n    this.timescale = 0\n    this.codec = ''\n    this.present = false\n    this.pid = -1\n    this.pps = []\n    this.sps = []\n    this.vps = []\n    this.sarRatio = []\n    this.samples = []\n    this.warnings = []\n    this.hvcC = null\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    if (/av01/.test(this.codec)) {\n      return true\n    }\n    return !!(this.pps.length && this.sps.length && this.codec)\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption (){\n    return this.isVideoEncryption\n  }\n}\n","import { TrackType, AudioCodecType } from './types'\n\nexport class AudioTrack {\n  id = 2\n\n  /** @readonly */\n  type = TrackType.AUDIO\n\n  codecType = AudioCodecType.AAC\n\n  pid = -1\n\n  codec = ''\n\n  container = ''\n\n  sequenceNumber = 0\n\n  sampleDuration = 0\n\n  timescale = 0\n\n  formatTimescale = 0\n\n  baseMediaDecodeTime = 0\n\n  duration = 0\n\n  warnings = []\n\n  /** @type {import('./audio-sample').AudioSample[]} */\n  samples = []\n\n  baseDts = 0\n\n  sampleSize = 16\n\n  sampleRate = 0\n\n  channelCount = 0\n\n  objectType = 0\n\n  sampleRateIndex = 0\n\n  /** @type {number[]} */\n  config = []\n\n  present = false\n\n  isVideoEncryption = false\n\n  isAudioEncryption = false\n\n  kid = null\n\n  /** @type {any} */\n  ext\n\n  reset () {\n    this.sequenceNumber = 0\n    this.timescale = 0\n    this.sampleDuration = 0\n    this.sampleRate = 0\n    this.channelCount = 0\n    this.baseMediaDecodeTime = 0\n    this.present = false\n    this.pid = -1\n    this.codec = ''\n    this.samples = []\n    this.config = []\n    this.warnings = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!(\n      this.sampleRate &&\n      this.channelCount &&\n      (this.codec || this.container) &&\n      (this.codecType === AudioCodecType.AAC ||\n        this.codecType === AudioCodecType.G711PCMA ||\n        this.codecType === AudioCodecType.G711PCMU ||\n        this.codecType === AudioCodecType.OPUS || this.codecType === AudioCodecType.MP3)\n    )\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!this.samples.length\n  }\n\n  get isEncryption () {\n    return this.isAudioEncryption\n  }\n\n  get firstDts () {\n    return this.samples.length ? this.samples[0].dts : null\n  }\n\n  get firstPts () {\n    return this.samples.length ? this.samples[0].pts : null\n  }\n\n  get samplesDuration () {\n    if (this.samples.length > 0) {\n      const first = this.samples[0]\n      const last = this.samples[this.samples.length - 1]\n      return last.dts - first.dts + last.duration\n    }\n    return 0\n  }\n}\n","/**\n * @typedef {Object} VideoFlag\n * @property {number} [isLeading=0]\n * @property {number} [dependsOn=1]\n * @property {number} [isDependedOn=0]\n * @property {number} [hasRedundancy=0]\n * @property {number} [paddingValue=0]\n * @property {number} [degradationPriority=0]\n * @property {number} [isNonSyncSample=1]\n */\n\nexport class VideoSample {\n  /** @type {VideoFlag} */\n  flag = {}\n\n  keyframe = false\n\n  gopId = 0\n\n  duration = 0\n\n  size = 0\n\n  units = []\n\n  chromaFormat = 420\n\n  // sampleOffset = 0\n\n  /**\n   * @param {number} pts\n   * @param {number} dts\n   * @param {Uint8Array[]} [units]\n   */\n  constructor (pts, dts, units) {\n    this.originPts = this.pts = pts\n    this.originDts = this.dts = dts\n    if (units) this.units = units\n  }\n\n  /**\n   * @returns {number}\n   */\n  get cts () {\n    return this.pts - this.dts\n  }\n\n  setToKeyframe () {\n    this.keyframe = true\n    this.flag.dependsOn = 2\n    this.flag.isNonSyncSample = 0\n  }\n}\n","export class AudioSample {\n  duration = 1024\n\n  flag = { dependsOn: 2, isNonSyncSample: 0 }\n  keyframe = true\n\n  /**\n   * @param {number} pts\n   * @param {Uint8Array} data\n   * @param {number} [duration=1024]\n   */\n  constructor (pts, data, duration, sampleOffset) {\n    this.originPts = this.pts = this.dts = pts\n    this.data = data\n    this.size = data.byteLength\n    this.sampleOffset = sampleOffset\n    if (duration) this.duration = duration\n  }\n}\n","import { TrackType } from './types'\n\nclass Sample {\n  time = 0 // second\n\n  /**\n   * @param {Object} data\n   * @param {number} pts\n   */\n  constructor (data, pts) {\n    this.data = data\n    this.originPts = this.pts = pts\n  }\n}\n\nexport class FlvScriptSample extends Sample {}\n\nexport class SeiSample extends Sample {}\n\nexport class MetadataTrack {\n  /** @readonly */\n  id = 3\n\n  /** @readonly */\n  type = TrackType.METADATA\n\n  timescale = 0\n\n  /** @type {FlvScriptSample[]} */\n  flvScriptSamples = []\n\n  /** @type {SeiSample[]} */\n  seiSamples = []\n\n  /**\n   * @returns {boolean}\n   */\n  exist () {\n    return !!((this.flvScriptSamples.length || this.seiSamples.length) && this.timescale)\n  }\n\n  reset () {\n    this.timescale = 0\n    this.flvScriptSamples = []\n    this.seiSamples = []\n  }\n\n  /**\n   * @returns {boolean}\n   */\n  hasSample () {\n    return !!(this.flvScriptSamples.length || this.seiSamples.length)\n  }\n}\n","export class ExpGolomb {\n  _bytesAvailable\n\n  _bitsAvailable = 0\n\n  _word = 0\n\n  constructor (data) {\n    if (!data) throw new Error('ExpGolomb data params is required')\n    this._data = data\n    this._bytesAvailable = data.byteLength\n    if (this._bytesAvailable) this._loadWord()\n  }\n\n  get bitsAvailable () {\n    return this._bitsAvailable\n  }\n\n  _loadWord () {\n    const position = this._data.byteLength - this._bytesAvailable\n    const availableBytes = Math.min(4, this._bytesAvailable)\n    if (availableBytes === 0) throw new Error('No bytes available')\n\n    const workingBytes = new Uint8Array(4)\n    workingBytes.set(this._data.subarray(position, position + availableBytes))\n\n    this._word = new DataView(workingBytes.buffer).getUint32(0)\n    this._bitsAvailable = availableBytes * 8\n    this._bytesAvailable -= availableBytes\n  }\n\n  skipBits (count) {\n    if (this._bitsAvailable > count) {\n      this._word <<= count\n      this._bitsAvailable -= count\n    } else {\n      count -= this._bitsAvailable\n      const skipBytes = Math.floor(count / 8)\n      count -= (skipBytes * 8)\n      this._bytesAvailable -= skipBytes\n      this._loadWord()\n      this._word <<= count\n      this._bitsAvailable -= count\n    }\n  }\n\n  readBits (size) {\n    if (size > 32) {\n      throw new Error('Cannot read more than 32 bits')\n    }\n\n    let bits = Math.min(this._bitsAvailable, size)\n    const val = this._word >>> (32 - bits)\n\n    this._bitsAvailable -= bits\n    if (this._bitsAvailable > 0) {\n      this._word <<= bits\n    } else if (this._bytesAvailable > 0) {\n      this._loadWord()\n    }\n\n    bits = size - bits\n    if (bits > 0 && this._bitsAvailable) {\n      return (val << bits) | this.readBits(bits)\n    }\n    return val\n  }\n\n  skipLZ () {\n    let leadingZeroCount\n    for (\n      leadingZeroCount = 0;\n      leadingZeroCount < this._bitsAvailable;\n      ++leadingZeroCount\n    ) {\n      if ((this._word & (0x80000000 >>> leadingZeroCount)) !== 0) {\n        this._word <<= leadingZeroCount\n        this._bitsAvailable -= leadingZeroCount\n        return leadingZeroCount\n      }\n    }\n    this._loadWord()\n    return leadingZeroCount + this.skipLZ()\n  }\n\n  skipUEG () {\n    this.skipBits(1 + this.skipLZ())\n  }\n\n  readUEG () {\n    const clz = this.skipLZ()\n    return this.readBits(clz + 1) - 1\n  }\n\n  readEG () {\n    const val = this.readUEG()\n    if (1 & val) {\n      return (1 + val) >>> 1\n    }\n    return -1 * (val >>> 1)\n  }\n\n  readBool () {\n    return this.readBits(1) === 1\n  }\n\n  readUByte () {\n    return this.readBits(8)\n  }\n\n  skipScalingList (count) {\n    let lastScale = 8\n    let nextScale = 8\n    let deltaScale\n    for (let j = 0; j < count; j++) {\n      if (nextScale !== 0) {\n        deltaScale = this.readEG()\n        nextScale = (lastScale + deltaScale + 256) % 256\n      }\n      lastScale = nextScale === 0 ? lastScale : nextScale\n    }\n  }\n}\n","export class Logger {\n  constructor (name) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","export class UTF8 {\n  /**\n   *\n   * @param {Uint8Array} uint8array\n   * @return {string}\n   */\n  static decode (uint8array) {\n    const out = []\n    const input = uint8array\n    let i = 0\n    const length = uint8array.length\n\n    while (i < length) {\n      if (input[i] < 0x80) {\n        out.push(String.fromCharCode(input[i]))\n        ++i\n        continue\n      } else if (input[i] < 0xC0) {\n        // fallthrough\n      } else if (input[i] < 0xE0) {\n        if (UTF8._checkContinuation(input, i, 1)) {\n          const ucs4 = (input[i] & 0x1F) << 6 | (input[i + 1] & 0x3F)\n          if (ucs4 >= 0x80) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 2\n            continue\n          }\n        }\n      } else if (input[i] < 0xF0) {\n        if (UTF8._checkContinuation(input, i, 2)) {\n          const ucs4 = (input[i] & 0xF) << 12 | (input[i + 1] & 0x3F) << 6 | input[i + 2] & 0x3F\n          if (ucs4 >= 0x800 && (ucs4 & 0xF800) !== 0xD800) {\n            out.push(String.fromCharCode(ucs4 & 0xFFFF))\n            i += 3\n            continue\n          }\n        }\n      } else if (input[i] < 0xF8) {\n        if (UTF8._checkContinuation(input, i, 3)) {\n          let ucs4 = (input[i] & 0x7) << 18 | (input[i + 1] & 0x3F) << 12 |\n                    (input[i + 2] & 0x3F) << 6 | (input[i + 3] & 0x3F)\n          if (ucs4 > 0x10000 && ucs4 < 0x110000) {\n            ucs4 -= 0x10000\n            out.push(String.fromCharCode((ucs4 >>> 10) | 0xD800))\n            out.push(String.fromCharCode((ucs4 & 0x3FF) | 0xDC00))\n            i += 4\n            continue\n          }\n        }\n      }\n      out.push(String.fromCharCode(0xFFFD))\n      ++i\n    }\n\n    return out.join('')\n  }\n\n  static _checkContinuation (uint8array, start, checkLength) {\n    const array = uint8array\n    if (start + checkLength < array.length) {\n      while (checkLength--) {\n        if ((array[++start] & 0xC0) !== 0x80) {\n          return false\n        }\n      }\n      return true\n    } else {\n      return false\n    }\n  }\n}\n","export const isBrowser = typeof window !== 'undefined'\n\nconst ua = isBrowser && navigator.userAgent.toLocaleLowerCase()\n\n// eslint-disable-next-line no-lookahead-lookbehind-regexp/no-lookahead-lookbehind-regexp\nexport const isSafari = isBrowser && /^((?!chrome|android).)*safari/.test(ua)\nexport const isFirefox = isBrowser && ua.includes('firefox')\nexport const isAndroid = isBrowser && ua.includes('android')\n","/* c8 ignore next 4 */\nexport { ExpGolomb } from './exp-golomb'\nexport { Logger } from './logger'\nexport { UTF8 } from './utf8'\nexport * from './env'\n\nexport function concatUint8Array (...arr) {\n  arr = arr.filter(Boolean)\n  const data = new Uint8Array(arr.reduce((p, c) => p + c.byteLength, 0))\n  let prevLen = 0\n  arr.forEach((d) => {\n    data.set(d, prevLen)\n    prevLen += d.byteLength\n  })\n  return data\n}\n\nexport const MAX_SIZE = Math.pow(2, 32)\n\nexport function readBig16 (data, i = 0) {\n  return (data[i] << 8) + (data[i + 1] || 0)\n}\n\nexport function readBig24 (data, i = 0) {\n  return (data[i] << 16) + (data[i + 1] << 8) + (data[i + 2] || 0)\n}\n\nexport function readBig32 (data, i = 0) {\n  return (data[i] << 24 >>> 0) + (data[i + 1] << 16) + (data[i + 2] << 8) + (data[i + 3] || 0)\n}\n\nexport function readBig64 (data, i = 0) {\n  return readBig32(data, i) * MAX_SIZE + readBig32(data, i + 4)\n}\n\nexport function getAvcCodec (codecs) {\n  let codec = 'avc1.'\n  let h\n  for (let i = 0; i < 3; i++) {\n    h = codecs[i].toString(16)\n    if (h.length < 2) h = `0${h}`\n    codec += h\n  }\n  return codec\n}\n\nexport function formatIV (arr) {\n  let iv = ''\n  arr.forEach(value => {\n    iv += bufferToString(value)\n  })\n  if (iv.length <= 32) {\n    const len = 32 - iv.length\n    for (let i = 0; i < len; i++) {\n      iv += '0'\n    }\n  }\n  return iv\n}\n\nexport function parse (a) {\n  if (!Array.isArray(a)) {\n    const arr = []\n    let value = ''\n    for (let i = 0; i < a.length; i++) {\n      if (i % 2) {\n        value = a[i - 1] + a[i]\n        arr.push(parseInt(value, 16))\n        value = ''\n      }\n    }\n    return arr\n  }\n  return a.map(item => { return parseInt(item, 16) })\n}\nfunction bufferToString (value) {\n  return ('0' + (Number(value).toString(16))).slice(-2).toUpperCase()\n}\n\nexport function hashVal (str) {\n  let hash = 0; let i; let chr\n  if (str.length === 0) return hash\n  for (i = 0; i < str.length; i++) {\n    chr = str.charCodeAt(i)\n    hash = ((hash << 5) - hash) + chr\n    hash |= 0\n  }\n  return hash\n}\n\nexport function combineToFloat (integer, decimal) {\n  return Number(integer + '.' + decimal)\n}\n\nexport function toDegree (matrix) {\n  if (matrix.length < 5)\n    return 0\n  const scaled0 = Math.hypot(matrix[0], matrix[3]), scaled1 = Math.hypot(matrix[1], matrix[4])\n  return 0 === scaled0 || 0 === scaled1 ? 0 : 180 * Math.atan2(matrix[1] / scaled1, matrix[0] / scaled0) / Math.PI\n}\n","import { isFirefox, isAndroid } from '../utils'\n\nexport class AAC {\n  static FREQ = [\n    96000,\n    88200,\n    64000,\n    48000,\n    44100,\n    32000,\n    24000,\n    22050,\n    16000,\n    12000,\n    11025,\n    8000,\n    7350\n  ];\n\n  static getRateIndexByRate (rate) {\n    return AAC.FREQ.indexOf(rate)\n  }\n\n  static parseADTS (data, pts) {\n    const len = data.length\n    let i = 0\n\n    while ((i + 2) < len) {\n      if (data[i] === 0xff && (data[i + 1] & 0xf6) === 0xf0) {\n        break\n      }\n      i++\n    }\n\n    if (i >= len) return\n\n    const skip = i\n    const frames = []\n    const samplingFrequencyIndex = (data[i + 2] & 0x3c) >>> 2\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    if (!sampleRate) throw new Error(`Invalid sampling index: ${samplingFrequencyIndex}`)\n    const objectType = ((data[i + 2] & 0xc0) >>> 6) + 1\n    const channelCount = ((data[i + 2] & 1) << 2) | ((data[i + 3] & 0xc0) >>> 6)\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    let protectionSkipBytes\n    let frameLength\n    let frameIndex = 0\n    const duration = AAC.getFrameDuration(sampleRate)\n\n    while ((i + 7) < len) {\n      if ((data[i] !== 0xff) || (data[i + 1] & 0xF6) !== 0xf0) {\n        i++\n        continue\n      }\n\n      frameLength = ((data[i + 3] & 0x03) << 11) | (data[i + 4] << 3) | ((data[i + 5] & 0xe0) >> 5)\n      if (!frameLength || (len - i) < frameLength) break\n\n      protectionSkipBytes = (~data[i + 1] & 0x01) * 2\n      frames.push({\n        pts: pts + frameIndex * duration,\n        data: data.subarray(i + 7 + protectionSkipBytes, i + frameLength)\n      })\n\n      frameIndex++\n      i += frameLength\n    }\n\n    return {\n      skip,\n      remaining: i >= len ? undefined : data.subarray(i),\n      frames,\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      codec,\n      config,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static parseAudioSpecificConfig (data) {\n    if (!data.length) return\n    const objectType = data[0] >>> 3\n    const samplingFrequencyIndex = ((data[0] & 0x07) << 1) | (data[1] >>> 7)\n    const channelCount = (data[1] & 0x78) >>> 3\n    const sampleRate = AAC.FREQ[samplingFrequencyIndex]\n    // play as no audio track stream\n    if (!sampleRate) return\n    const { config, codec } = AAC._getConfig(samplingFrequencyIndex, channelCount, objectType)\n\n    return {\n      samplingFrequencyIndex,\n      sampleRate,\n      objectType,\n      channelCount,\n      config,\n      codec,\n      originCodec: `mp4a.40.${objectType}`\n    }\n  }\n\n  static getFrameDuration (rate, timescale = 90000) {\n    return 1024 * timescale / rate\n  }\n\n  static _getConfig (samplingIndex, channelCount, originObjectType) {\n    const config = []\n    let objectType\n    let extensionSamplingIndex\n    if (isFirefox) {\n      if (samplingIndex >= 6) { // use SBR (HE-AAC)\n        objectType = 5\n        extensionSamplingIndex = samplingIndex - 3\n      } else { // use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    } else if (isAndroid) { // use LC-AAC\n      objectType = 2\n      extensionSamplingIndex = samplingIndex\n    } else { // use HE-AAC\n      objectType = 5\n      extensionSamplingIndex = samplingIndex\n\n      if (samplingIndex >= 6) {\n        extensionSamplingIndex = samplingIndex - 3\n      } else if (channelCount === 1) { // Mono channel, use LC-AAC\n        objectType = 2\n        extensionSamplingIndex = samplingIndex\n      }\n    }\n\n    config[0] = objectType << 3\n    config[0] |= (samplingIndex & 0x0e) >> 1\n    config[1] = (samplingIndex & 0x01) << 7\n    config[1] |= channelCount << 3\n    if (objectType === 5) {\n      config[1] |= ((extensionSamplingIndex & 0x0e) >> 1)\n      config[2] = (extensionSamplingIndex & 0x01) << 7\n      config[2] |= (2 << 2)\n      config[3] = 0\n    }\n\n    return {\n      config,\n      codec: `mp4a.40.${objectType}`\n    }\n  }\n\n  /* c8 ignore next 65 */\n  static getSilentFrame (codec, channelCount) {\n    switch (codec) {\n      case 'mp4a.40.2':\n        if (channelCount === 1) {\n          return new Uint8Array([0x00, 0xc8, 0x00, 0x80, 0x23, 0x80])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x21, 0x00, 0x49, 0x90, 0x02, 0x19, 0x00, 0x23, 0x80\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x8e\n          ])\n        } if (channelCount === 4) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x80, 0x2c, 0x80, 0x08, 0x02, 0x38\n          ])\n        } if (channelCount === 5) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x38\n          ])\n        } if (channelCount === 6) {\n          return new Uint8Array([\n            0x00, 0xc8, 0x00, 0x80, 0x20, 0x84, 0x01, 0x26, 0x40, 0x08, 0x64,\n            0x00, 0x82, 0x30, 0x04, 0x99, 0x00, 0x21, 0x90, 0x02, 0x00, 0xb2,\n            0x00, 0x20, 0x08, 0xe0\n          ])\n        }\n        break\n      default:\n        if (channelCount === 1) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x4e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x1c, 0x6, 0xf1, 0xc1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 2) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        } if (channelCount === 3) {\n          return new Uint8Array([\n            0x1, 0x40, 0x22, 0x80, 0xa3, 0x5e, 0xe6, 0x80, 0xba, 0x8, 0x0, 0x0,\n            0x0, 0x0, 0x95, 0x0, 0x6, 0xf1, 0xa1, 0xa, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a, 0x5a,\n            0x5a, 0x5e\n          ])\n        }\n        break\n    }\n  }\n}\n","import { readBig32 } from '../utils'\n\nexport class NALu {\n  /**\n   * @param {Uint8Array} data\n   * @returns {Uint8Array[]}\n   */\n  static parseAnnexB (data) {\n    let j = data.byteLength - 1\n    let dropZerosLength = 0\n    // Collect tailing zeros.\n    // end with 0x000000 and more...\n    do {\n      if (data[j] === 0x00) {\n        dropZerosLength++\n      } else {\n        break\n      }\n\n      j--\n    } while (j > 0)\n\n    if (dropZerosLength >= 3) {\n      // drop tailing zeros.\n      data = data.subarray(0, j + 1)\n    }\n\n    const len = data.length\n    let start = 2\n    let end = 0\n    while (data[start] !== null && data[start] !== undefined && data[start] !== 1) {\n      start++\n    }\n    start++\n    end = start + 2\n\n    if (end >= len) return []\n\n    const units = []\n\n    while (end < len) {\n      switch (data[end]) {\n        case 0:\n          if (data[end - 1] !== 0) {\n            end += 2\n            break\n          } else if (data[end - 2] !== 0) {\n            end++\n            break\n          } else if (end < len - 1 && data[end + 1] !== 1) {\n            end++\n            break\n          }\n\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n\n          do {\n            end++\n          } while (data[end] !== 1 && end < len)\n          start = end + 1\n          end = start + 2\n          break\n        case 1:\n          if (data[end - 1] !== 0 || data[end - 2] !== 0) {\n            end += 3\n            break\n          }\n          if (start !== end - 2) units.push(data.subarray(start, end - 2))\n          start = end + 1\n          end = start + 2\n          break\n        default:\n          end += 3\n          break\n      }\n    }\n\n    if (start < len) units.push(data.subarray(start))\n\n    return units\n  }\n\n  static parseAvcC (data, size = 4) {\n    if (data.length < 4) return\n    const dataLen = data.length\n    const units = []\n\n    let offset = 0\n    let length\n    while ((offset + size) < dataLen) {\n      length = readBig32(data, offset)\n      if (size === 3) length >>>= 8\n      offset += size\n\n      if (!length) continue\n      if (offset + length > dataLen) {\n        break\n      }\n\n      units.push(data.subarray(offset, offset + length))\n      offset += length\n    }\n\n    return units\n  }\n\n  static parseSEI (unit, isHevc) {\n    const len = unit.length\n    let i = isHevc ? 2 : 1\n    let type = 0\n    let size = 0\n    let uuid = ''\n\n    while (unit[i] === 255) {\n      type += 255\n      i++\n    }\n\n    type += unit[i++]\n\n    while (unit[i] === 255) {\n      size += 255\n      i++\n    }\n    size += unit[i++]\n\n    if (type === 5 && len > i + 16) {\n      for (let j = 0; j < 16; j++) {\n        uuid += unit[i].toString(16)\n        i++\n      }\n    }\n\n    return {\n      payload: unit.subarray(i, i + size), type, size, uuid\n    }\n  }\n\n  static removeEPB (uint) {\n    const length = uint.byteLength\n    const emulationPreventionBytesPositions = []\n    let i = 1\n\n    while (i < length - 2) {\n      if (uint[i] === 0 && uint[i + 1] === 0 && uint[i + 2] === 0x03) {\n        emulationPreventionBytesPositions.push(i + 2)\n        i += 2\n      } else {\n        i++\n      }\n    }\n\n    if (!emulationPreventionBytesPositions.length) return uint\n\n    const newLength = length - emulationPreventionBytesPositions.length\n    const newData = new Uint8Array(newLength)\n\n    let sourceIndex = 0\n    for (i = 0; i < newLength; sourceIndex++, i++) {\n      if (sourceIndex === emulationPreventionBytesPositions[0]) {\n        sourceIndex++\n        emulationPreventionBytesPositions.shift()\n      }\n      newData[i] = uint[sourceIndex]\n    }\n\n    return newData\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb, getAvcCodec } from '../utils'\n\nexport class AVC {\n  static parseAVCDecoderConfigurationRecord (data) {\n    if (data.length < 7) return\n    const nalUnitSize = (data[4] & 3) + 1\n\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n\n    let offset = 6\n    const spsCount = data[5] & 0x1f\n    let spsSize\n    for (let i = 0; i < spsCount; i++) {\n      spsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!spsSize) continue\n\n      const sps = data.subarray(offset, offset + spsSize)\n      offset += spsSize\n      spsArr.push(sps)\n\n      if (!spsParsed) {\n        spsParsed = AVC.parseSPS(NALu.removeEPB(sps))\n      }\n    }\n\n    const ppsCount = data[offset]\n    offset++\n    let ppsSize\n    for (let i = 0; i < ppsCount; i++) {\n      ppsSize = (data[offset] << 8) | data[offset + 1]\n      offset += 2\n      if (!ppsSize) continue\n      ppsArr.push(data.subarray(offset, offset + ppsSize))\n      offset += ppsSize\n    }\n\n    return {\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseSPS (unit) {\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n\n    const profileIdc = eg.readUByte()\n    const profileCompatibility = eg.readUByte()\n    const levelIdc = eg.readUByte()\n    eg.skipUEG()\n\n    let chromaFormat = 420\n    if (\n      profileIdc === 100 ||\n      profileIdc === 110 ||\n      profileIdc === 122 ||\n      profileIdc === 244 ||\n      profileIdc === 44 ||\n      profileIdc === 83 ||\n      profileIdc === 86 ||\n      profileIdc === 118 ||\n      profileIdc === 128 ||\n      profileIdc === 138 ||\n      profileIdc === 144\n    ) {\n      const chromaFormatIdc = eg.readUEG()\n      if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n      if (chromaFormatIdc === 3) eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      eg.skipBits(1)\n      if (eg.readBool()) {\n        const scalingListCount = chromaFormatIdc !== 3 ? 8 : 12\n        for (let i = 0; i < scalingListCount; i++) {\n          if (eg.readBool()) {\n            if (i < 6) {\n              eg.skipScalingList(16)\n            } else {\n              eg.skipScalingList(64)\n            }\n          }\n        }\n      }\n    }\n\n    eg.skipUEG()\n    const picOrderCntType = eg.readUEG()\n    if (picOrderCntType === 0) {\n      eg.readUEG()\n    } else if (picOrderCntType === 1) {\n      eg.skipBits(1)\n      eg.skipUEG()\n      eg.skipUEG()\n      const numRefFramesInPicOrderCntCycle = eg.readUEG()\n      for (let i = 0; i < numRefFramesInPicOrderCntCycle; i++) {\n        eg.skipUEG()\n      }\n    }\n\n    eg.skipUEG()\n    eg.skipBits(1)\n    const picWidthInMbsMinus1 = eg.readUEG()\n    const picHeightInMapUnitsMinus1 = eg.readUEG()\n    const frameMbsOnlyFlag = eg.readBits(1)\n    if (frameMbsOnlyFlag === 0) eg.skipBits(1)\n    eg.skipBits(1)\n\n    let frameCropLeftOffset = 0\n    let frameCropRightOffset = 0\n    let frameCropTopOffset = 0\n    let frameCropBottomOffset = 0\n\n    if (eg.readBool()) {\n      frameCropLeftOffset = eg.readUEG()\n      frameCropRightOffset = eg.readUEG()\n      frameCropTopOffset = eg.readUEG()\n      frameCropBottomOffset = eg.readUEG()\n    }\n\n    let sarRatio\n    let fixedFrame\n    let fpsNum\n    let fpsDen\n    let fps\n    if (eg.readBool()) {\n      if (eg.readBool()) {\n        const aspectRatioIdc = eg.readUByte()\n        switch (aspectRatioIdc) {\n          case 1: sarRatio = [1, 1]; break\n          case 2: sarRatio = [12, 11]; break\n          case 3: sarRatio = [10, 11]; break\n          case 4: sarRatio = [16, 11]; break\n          case 5: sarRatio = [40, 33]; break\n          case 6: sarRatio = [24, 11]; break\n          case 7: sarRatio = [20, 11]; break\n          case 8: sarRatio = [32, 11]; break\n          case 9: sarRatio = [80, 33]; break\n          case 10: sarRatio = [18, 11]; break\n          case 11: sarRatio = [15, 11]; break\n          case 12: sarRatio = [64, 33]; break\n          case 13: sarRatio = [160, 99]; break\n          case 14: sarRatio = [4, 3]; break\n          case 15: sarRatio = [3, 2]; break\n          case 16: sarRatio = [2, 1]; break\n          case 255: {\n            sarRatio = [\n              (eg.readUByte() << 8) | eg.readUByte(),\n              (eg.readUByte() << 8) | eg.readUByte()\n            ]\n            break\n          }\n          default:\n        }\n      }\n\n      if (eg.readBool()) eg.readBool()\n\n      if (eg.readBool()) {\n        eg.readBits(4)\n        if (eg.readBool()) eg.readBits(24)\n      }\n\n      if (eg.readBool()) {\n        eg.readUEG()\n        eg.readUEG()\n      }\n\n      if (eg.readBool()) {\n        const numUnitsInTick = eg.readBits(32)\n        const timeScale = eg.readBits(32)\n        fixedFrame = eg.readBool()\n\n        fpsNum = timeScale\n        fpsDen = numUnitsInTick * 2\n        fps = fpsNum / fpsDen\n      }\n    }\n\n    return {\n      codec: getAvcCodec(unit.subarray(1, 4)),\n      profileIdc,\n      profileCompatibility,\n      levelIdc,\n      chromaFormat,\n      width: Math.ceil(\n        (picWidthInMbsMinus1 + 1) * 16 -\n          2 * (frameCropLeftOffset + frameCropRightOffset)\n      ),\n      height:\n        (2 - frameMbsOnlyFlag) * (picHeightInMapUnitsMinus1 + 1) * 16 -\n        (frameMbsOnlyFlag ? 2 : 4) *\n          (frameCropTopOffset + frameCropBottomOffset),\n      sarRatio,\n      fpsNum,\n      fpsDen,\n      fps,\n      fixedFrame\n    }\n  }\n}\n","import { NALu } from './nalu'\nimport { ExpGolomb } from '../utils'\n\nexport class HEVC {\n  static parseHEVCDecoderConfigurationRecord (data, hvcC = {}) {\n    if (data.length < 23) return\n    hvcC = hvcC || {}\n    const nalUnitSize = (data[21] & 3) + 1\n\n    let vpsParsed\n    let spsParsed\n    const spsArr = []\n    const ppsArr = []\n    const vpsArr = []\n\n    let offset = 23\n    const numOfArrays = data[22]\n\n    let nalUnitType\n    let numNalus\n    let nalSize\n    for (let i = 0; i < numOfArrays; i++) {\n      nalUnitType = data[offset] & 0x3f\n      numNalus = (data[offset + 1] << 8) | data[offset + 2]\n\n      offset += 3\n\n      for (let j = 0; j < numNalus; j++) {\n        nalSize = (data[offset] << 8) | data[offset + 1]\n        offset += 2\n        if (!nalSize) continue\n        switch (nalUnitType) {\n          case 32: {\n            const vps = data.subarray(offset, offset + nalSize)\n            if (!vpsParsed) vpsParsed = HEVC.parseVPS(NALu.removeEPB(vps), hvcC)\n            vpsArr.push(vps)\n          }\n            break\n          case 33: {\n            const sps = data.subarray(offset, offset + nalSize)\n            if (!spsParsed) spsParsed = HEVC.parseSPS(NALu.removeEPB(sps), hvcC)\n            spsArr.push(sps)\n          }\n            break\n          case 34:\n            ppsArr.push(data.subarray(offset, offset + nalSize))\n            break\n          default:\n        }\n\n        offset += nalSize\n      }\n    }\n\n    return {\n      hvcC,\n      sps: spsParsed,\n      spsArr,\n      ppsArr,\n      vpsArr,\n      nalUnitSize\n    }\n  }\n\n  static parseVPS (unit, hvcC) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(12)\n    const vpsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(hvcC.numTemporalLayers || 0, vpsMaxSubLayersMinus1 + 1)\n    eg.readBits(17)\n    HEVC._parseProfileTierLevel(eg, vpsMaxSubLayersMinus1, hvcC)\n\n    return hvcC\n  }\n\n  static parseSPS (unit, hvcC = {}) {\n    hvcC = hvcC || {}\n    const eg = new ExpGolomb(unit)\n    eg.readUByte()\n    eg.readUByte()\n\n    eg.readBits(4)\n    const spsMaxSubLayersMinus1 = eg.readBits(3)\n    hvcC.numTemporalLayers = Math.max(spsMaxSubLayersMinus1 + 1, hvcC.numTemporalLayers || 0)\n    hvcC.temporalIdNested = eg.readBits(1)\n    HEVC._parseProfileTierLevel(eg, spsMaxSubLayersMinus1, hvcC)\n\n    eg.readUEG() // sps_seq_parameter_set_id\n\n    const chromaFormatIdc = hvcC.chromaFormatIdc = eg.readUEG()\n    let chromaFormat = 420\n    if (chromaFormatIdc <= 3) chromaFormat = [0, 420, 422, 444][chromaFormatIdc]\n\n    let separateColourPlaneFlag = 0\n    if (chromaFormatIdc === 3) {\n      separateColourPlaneFlag = eg.readBits(1)\n    }\n\n    let width = eg.readUEG() // pic_width_in_luma_samples\n    let height = eg.readUEG() // pic_height_in_luma_samples\n\n    const conformanceWindowFlag = eg.readBits(1)\n\n    let confWinLeftOffset\n    let confWinRightOffset\n    let confWinTopOffset\n    let confWinBottomOffset\n    if (conformanceWindowFlag === 1) {\n      confWinLeftOffset = eg.readUEG() // conf_win_left_offset\n      confWinRightOffset = eg.readUEG() // conf_win_right_offset\n      confWinTopOffset = eg.readUEG() // conf_win_top_offset\n      confWinBottomOffset = eg.readUEG() // conf_win_bottom_offset\n    }\n\n    hvcC.bitDepthLumaMinus8 = eg.readUEG() // bit_depth_luma_minus8\n    hvcC.bitDepthChromaMinus8 = eg.readUEG() // bit_depth_chroma_minus8\n\n    if (conformanceWindowFlag === 1) {\n      const subWidthC = (((chromaFormatIdc === 1) || (chromaFormatIdc === 2)) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      const subHeightC = ((chromaFormatIdc === 1) && (separateColourPlaneFlag === 0)) ? 2 : 1\n      width -= (subWidthC * (confWinRightOffset + confWinLeftOffset))\n      height -= (subHeightC * (confWinBottomOffset + confWinTopOffset))\n    }\n\n    return {\n      codec: 'hev1.1.6.L93.B0',\n      width,\n      height,\n      chromaFormat,\n      hvcC\n    }\n  }\n\n  static _parseProfileTierLevel (eg, maxSubLayersMinus1, hvcC) {\n    const generalTierFlag = hvcC.generalTierFlag || 0\n    hvcC.generalProfileSpace = eg.readBits(2)\n    hvcC.generalTierFlag = Math.max(eg.readBits(1), generalTierFlag)\n    hvcC.generalProfileIdc = Math.max(eg.readBits(5), hvcC.generalProfileIdc || 0)\n    hvcC.generalProfileCompatibilityFlags = eg.readBits(32)\n    hvcC.generalConstraintIndicatorFlags = [eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8), eg.readBits(8)]\n    const generalLevelIdc = eg.readBits(8)\n    if (generalTierFlag < hvcC.generalTierFlag) {\n      hvcC.generalLevelIdc = generalLevelIdc\n    } else {\n      hvcC.generalLevelIdc = Math.max(generalLevelIdc, hvcC.generalLevelIdc || 0)\n    }\n\n    const subLayerProfilePresentFlag = []\n    const subLayerLevelPresentFlag = []\n\n    if (maxSubLayersMinus1 > eg.bitsAvailable) {\n      throw new Error(`maxSubLayersMinus inavlid size ${maxSubLayersMinus1}`)\n    }\n\n    for (let j = 0; j < maxSubLayersMinus1; j++) {\n      subLayerProfilePresentFlag[j] = eg.readBits(1)\n      subLayerLevelPresentFlag[j] = eg.readBits(1)\n    }\n\n    if (maxSubLayersMinus1 > 0) {\n      eg.readBits((8 - maxSubLayersMinus1) * 2)\n    }\n\n    for (let i = 0; i < maxSubLayersMinus1; i++) {\n      if (subLayerProfilePresentFlag[i] !== 0) {\n        eg.readBits(2)\n        eg.readBits(1)\n        eg.readBits(5)\n\n        eg.readBits(16)\n        eg.readBits(16)\n\n        eg.readBits(4)\n\n        eg.readBits(16)\n        eg.readBits(16)\n        eg.readBits(12)\n      }\n      if (subLayerLevelPresentFlag[i] !== 0) {\n        eg.readBits(8)\n      }\n    }\n  }\n}\n","/**\n * Opus documentation, https://opus-codec.org/docs/\n * Ogg Encapsulation for the Opus Audio Codec, https://datatracker.ietf.org/doc/html/rfc7845.html\n *\n * Packet Organization:\n *\n *      Page 0         Pages 1 ... n        Pages (n+1) ...\n *    +------------+ +---+ +---+ ... +---+ +-----------+ +---------+ +--\n *    |            | |   | |   |     |   | |           | |         | |\n *    |+----------+| |+-----------------+| |+-------------------+ +-----\n *    |||ID Header|| ||  Comment Header || ||Audio Data Packet 1| | ...\n *    |+----------+| |+-----------------+| |+-------------------+ +-----\n *    |            | |   | |   |     |   | |           | |         | |\n *    +------------+ +---+ +---+ ... +---+ +-----------+ +---------+ +--\n *    ^      ^                           ^\n *    |      |                           |\n *    |      |                           Mandatory Page Break\n *    |      |\n *    |      ID header is contained on a single page\n *    |\n *    'Beginning Of Stream'\n */\nexport class OPUS {\n  static getFrameDuration (samples, timescale = 1000) {\n    return 20\n  }\n\n  /**\n   * Identification Header + Comment Header\n   * @param {Uint8Array} data\n   */\n  static parseHeaderPackets (data) {\n    if (!data.length) return\n\n    const dv = new DataView(data.buffer, data.byteOffset, data.byteLength)\n\n    // Identification Header\n    let magicSignature = ''\n    for (let i = 0; i < 8; i++) {\n      magicSignature += String.fromCodePoint(data[i])\n    }\n    if (magicSignature !== 'OpusHead') {\n      throw new Error('Invalid Opus MagicSignature')\n    }\n\n    // skip version\n    // data[8]\n    // console.log('Pre-skip', data[8])\n\n    const channelCount = data[9]\n\n    // skip Pre-skip\n    // data[10] & data[11]\n    console.log('Pre-skip', data[10], data[11])\n\n    const sampleRate = dv.getUint32(12, true)\n    const outputGain = dv.getInt16(16, true)\n\n    // const mappingFamily = dv.getUint8(18)\n\n    // play as no audio track stream\n    if (!sampleRate) return\n\n    const codec = 'opus'\n    const originCodec = 'opus'\n    const config = new Uint8Array(data.buffer, data.byteOffset + 8, data.byteLength - 8)\n\n    return {\n      outputGain,\n      sampleRate,\n      channelCount,\n      config,\n      codec,\n      originCodec\n    }\n  }\n}\n","import { isFirefox } from '../utils'\n\nconst BitratesMap = [\n  32, 64, 96, 128, 160, 192, 224, 256, 288, 320, 352, 384, 416, 448, 32, 48, 56,\n  64, 80, 96, 112, 128, 160, 192, 224, 256, 320, 384, 32, 40, 48, 56, 64, 80,\n  96, 112, 128, 160, 192, 224, 256, 320, 32, 48, 56, 64, 80, 96, 112, 128, 144,\n  160, 176, 192, 224, 256, 8, 16, 24, 32, 40, 48, 56, 64, 80, 96, 112, 128, 144,\n  160\n]\n\nconst FREQ = [\n  44100, 48000, 32000, 22050, 24000, 16000, 11025, 12000, 8000\n]\n\nconst SamplesCoefficients = [\n  // MPEG 2.5\n  [\n    0, // Reserved\n    72, // Layer3\n    144, // Layer2\n    12 // Layer1\n  ],\n  // Reserved\n  [\n    0, // Reserved\n    0, // Layer3\n    0, // Layer2\n    0 // Layer1\n  ],\n  // MPEG 2\n  [\n    0, // Reserved\n    72, // Layer3\n    144, // Layer2\n    12 // Layer1\n  ],\n  // MPEG 1\n  [\n    0, // Reserved\n    144, // Layer3\n    144, // Layer2\n    12 // Layer1\n  ]\n]\n\nconst BytesInSlot = [\n  0, // Reserved\n  1, // Layer3\n  1, // Layer2\n  4 // Layer1\n]\n\nlet chromeVersion = null\n\nexport class MPEG {\n  static isHeader (data, offset) {\n    return offset + 1 < data.length && (\n      data[offset] === 0xff &&\n      (data[offset + 1] & 0xe0) === 0xe0 &&\n      (data[offset + 1] & 0x06) !== 0x00\n    )\n  }\n\n  static appendFrame (\n    track,\n    data,\n    offset,\n    pts,\n    frameIndex\n  ) {\n    if (offset + 24 > data.length) {\n      return\n    }\n\n    const header = MPEG.parseHeader(data, offset)\n    if (header && offset + header.frameLength <= data.length) {\n      const frameDuration = (header.samplesPerFrame * 90000) / header.sampleRate\n      const stamp = pts + frameIndex * frameDuration\n      const sample = {\n        data: data.subarray(offset, offset + header.frameLength),\n        pts: stamp,\n        dts: stamp\n      }\n      sample.size = sample.data.byteLength\n      track.config = []\n      track.channelCount = header.channelCount\n      track.sampleRate = header.sampleRate\n      if (isFirefox) {\n        track.codec = 'mp3'\n      } else {\n        track.container = 'audio/mpeg'\n      }\n      track.samples.push(sample)\n\n      return { length: header.frameLength }\n    }\n  }\n\n  static parseHeader (data, offset) {\n    const mpegVersion = (data[offset + 1] >> 3) & 3\n    const mpegLayer = (data[offset + 1] >> 1) & 3\n    const bitRateIndex = (data[offset + 2] >> 4) & 15\n    const sampleRateIndex = (data[offset + 2] >> 2) & 3\n    if (\n      mpegVersion !== 1 &&\n      bitRateIndex !== 0 &&\n      bitRateIndex !== 15 &&\n      sampleRateIndex !== 3\n    ) {\n      const paddingBit = (data[offset + 2] >> 1) & 1\n      const channelMode = data[offset + 3] >> 6\n      const columnInBitrates =\n        mpegVersion === 3 ? 3 - mpegLayer : mpegLayer === 3 ? 3 : 4\n      const bitRate =\n        BitratesMap[columnInBitrates * 14 + bitRateIndex - 1] * 1000\n      const columnInSampleRates =\n        mpegVersion === 3 ? 0 : mpegVersion === 2 ? 1 : 2\n      const sampleRate = FREQ[columnInSampleRates * 3 + sampleRateIndex]\n      const channelCount = channelMode === 3 ? 1 : 2\n      const sampleCoefficient = SamplesCoefficients[mpegVersion][mpegLayer]\n      const bytesInSlot = BytesInSlot[mpegLayer]\n      const samplesPerFrame = sampleCoefficient * 8 * bytesInSlot\n      const frameLength =\n        Math.floor((sampleCoefficient * bitRate) / sampleRate + paddingBit) *\n        bytesInSlot\n\n      if (chromeVersion === null) {\n        const userAgent = navigator.userAgent || ''\n        const result = userAgent.match(/Chrome\\/(\\d+)/i)\n        chromeVersion = result ? parseInt(result[1]) : 0\n      }\n      const needChromeFix = !!chromeVersion && chromeVersion <= 87\n\n      if (\n        needChromeFix &&\n        mpegLayer === 2 &&\n        bitRate >= 224000 &&\n        channelMode === 0\n      ) {\n        data[offset + 3] = data[offset + 3] | 0x80\n      }\n\n      return { sampleRate, channelCount, frameLength, samplesPerFrame }\n    }\n  }\n}","import { AudioCodecType, AudioSample, WarningType } from '../model'\nimport { AAC, OPUS } from '../codec'\nimport { isSafari } from '../utils'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 500 // ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 1000 // ms\nconst AUDIO_EXCEPTION_LOG_EMIT_DURATION = 5000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 1000 // ms\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 200 // ms\nconst VIDEO_EXCEPTION_LOG_EMIT_DURATION = 5000 // 5s\nconst TRACK_BROKEN_CHECK_TIME = 5\n\nexport class FlvFixer {\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = 0\n    this._videoTimestampBreak = 0\n    this._lastVideoDuration = 0\n\n    // 在视频帧遇到下一个关键帧之前，如果音频时间戳发生了跳变，不能确定是否音视频都发生跳变还是单纯音频发生跳变.\n    // 这里记录关键帧标识, 从下一个关键帧开始，如果视频没有跳变，才能判断是只有音频发生了跳变\n    this._keyFrameInNextChunk = false\n\n    this._lastAudioExceptionGapDot = -Infinity\n    this._lastAudioExceptionOverlapDot = -Infinity\n    this._lastAudioExceptionLargeGapDot = -Infinity\n\n    this._lastVideoExceptionLargeGapDot = -Infinity\n    this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n  }\n\n  /**\n   * @param {number} startTime 点播seek到的时间点\n   * @param {boolean} discontinuity 是否换流\n   * @param {boolean} contiguous 前后chunk时间戳是否连续\n   */\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 1000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    if (discontinuity || !contiguous) {\n      this._videoLastSample = null\n      this._audioNextPts = undefined\n      this._videoNextDts = undefined\n      this._audioTimestampBreak = 0\n      this._videoTimestampBreak = 0\n      this._lastAudioExceptionGapDot = -Infinity\n      this._lastAudioExceptionOverlapDot = -Infinity\n      this._lastAudioExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionLargeGapDot = -Infinity\n      this._lastVideoExceptionChunkFirstDtsDot = -Infinity\n    }\n\n    if (discontinuity && !contiguous) {\n      this._baseDtsInited = false\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(audioTrack, videoTrack)\n    }\n\n    if (!contiguous && startTime) {\n      this._audioNextPts = this._videoNextDts = startTime\n    }\n\n    const resetBaseDts = this._baseDtsInited &&\n      (this._videoTimestampBreak || !this.videoTrack.exist()) &&\n      (this._audioTimestampBreak || !this.audioTrack.exist())\n\n    if (resetBaseDts) {\n      this._resetBaseDtsWhenStreamBreaked()\n    }\n\n    this._fixAudio(audioTrack)\n\n    this._keyFrameInNextChunk = false\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n      this.metadataTrack.flvScriptSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 1000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n\n    samples.forEach(x => {\n      x.dts -= this._baseDts\n      x.pts -= this._baseDts\n      if (x.keyframe) this._keyFrameInNextChunk = true\n    })\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    } else if (videoTrack.length > 1) {\n      const first = videoTrack.samples[0]\n      const last = videoTrack.samples[samples.length - 1]\n      refSampleDurationInt = Math.floor((last.dts - first.dts) / (samples.length - 1))\n    } else {\n      refSampleDurationInt = this._lastVideoDuration || 40\n    }\n\n    const lastSample = samples.pop()\n\n    if (this._videoLastSample) {\n      samples.unshift(this._videoLastSample)\n    }\n\n    this._videoLastSample = lastSample\n\n    if (!samples.length) return\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      // emit large delta of first sample with expect\n      if (Math.abs(firstSample.dts - this._lastVideoExceptionChunkFirstDtsDot) > VIDEO_EXCEPTION_LOG_EMIT_DURATION) {\n        this._lastVideoExceptionChunkFirstDtsDot = firstSample.dts\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n          nextDts: this._videoNextDts,\n          firstSampleDts: firstSample.dts,\n          nextSampleDts: samples[1]?.dts,\n          sampleDuration: vDelta\n        })\n      }\n\n      // only video break\n      if (this._videoTimestampBreak >= TRACK_BROKEN_CHECK_TIME) {\n        this._videoNextDts = firstSample.dts\n        this._videoTimestampBreak = 0\n      } else {\n        // resolve first frame only\n        firstSample.dts += vDelta\n        firstSample.pts += vDelta\n        if (!this.audioTrack.exist()) {\n          this._videoTimestampBreak = 1\n        }\n      }\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (lastSample) {\n        sampleDuration = lastSample.dts - dts\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        this._videoTimestampBreak++\n        // emit stream break\n        if (Math.abs(dts - this._lastVideoExceptionLargeGapDot) > VIDEO_EXCEPTION_LOG_EMIT_DURATION) {\n          this._lastVideoExceptionLargeGapDot = dts\n          videoTrack.warnings.push({\n            type: WarningType.LARGE_VIDEO_GAP,\n            time: dts / videoTrack.timescale,\n            dts,\n            originDts: samples[i].originDts,\n            nextDts: this._videoNextDts,\n            sampleDuration,\n            refSampleDuration: refSampleDurationInt\n          })\n        }\n\n        sampleDuration = refSampleDurationInt\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n      this._lastVideoDuration = sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n    if (!samples.length) return\n\n    // offset origin timestamp\n    samples.forEach(x => {\n      x.dts = x.pts -= this._baseDts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 1000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    /**\n       * timestamp break\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n    // calc baseDts base on new samples\n    const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n    if (!calc) return\n\n    // consider the expect dts for next frame\n    if (!this.audioTrack.exist()){\n      this._baseDts -= this._videoNextDts\n    } else if (!this.videoTrack.exist()){\n      this._baseDts -= this._audioNextPts\n    } else {\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n    }\n    this._videoTimestampBreak = 0\n    this._audioTimestampBreak = 0\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) {\n      switch (audioTrack.codecType) {\n        case AudioCodecType.AAC: {\n          audioTrack.sampleDuration = AAC.getFrameDuration(audioTrack.timescale, timescale)\n          break\n        }\n        case AudioCodecType.OPUS: {\n          audioTrack.sampleDuration = OPUS.getFrameDuration(audioTrack.samples, timescale)\n          break\n        }\n        case AudioCodecType.G711PCMA:\n        case AudioCodecType.G711PCMU: {\n          audioTrack.sampleDuration = this._getG711Duration(audioTrack)\n          break\n        }\n        default:\n          console.error('can\\'t fix audio codecType:', audioTrack.codecType)\n          break\n      }\n    }\n    const refSampleDuration = audioTrack.sampleDuration\n\n    const sampleDurationInSampleRate =\n      audioTrack.codecType === AudioCodecType.OPUS\n        ? 20\n        : audioTrack.codecType === AudioCodecType.AAC\n          ? 1024\n          : (refSampleDuration * audioTrack.timescale) / 1000\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      let nextPts = this._audioNextPts\n      const sample = samples[i]\n      let delta = sample.pts - nextPts\n\n      // only audio break\n      if (i === 0 && this._audioTimestampBreak >= TRACK_BROKEN_CHECK_TIME && this._keyFrameInNextChunk) {\n        nextPts = this._audioNextPts = sample.dts\n        delta = 0\n        this._audioTimestampBreak = 0\n      }\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = this._getSilentFrame(audioTrack) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCEPTION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_FILLED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            count,\n            nextPts,\n            refSampleDuration\n          })\n        }\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(this._audioNextPts + refSampleDuration) - Math.floor(this._audioNextPts), silentFrame, sampleDurationInSampleRate)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCEPTION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts,\n            originPts: sample.originPts,\n            nextPts,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) > MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak++\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCEPTION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts,\n              originPts: sample.originPts,\n              nextPts,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        if (audioTrack.codecType === AudioCodecType.OPUS) {\n          const lastSample = samples[samples.length - 1]\n          if (lastSample) {\n            lastSample.duration = sample.pts - lastSample.pts\n          }\n        } else {\n          sample.dts = sample.pts = nextPts\n          sample.duration = sampleDurationInSampleRate\n        }\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n\n  _getG711Duration (track) {\n    const { sampleSize, channelCount, sampleRate } = track\n    const samp0 = track.samples[0]\n    if (!samp0) return\n    return samp0.data.byteLength * 2 / channelCount / (sampleSize / 8) / sampleRate * 1000\n  }\n\n  _getSilentFrame (track) {\n    if (track.codecType === AudioCodecType.AAC) return AAC.getSilentFrame(track.codec, track.channelCount)\n    return new Uint8Array(8 * track.sampleDuration * track.channelCount)\n  }\n}\n","import { UTF8 } from '../utils'\n\nexport class AMF {\n  static parse (data) {\n    if (data.length < 3) return\n\n    const ret = {}\n    const name = AMF._parseValue(new DataView(data.buffer, data.byteOffset, data.byteLength))\n    const value = AMF._parseValue(new DataView(data.buffer, data.byteOffset + name.size, data.byteLength - name.size))\n    ret[name.data] = value.data\n\n    return ret\n  }\n\n  static _parseValue (view) {\n    const dataLen = view.byteLength\n    const type = view.getUint8(0)\n    let offset = 1\n    let isEnd = false\n    let value\n\n    switch (type) {\n      case 0: // Number(Double) type\n        value = view.getFloat64(1)\n        offset += 8\n        break\n      case 1: { // Boolean type\n        value = !!view.getUint8(1)\n        offset += 1\n        break\n      }\n      case 2: { // String type\n        const { data, size } = AMF._parseString(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n        value = data\n        offset += size\n      }\n        break\n      case 3: { // Object(s) type\n        value = {}\n        let terminal = 0\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 4) { // 4 === type(UI8) + ScriptDataObjectEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) offset += 3\n        }\n      }\n        break\n      case 8: { // ECMA array type (Mixed array)\n        value = {}\n        offset += 4 // ECMAArrayLength(UI32)\n        let terminal = 0 // workaround for malformed MixedArrays which has missing ScriptDataObjectEnd\n        if ((view.getUint32(dataLen - 4) & 0x00FFFFFF) === 9) {\n          terminal = 3\n        }\n        while (offset < dataLen - 8) { // 8 === type(UI8) + ECMAArrayLength(UI32) + ScriptDataVariableEnd(UI24)\n          const { size, data, isEnd } = AMF._parseObject(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset - terminal))\n          if (isEnd) break\n          value[data.name] = data.value\n          offset += size\n        }\n        if (offset <= dataLen - 3) {\n          const marker = view.getUint32(offset - 1) & 0x00FFFFFF\n          if (marker === 9) {\n            offset += 3\n          }\n        }\n      }\n        break\n      case 9: // ScriptDataObjectEnd\n        value = undefined\n        offset = 1\n        isEnd = true\n        break\n      case 10: { // Strict array type\n        value = []\n        const strictArrayLength = view.getUint32(1)\n        offset += 4\n        for (let i = 0; i < strictArrayLength; i++) {\n          const { data, size } = AMF._parseValue(new DataView(view.buffer, view.byteOffset + offset, view.byteLength - offset))\n          value.push(data)\n          offset += size\n        }\n      }\n        break\n      case 11: { // Date type\n        const timestamp = view.getFloat64(offset) + view.getInt16(offset + 8) * 60000\n        value = new Date(timestamp)\n        offset += 10\n      }\n        break\n      case 12: { // Long string type\n        const length = view.getUint32(1)\n        offset += 4\n        value = ''\n        if (length > 0) {\n          value = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + offset, length))\n        }\n        offset += length\n      }\n        break\n      default:\n        offset = dataLen\n        break\n    }\n\n    return {\n      data: value,\n      size: offset,\n      isEnd\n    }\n  }\n\n  static _parseString (view) {\n    const length = view.getUint16(0)\n    let data = ''\n    if (length > 0) {\n      data = UTF8.decode(new Uint8Array(view.buffer, view.byteOffset + 2, length))\n    }\n\n    return {\n      data,\n      size: 2 + length\n    }\n  }\n\n  static _parseObject (view) {\n    if (view.byteLength < 3) return\n\n    const name = AMF._parseString(view)\n    const value = AMF._parseValue(new DataView(view.buffer, view.byteOffset + name.size, view.byteLength - name.size))\n\n    return {\n      data: {\n        name: name.data,\n        value: value.data\n      },\n      size: name.size + value.size,\n      isEnd: value.isEnd\n    }\n  }\n}\n","/**\n * AudioData\n * @property {number} FlvSoundFormat\n */\nexport const FlvSoundFormat = {\n  MP3: 2,\n  G711A: 7, // G.711 A-law logarithmic PCM\n  G711M: 8, // G.711 mu-law logarithmic PCM\n  AAC: 10, // AAC\n  OPUS: 13\n}\n\n","import { VideoTrack, AudioTrack, MetadataTrack, AudioSample, VideoSample, VideoCodecType, AudioCodecType, FlvScriptSample, SeiSample } from '../model'\nimport { FlvFixer } from './fixer'\nimport { concatUint8Array, Logger, readBig32 } from '../utils'\nimport { AAC, AVC, HEVC, NALu } from '../codec'\nimport { AMF } from './amf'\nimport { FlvSoundFormat } from './soundFormat'\nimport { OPUS } from '../codec/opus'\n\nconst logger = new Logger('FlvDemuxer')\n\n/**\n * @typedef {Object} DemuxResult\n * @property {VideoTrack} videoTrack\n * @property {AudioTrack} audioTrack\n * @property {MetadataTrack} metadataTrack\n */\n\nexport class FlvDemuxer {\n  _headerParsed = false\n  _remainingData = null\n  _gopId = 0\n  _needAddMetaBeforeKeyFrameNal = true // 标识H265流中关键帧Nal之前是否需要插入vps、sps、pps Nal\n\n  static AUDIO_RATE = [5500, 11000, 22000, 44000]\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new FlvFixer(this.videoTrack, this.audioTrack, this.metadataTrack)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false] 切流\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true, seamlessLoadingSwitching) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity || !contiguous) {\n      this._remainingData = null\n    }\n\n    if (discontinuity) {\n      this._headerParsed = false\n    }\n\n    if (discontinuity) {\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      metadataTrack.flvScriptSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingData) {\n        data = concatUint8Array(this._remainingData, data)\n        this._remainingData = null\n      }\n    }\n\n    if (!data.length) {\n      return {\n        videoTrack,\n        audioTrack,\n        metadataTrack\n      }\n    }\n\n    let offset = 0\n    if (!this._headerParsed) {\n      if (!FlvDemuxer.probe(data)) {\n        throw new Error('Invalid flv file')\n      }\n      audioTrack.present = ((data[4] & 4) >>> 2) !== 0\n      videoTrack.present = (data[4] & 1) !== 0\n      this._headerParsed = true\n      offset = readBig32(data, 5) + 4 // skip prev tag size\n    }\n\n    const dataLen = data.length\n\n    let tagType\n    let dataSize\n    let timestamp\n    let bodyData\n    let prevTagSize\n    while ((offset + 15) < dataLen) { // header and prev tag size\n      tagType = data[offset]\n      dataSize = (data[offset + 1] << 16) | (data[offset + 2] << 8) | data[offset + 3]\n      if (offset + 15 + dataSize > dataLen) break\n      timestamp = (\n        (data[offset + 7] << 24 >>> 0) +\n        (data[offset + 4] << 16) +\n        (data[offset + 5] << 8) +\n        data[offset + 6]\n      )\n\n      offset += 11\n      bodyData = data.subarray(offset, offset + dataSize)\n      if (tagType === 8) {\n        this._parseAudio(bodyData, timestamp)\n      } else if (tagType === 9) {\n        if (seamlessLoadingSwitching) this.seamlessLoadingSwitching = true\n        this._parseVideo(bodyData, timestamp)\n      } else if (tagType === 18) {\n        this._parseScript(bodyData, timestamp)\n      } else {\n        logger.warn(`Invalid tag type: ${tagType}`)\n      }\n\n      offset += dataSize\n      prevTagSize = readBig32(data, offset)\n      if (prevTagSize !== 11 + dataSize) {\n        logger.warn(`Invalid PrevTagSize ${prevTagSize} (${11 + dataSize})`)\n      }\n\n      offset += 4\n    }\n\n    if (offset < dataLen) {\n      this._remainingData = data.subarray(offset)\n    }\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 1000\n    audioTrack.timescale = audioTrack.codecType === AudioCodecType.OPUS ? 1000 : audioTrack.sampleRate || 0\n\n    if (!audioTrack.exist() && audioTrack.hasSample()) {\n      audioTrack.reset()\n    }\n    if (!videoTrack.exist() && videoTrack.hasSample()) {\n      videoTrack.reset()\n    }\n\n    const scriptDataObject = metadataTrack.flvScriptSamples[metadataTrack.flvScriptSamples.length - 1]\n    const metaData = scriptDataObject?.data?.onMetaData\n\n    if (metaData) {\n      if (videoTrack?.exist()) {\n        if (metaData.hasOwnProperty('duration')) {\n          videoTrack.duration = metaData.duration * 1000\n        }\n\n        if (metaData.hasOwnProperty('width') && metaData.hasOwnProperty('height')) {\n          videoTrack.width = metaData.width\n          videoTrack.height = metaData.height\n        }\n      }\n\n      if (audioTrack?.exist()) {\n        if (metaData.hasOwnProperty('duration')) {\n          audioTrack.duration = metaData.duration * 1000\n        }\n      }\n    }\n\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {DemuxResult}\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   * @returns {DemuxResult}\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime, seamlessLoadingSwitching) {\n    this.demux(data, discontinuity, contiguous, seamlessLoadingSwitching)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (data[0] !== 0x46 || data[1] !== 0x4C || data[2] !== 0x56 || data[3] !== 0x01) {\n      return false\n    }\n    return readBig32(data, 5) >= 9\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {number} pts\n   * @private\n   */\n  _parseAudio (data, pts) {\n    if (!data.length) return\n\n    const format = (data[0] & 0xf0) >>> 4\n    const track = this.audioTrack\n\n    if (\n      format !== FlvSoundFormat.AAC &&\n      format !== FlvSoundFormat.G711A &&\n      format !== FlvSoundFormat.G711M &&\n      format !== FlvSoundFormat.OPUS\n    ) {\n      logger.warn(`Unsupported sound format: ${format}`)\n      track.reset()\n      return\n    }\n\n    if (format !== FlvSoundFormat.AAC && format !== FlvSoundFormat.OPUS) {\n      const soundRate = (data[0] & 0x0c) >> 2\n      const soundSize = (data[0] & 0x02) >> 1\n      const soundType = (data[0] & 0x01)\n      track.sampleRate = FlvDemuxer.AUDIO_RATE[soundRate]\n      track.sampleSize = soundSize ? 16 : 8\n      track.channelCount = soundType + 1\n    }\n\n    switch (format) {\n      case FlvSoundFormat.G711A:\n      case FlvSoundFormat.G711M:\n        this._parseG711(data, pts, format)\n        break\n      case FlvSoundFormat.AAC:\n        this._parseAac(data, pts)\n        break\n      case FlvSoundFormat.OPUS:\n        this._parseOpus(data, pts)\n        break\n      default:\n        break\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {number} pts\n   * @private\n   */\n  _parseOpus (data, pts) {\n    const track = this.audioTrack\n    const packetType = data[1]\n\n    track.codecType = AudioCodecType.OPUS\n\n    switch (packetType) {\n      case 0 /* Header Packets */: {\n        const ret = OPUS.parseHeaderPackets(data.subarray(2))\n        if (ret) {\n          track.codec = ret.codec\n          track.channelCount = ret.channelCount\n          track.sampleRate = ret.sampleRate\n          track.config = ret.config\n          track.sampleDuration = OPUS.getFrameDuration([], track.timescale)\n        } else {\n          track.reset()\n          logger.warn('Cannot parse AudioSpecificConfig', data)\n        }\n        break\n      }\n      case 1 /* Raw OPUS frame data */: {\n        if (pts === undefined || pts === null) return\n\n        const newSample = new AudioSample(pts, data.subarray(2), track.sampleDuration)\n        track.samples.push(newSample)\n        break\n      }\n      default:\n        logger.warn(`Unknown OpusPacketType: ${packetType}`)\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {number} pts\n   * @param {import('./soundFormat').FlvSoundFormat} format\n   */\n  _parseG711 (data, pts, format) {\n    const track = this.audioTrack\n    const audioData = data.subarray(1)\n\n    if (audioData.byteLength < 1) return\n\n    const sample = new AudioSample(pts, audioData)\n    track.codecType = format === 7 ? AudioCodecType.G711PCMA : AudioCodecType.G711PCMU\n    track.sampleRate = 8000\n    track.codec = track.codecType\n    track.samples.push(sample)\n  }\n\n  _parseAac (data, pts) {\n    const track = this.audioTrack\n    track.codecType = AudioCodecType.AAC\n\n    if (data[1] === 0) { // AACPacketType\n      const ret = AAC.parseAudioSpecificConfig(data.subarray(2))\n      if (ret) {\n        track.codec = ret.codec\n        track.channelCount = ret.channelCount\n        track.sampleRate = ret.sampleRate\n        track.config = ret.config\n        track.objectType = ret.objectType\n        track.sampleRateIndex = ret.samplingFrequencyIndex\n      } else {\n        track.reset()\n        logger.warn('Cannot parse AudioSpecificConfig', data)\n      }\n    } else if (data[1] === 1) { // Raw AAC frame data\n      if (pts === undefined || pts === null) return\n      track.samples.push(new AudioSample(pts, data.subarray(2)))\n    } else {\n      logger.warn(`Unknown AACPacketType: ${data[1]}`)\n    }\n  }\n\n  _parseVideo (data, dts) {\n    if (data.length < 6) return\n\n    const frameType = (data[0] & 0xf0) >>> 4\n    const codecId = data[0] & 0x0f\n\n    const track = this.videoTrack\n\n    if (\n      codecId !== 7 && // AVC\n      codecId !== 12 // HEVC\n    ) {\n      track.reset()\n      logger.warn(`Unsupported codecId: ${codecId}`)\n      return\n    }\n\n    const isHevc = codecId === 12\n    track.codecType = isHevc ? VideoCodecType.HEVC : VideoCodecType.AVC\n\n    const packetType = data[1]\n    const cts = (((data[2] << 16) | (data[3] << 8) | (data[4])) << 8) >> 8\n\n    if (packetType === 0) { // DecoderConfigurationRecord\n      const configData = data.subarray(5)\n      const ret = isHevc\n        ? HEVC.parseHEVCDecoderConfigurationRecord(configData)\n        : AVC.parseAVCDecoderConfigurationRecord(configData)\n      if (ret) {\n        const { hvcC, sps, ppsArr, spsArr, vpsArr, nalUnitSize } = ret\n        if (hvcC) {\n          track.hvcC = track.hvcC || hvcC\n        }\n        if (sps) {\n          track.codec = sps.codec\n          track.width = sps.width\n          track.height = sps.height\n          track.sarRatio = sps.sarRatio\n          track.fpsNum = sps.fpsNum\n          track.fpsDen = sps.fpsDen\n        }\n        if (spsArr.length) track.sps = spsArr\n        if (ppsArr.length) track.pps = ppsArr\n        if (vpsArr && vpsArr.length) track.vps = vpsArr\n        if (nalUnitSize) track.nalUnitSize = nalUnitSize\n      } else {\n        logger.warn(`Cannot parse ${isHevc ? 'HEVC' : 'AVC'}DecoderConfigurationRecord`, data)\n      }\n    } else if (packetType === 1) { // One or more NALUs\n      let units = NALu.parseAvcC(data.subarray(5), track.nalUnitSize)\n\n      units = this._checkAddMetaNalToUnits(isHevc, units, track)\n\n      if (units && units.length) {\n        const sample = new VideoSample(dts + cts, dts, units)\n        if (this.seamlessLoadingSwitching && dts < track.lastKeyFrameDts) {\n          return\n        }\n        this.seamlessLoadingSwitching = false\n        if (frameType === 1) {\n          sample.setToKeyframe()\n          track.lastKeyFrameDts = dts\n        }\n        track.samples.push(sample)\n\n        units.forEach(unit => {\n          const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n          switch (type) {\n            case 5: // IDR\n            case 16: // HEVC BLA_W_LP\n            case 17: // HEVC BLA_W_RADL\n            case 18: // HEVC BLA_N_LP\n            case 19: // HEVC IDR_W_RADL\n            case 20: // HEVC IDR_N_LP\n            case 21: // HEVC CRA_NUT\n            case 22: // HEVC RSV_IRAP_VCL22\n            case 23: // HEVC RSV_IRAP_VCL23\n              if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n              sample.setToKeyframe()\n              break\n            case 6: // SEI\n            case 39: // HEVC PREFIX_SEI\n            case 40: // HEVC SUFFIX_SEI\n              if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n              this.metadataTrack.seiSamples.push(new SeiSample(\n                NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n                dts + cts\n              ))\n              break\n            default:\n          }\n        })\n\n        if (sample.keyframe) {\n          this._gopId++\n        }\n        sample.gopId = this._gopId\n      } else {\n        logger.warn('Cannot parse NALUs', data)\n      }\n    } else if (packetType === 2) {\n      // AVC end of sequence, Empty\n    } else {\n      logger.warn(`Unknown AVCPacketType: ${packetType}`)\n    }\n  }\n\n  _checkAddMetaNalToUnits (hevc, units, track) {\n    if (!hevc || !this._needAddMetaBeforeKeyFrameNal) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    const nalTypes = units.map(x => (x[0] >>> 1) & 0x3f)\n\n    if (nalTypes.includes(32)) {\n      this._needAddMetaBeforeKeyFrameNal = false\n      return units\n    }\n\n    units.unshift(track.pps[0])\n    units.unshift(track.sps[0])\n    units.unshift(track.vps[0])\n\n    return units.filter(Boolean)\n  }\n\n  _parseScript (data, pts) {\n    this.metadataTrack.flvScriptSamples.push(new FlvScriptSample(AMF.parse(data), pts))\n  }\n}\n","import { AudioSample, WarningType } from '../model'\nimport { AAC } from '../codec'\nimport { isSafari } from '../utils'\nimport { AudioCodecType } from '../model/types'\n\nconst LARGE_AV_FIRST_FRAME_GAP = 90000 / 2 // 500ms\nconst AUDIO_GAP_OVERLAP_THRESHOLD_COUNT = 3\nconst MAX_SILENT_FRAME_DURATION = 90000 // 1s\nconst AUDIO_EXCETION_LOG_EMIT_DURATION = 5 * 90000 // 5s\nconst MAX_VIDEO_FRAME_DURATION = 90000 // 1s\nconst MAX_DTS_DELTA_WITH_NEXT_CHUNK = 90000 / 2 // 500ms\nconst LARGE_AV_FIRST_FRAME_FORCE_FIX_THRESHOLD = 90000 * 5 // 5s\n\nexport class TsFixer {\n  constructor (videoTrack, audioTrack, metadataTrack, fixerConfig) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    this.metadataTrack = metadataTrack\n\n    this._baseDts = -1\n    this._baseVideoDts = -1\n    this._baseAudioDts = -1\n    this._baseDtsInited = false\n\n    this._audioNextPts = undefined\n    this._videoNextDts = undefined\n\n    this._audioTimestampBreak = false\n    this._videoTimestampBreak = false\n\n    this._lastAudioExceptionGapDot = 0\n    this._lastAudioExceptionOverlapDot = 0\n    this._lastAudioExceptionLargeGapDot = 0\n\n    this._needForceFixLargeGap = fixerConfig?.forceFixLargeGap\n    this._largeGapThreshold = fixerConfig?.largeGapThreshold || LARGE_AV_FIRST_FRAME_FORCE_FIX_THRESHOLD\n  }\n\n  fix (startTime = 0, discontinuity = false, contiguous = true) {\n    startTime = Math.round(startTime * 90000)\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n\n    const vSamples = videoTrack.samples\n    const aSamples = audioTrack.samples\n\n    if (!vSamples.length && !aSamples.length) return\n\n    const firstVideoSample = vSamples[0]\n    const firstAudioSample = aSamples[0]\n    // consider av delta\n    let vaDelta = 0\n\n    if (vSamples.length && aSamples.length) {\n      vaDelta = firstVideoSample.dts - firstAudioSample.pts\n    }\n\n    if (!this._baseDtsInited) {\n      this._calculateBaseDts(this.audioTrack, this.videoTrack)\n    }\n\n    // recalc baseDts\n    if (discontinuity) {\n      this._calculateBaseDts(this.audioTrack, this.videoTrack)\n      this._baseDts -= startTime\n      this._baseAudioDts -= startTime\n      this._baseVideoDts -= startTime\n    }\n\n    // id discontinue, recalc nextDts, consider av delta of firstframe\n    if (!contiguous) {\n      /**\n       *  segment.start = min(a, v)\n       *  segment.start\n       *      |\n       *      a\n       *       -- vaDelta --\n       *                   v\n       */\n      this._videoNextDts = vaDelta > 0 ? startTime + vaDelta : startTime\n      this._audioNextPts = vaDelta > 0 ? startTime : startTime - vaDelta\n\n      if (this._needForceFixLargeGap){\n        this._videoNextDts = 0\n        this._audioNextPts = 0\n      }\n      const vDeltaToNextDts = firstVideoSample ? firstVideoSample.dts - this._baseDts - this._videoNextDts : 0\n      const aDeltaToNextDts = firstAudioSample ? firstAudioSample.pts - this._baseDts - this._audioNextPts : 0\n\n      if (Math.abs(vDeltaToNextDts || aDeltaToNextDts) > MAX_VIDEO_FRAME_DURATION) {\n        this._calculateBaseDts(this.audioTrack, this.videoTrack)\n        this._baseDts -= startTime\n      }\n    }\n\n    this._resetBaseDtsWhenStreamBreaked()\n\n    // fix audio first\n    this._fixAudio(audioTrack)\n\n    this._fixVideo(videoTrack)\n\n    if (this.metadataTrack.exist()) {\n      const timescale = this.metadataTrack.timescale\n      this.metadataTrack.seiSamples.forEach(s => {\n        s.pts = s.originPts - this._baseDts\n        s.time = Math.max(0, s.pts) / timescale\n      })\n    }\n\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].dts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts * audioTrack.timescale / 90000\n    }\n  }\n\n  _fixVideo (videoTrack) {\n    const samples = videoTrack.samples\n\n    if (!samples.length) return\n    samples.forEach(x => {\n      x.dts -= this._needForceFixLargeGap ? this._baseVideoDts : this._baseDts\n      x.pts -= this._needForceFixLargeGap ? this._baseVideoDts : this._baseDts\n    })\n\n    if (this._videoNextDts === undefined) {\n      const samp0 = samples[0]\n      this._videoNextDts = samp0.dts\n    }\n\n    const len = samples.length\n    let sampleDuration = 0\n    const firstSample = samples[0]\n    const nextSample = samples[1]\n    const vDelta = this._videoNextDts - firstSample.dts\n\n    if (Math.abs(vDelta) > MAX_DTS_DELTA_WITH_NEXT_CHUNK) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK,\n        nextDts: this._videoNextDts / 90,\n        firstSampleDts: firstSample.dts / 90,\n        nextSampleDts: (samples[1]?.dts || 0) / 90,\n        sampleDuration: vDelta / 90\n      })\n\n      // resolve first frame first\n      firstSample.dts += vDelta\n      firstSample.pts += vDelta\n\n\n      // check to ajust the whole segment\n      if (nextSample && Math.abs(nextSample.dts - firstSample.dts) > MAX_VIDEO_FRAME_DURATION) {\n        this._videoTimestampBreak = true\n        samples.forEach((x, i) => {\n          if (i === 0) return\n          x.dts += vDelta\n          x.pts += vDelta\n        })\n      } else {\n        for (let i = 1; i < len - 1; i++) {\n          const dts = samples[i]?.dts\n          const prevDts = samples[i - 1 ].dts\n          if (dts && dts - prevDts < 0) {\n            samples[i].dts += vDelta\n            samples[i].pts += vDelta\n          }\n        }\n      }\n    }\n\n    let refSampleDurationInt\n    if (videoTrack.fpsNum && videoTrack.fpsDen) {\n      refSampleDurationInt = videoTrack.timescale * (videoTrack.fpsDen / videoTrack.fpsNum)\n    }\n\n    // fps inaccuracy\n    if (refSampleDurationInt < 90 * 10) { // < 10ms per frame\n      refSampleDurationInt = 0\n    }\n\n    if (!refSampleDurationInt) {\n      const first = videoTrack.samples[0]\n      const second = videoTrack.samples[1]\n      // 100ms default\n      refSampleDurationInt = len === 1 ? 9000 : Math.floor((second.dts - first.dts))\n    }\n\n    for (let i = 0; i < len; i++) {\n      const dts = samples[i].dts\n      const nextSample = samples[i + 1]\n      if (i < len - 1) {\n        sampleDuration = nextSample.dts - dts\n      } else if (samples[i - 1]) {\n        sampleDuration = Math.min(dts - samples[i - 1].dts, refSampleDurationInt)\n      } else {\n        sampleDuration = refSampleDurationInt\n      }\n\n      if (sampleDuration > MAX_VIDEO_FRAME_DURATION || sampleDuration < 0) {\n        // dts exception of adjacent frame\n        this._videoTimestampBreak = true\n\n        // check if only video breaked!\n        sampleDuration = this._audioTimestampBreak ? refSampleDurationInt : Math.max(sampleDuration, 30 * 90) // 30ms\n\n        // check if sample breaked within current fragment\n        const expectFragEnd = (this._audioNextPts || 0)\n        if (nextSample && nextSample.dts > expectFragEnd) {\n          sampleDuration = refSampleDurationInt\n        }\n\n        videoTrack.warnings.push({\n          type: WarningType.LARGE_VIDEO_GAP,\n          time: dts / videoTrack.timescale,\n          dts,\n          originDts: samples[i].originDts,\n          nextDts: this._videoNextDts,\n          sampleDuration,\n          refSampleDuration: refSampleDurationInt\n        })\n      }\n\n      samples[i].duration = sampleDuration\n      this._videoNextDts += sampleDuration\n    }\n  }\n\n  _fixAudio (audioTrack) {\n    const samples = audioTrack.samples\n\n    if (!samples.length) return\n    if (audioTrack.codecType === AudioCodecType.MP3) {\n      if (this.lastAudioSample) {\n        samples.unshift(this.lastAudioSample)\n      }\n      for (let index = 0; index < samples.length; index++) {\n        const x = samples[index]\n        if (samples[index + 1]) {\n          x.duration = samples[index + 1].pts - x.pts\n        } else {\n          break\n        }\n        x.pts -= this._baseDts\n        x.dts = x.pts\n      }\n      this.lastAudioSample = samples.pop()\n      return\n    }\n    samples.forEach(x => {\n      x.pts -= this._needForceFixLargeGap ? this._baseAudioDts : this._baseDts\n      x.dts = x.pts\n    })\n\n    this._doFixAudioInternal(audioTrack, samples, 90000)\n  }\n\n  _calculateBaseDts (audioTrack, videoTrack) {\n    const audioSamps = audioTrack.samples\n    const videoSamps = videoTrack.samples\n\n    if (!audioSamps.length && !videoSamps.length) {\n      return false\n    }\n\n    let audioBasePts = Infinity\n    let videoBaseDts = Infinity\n\n    if (audioSamps.length) {\n      audioTrack.baseDts = audioBasePts = audioSamps[0].pts\n      this._baseAudioDts = audioBasePts\n    }\n\n    if (videoSamps.length) {\n      videoTrack.baseDts = videoBaseDts = videoSamps[0].dts\n      this._baseVideoDts = videoBaseDts\n    }\n\n    this._baseDts = Math.min(audioBasePts, videoBaseDts)\n\n    const delta = videoBaseDts - audioBasePts\n    let largeGap = false\n    if (Number.isFinite(delta) && Math.abs(delta) > LARGE_AV_FIRST_FRAME_GAP) {\n      videoTrack.warnings.push({\n        type: WarningType.LARGE_AV_SHIFT,\n        videoBaseDts,\n        audioBasePts,\n        baseDts: this._baseDts,\n        delta\n      })\n    }\n    if (Number.isFinite(delta) && Math.abs(delta) > this._largeGapThreshold * MAX_SILENT_FRAME_DURATION) {\n      largeGap = true\n    }\n    if (!this._baseDtsInited){\n      if (largeGap && this._needForceFixLargeGap) {\n        this._needForceFixLargeGap = true\n      } else {\n        this._needForceFixLargeGap = false\n      }\n    }\n    this._baseDtsInited = true\n    return true\n  }\n\n  _resetBaseDtsWhenStreamBreaked () {\n    if (this._baseDtsInited && this._videoTimestampBreak && this._audioTimestampBreak) {\n      /**\n       * timestamp breaked\n       *                     _audioNextDts\n       *  ---------------------|\n       * (_baseDts)          _videoNextDts\n       * ----------------------|\n       *                        <----------------\n       *                                       nextVideo.dts\n       * ----------------------------------------|\n       *                                       nextAudio.dts\n       * ---------------------------------------|\n       */\n\n      // calc baseDts base on new samples\n      const calc = this._calculateBaseDts(this.audioTrack, this.videoTrack)\n\n      if (!calc) return\n\n      // consider the expect dts for next frame\n      this._baseDts -= Math.min(this._audioNextPts, this._videoNextDts)\n      this._audioLastSample = null\n      this._videoLastSample = null\n      this._videoTimestampBreak = false\n      this._audioTimestampBreak = false\n    }\n  }\n\n  _doFixAudioInternal (audioTrack, samples, timescale) {\n    if (!audioTrack.sampleDuration) audioTrack.sampleDuration = AAC.getFrameDuration(audioTrack.timescale, timescale)\n    const refSampleDuration = audioTrack.sampleDuration\n\n    if (this._audioNextPts === undefined) {\n      const samp0 = samples[0]\n      this._audioNextPts = samp0.pts\n    }\n\n    for (let i = 0; i < samples.length; i++) {\n      const nextPts = this._audioNextPts\n      const sample = samples[i]\n      const delta = sample.pts - nextPts\n\n      // fill frames\n      // delta >= 3 * refSampleDurationInt\n      // delta <= 500s\n      if (!this._audioTimestampBreak && delta >= AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta <= MAX_SILENT_FRAME_DURATION && !isSafari) {\n        const silentFrame = AAC.getSilentFrame(audioTrack.codec, audioTrack.channelCount) || samples[0].data.subarray()\n        const count = Math.floor(delta / refSampleDuration)\n\n        if (Math.abs(sample.pts - this._lastAudioExceptionGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionGapDot = sample.pts\n        }\n\n        audioTrack.warnings.push({\n          type: WarningType.AUDIO_FILLED,\n          pts: sample.pts / 90,\n          originPts: sample.originPts,\n          count,\n          nextPts: nextPts / 90,\n          refSampleDuration\n        })\n\n        for (let j = 0; j < count; j++) {\n          const silentSample = new AudioSample(Math.floor(nextPts), silentFrame)\n          silentSample.originPts = Math.floor(this._baseDts + nextPts)\n          samples.splice(i, 0, silentSample)\n          this._audioNextPts += refSampleDuration\n          i++\n        }\n\n        i--\n        // delta  <= -3 * refSampleDurationInt\n        // delta  >= -500ms\n      } else if (delta <= -AUDIO_GAP_OVERLAP_THRESHOLD_COUNT * refSampleDuration && delta >= -1 * MAX_SILENT_FRAME_DURATION) {\n        // need discard frames\n        if (Math.abs(sample.pts - this._lastAudioExceptionOverlapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n          this._lastAudioExceptionOverlapDot = sample.pts\n          audioTrack.warnings.push({\n            type: WarningType.AUDIO_DROPPED,\n            pts: sample.pts / 90,\n            originPts: sample.originPts,\n            nextPts: nextPts / 90,\n            refSampleDuration\n          })\n        }\n        samples.splice(i, 1)\n        i--\n      } else {\n        if (Math.abs(delta) >= MAX_SILENT_FRAME_DURATION) {\n          this._audioTimestampBreak = true\n\n          if (Math.abs(sample.pts - this._lastAudioExceptionLargeGapDot) > AUDIO_EXCETION_LOG_EMIT_DURATION) {\n            this._lastAudioExceptionLargeGapDot = sample.pts\n            audioTrack.warnings.push({\n              type: WarningType.LARGE_AUDIO_GAP,\n              time: sample.pts / 1000,\n              pts: sample.pts / 90,\n              originPts: sample.originPts,\n              nextPts: nextPts / 90,\n              sampleDuration: delta,\n              refSampleDuration\n            })\n          }\n        }\n\n        sample.dts = sample.pts = nextPts\n        this._audioNextPts += refSampleDuration\n      }\n    }\n  }\n}\n","import { TsFixer } from './fixer'\nimport { AVC, AAC, HEVC, NALu, MPEG } from '../codec'\nimport { VideoSample, AudioSample, VideoCodecType, VideoTrack, AudioTrack, MetadataTrack, SeiSample } from '../model'\nimport { Logger, concatUint8Array } from '../utils'\nimport { AudioCodecType } from '../model/types'\n\nconst logger = new Logger('TsDemuxer')\n\nexport class TsDemuxer {\n  _pmtId = -1\n  _remainingPacketData = null\n  _videoPesData = []\n  _audioPesData = []\n  _gopId = 0\n\n  /**\n   * @param {VideoTrack} [videoTrack]\n   * @param {AudioTrack} [audioTrack]\n   * @param {MetadataTrack} [metadataTrack]\n   */\n  constructor (videoTrack, audioTrack, metadataTrack, fixerConfig = {}) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n    this._fixer = new TsFixer(this.videoTrack, this.audioTrack, this.metadataTrack, fixerConfig)\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @returns {import('../flv').DemuxResult}\n   */\n  demux (data, discontinuity = false, contiguous = true) {\n    const { audioTrack, videoTrack, metadataTrack } = this\n\n    if (discontinuity) {\n      this._pmtId = -1\n      videoTrack.reset()\n      audioTrack.reset()\n      metadataTrack.reset()\n    }\n\n    if (!contiguous || discontinuity) {\n      this._remainingPacketData = null\n      this._videoPesData = []\n      this._audioPesData = []\n    } else {\n      videoTrack.samples = []\n      audioTrack.samples = []\n      metadataTrack.seiSamples = []\n      videoTrack.warnings = []\n      audioTrack.warnings = []\n\n      if (this._remainingPacketData) {\n        data = concatUint8Array(this._remainingPacketData, data)\n        this._remainingPacketData = null\n      }\n    }\n\n    let dataLen = data.length\n    const remainingLength = dataLen % 188\n    if (remainingLength) {\n      this._remainingPacketData = data.subarray(dataLen - remainingLength)\n      dataLen -= remainingLength\n    }\n\n    let videoPid = videoTrack.pid\n    let audioPid = audioTrack.pid\n\n    for (let start = 0; start < dataLen; start += 188) {\n      if (data[start] !== 0x47) throw new Error('TS packet did not start with 0x47')\n      const payloadUnitStartIndicator = !!(data[start + 1] & 0x40)\n      const pid = ((data[start + 1] & 0x1f) << 8) + data[start + 2]\n      const adaptationFiledControl = (data[start + 3] & 0x30) >> 4\n\n      let offset\n      if (adaptationFiledControl > 1) {\n        offset = start + 5 + data[start + 4]\n        if (offset === start + 188) continue\n      } else {\n        offset = start + 4\n      }\n\n      switch (pid) {\n        case 0: // PAT\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          this._pmtId = ((data[offset + 10] & 0x1f) << 8) | data[offset + 11]\n          break\n        case this._pmtId: {\n          if (payloadUnitStartIndicator) offset += data[offset] + 1\n          const tableEnd = offset + 3 + (((data[offset + 1] & 0x0f) << 8) | data[offset + 2]) - 4\n          const programInfoLength = ((data[offset + 10] & 0x0f) << 8) | data[offset + 11]\n          offset += 12 + programInfoLength\n\n          while (offset < tableEnd) {\n            const esPid = ((data[offset + 1] & 0x1f) << 8) | data[offset + 2]\n            switch (data[offset]) {\n              case 0x0f: // AAC ADTS\n                audioTrack.pid = audioPid = esPid\n                break\n              case 0x03:\n              case 0x04:\n                if (audioTrack.pid === -1) {\n                  audioTrack.pid = audioPid = esPid\n                  audioTrack.codecType = AudioCodecType.MP3\n                }\n                break\n              case 0x1b: // AVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.AVC\n                videoTrack.pid = videoPid = esPid\n                break\n              case 0x24: // HEVC\n                if (videoPid !== -1) break\n                videoTrack.codecType = VideoCodecType.HEVC\n                videoTrack.pid = videoPid = esPid\n                break\n              default:\n                logger.warn(`Unsupported stream. type: ${data[offset]}, pid: ${esPid}`)\n            }\n\n            offset += (((data[offset + 3] & 0x0f) << 8) | data[offset + 4]) + 5\n          }\n        }\n          break\n        case videoPid:\n          if (payloadUnitStartIndicator && this._videoPesData.length) {\n            this._parseVideoData()\n          }\n          this._videoPesData.push(data.subarray(offset, start + 188))\n          break\n        case audioPid:\n          if (payloadUnitStartIndicator && this._audioPesData.length) {\n            this._parseAudioData()\n          }\n          this._audioPesData.push(data.subarray(offset, start + 188))\n          break\n        case 17:\n        case 0x1fff:\n          break\n        default:\n          logger.warn(`Unknown pid: ${pid}`)\n      }\n    }\n\n    this._parseVideoData()\n    this._parseAudioData()\n\n    audioTrack.formatTimescale = videoTrack.formatTimescale = videoTrack.timescale = metadataTrack.timescale = 90000\n\n    audioTrack.timescale = audioTrack.sampleRate || 0\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack\n    }\n  }\n\n  /**\n   * @param {number} [startTime=0]\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   */\n  fix (startTime, discontinuity, contiguous) {\n    this._fixer.fix(startTime, discontinuity, contiguous)\n    return {\n      videoTrack: this.videoTrack,\n      audioTrack: this.audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  /**\n   * @param {Uint8Array} data\n   * @param {boolean} [discontinuity=false]\n   * @param {boolean} [contiguous=true]\n   * @param {number} [startTime=0]\n   */\n  demuxAndFix (data, discontinuity, contiguous, startTime) {\n    this.demux(data, discontinuity, contiguous)\n    return this.fix(startTime, discontinuity, contiguous)\n  }\n\n  /**\n   * @param { Uint8Array } data\n   * @returns {boolean}\n   */\n  static probe (data) {\n    if (!data.length) return false\n    return data[0] === 0x47 && data[188] === 0x47 && data[376] === 0x47\n  }\n\n  _parseVideoData () {\n    if (!this._videoPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._videoPesData))\n    if (!pes) {\n      logger.warn('Cannot parse video pes', this._videoPesData)\n      return\n    }\n\n    const units = NALu.parseAnnexB(pes.data)\n    if (units) {\n      this._createVideoSample(units, pes.pts, pes.dts)\n    } else {\n      logger.warn('Cannot parse avc units', pes)\n    }\n\n    this._videoPesData = []\n  }\n\n  _createVideoSample (units, pts, dts) {\n    if (!units.length) return\n    const track = this.videoTrack\n    const isHevc = track.codecType === VideoCodecType.HEVC\n\n    const sample = new VideoSample(pts, dts)\n    units.forEach((unit) => {\n      const type = isHevc ? (unit[0] >>> 1) & 0x3f : unit[0] & 0x1f\n      switch (type) {\n        case 5: // IDR\n        case 16: // HEVC BLA_W_LP\n        case 17: // HEVC BLA_W_RADL\n        case 18: // HEVC BLA_N_LP\n        case 19: // HEVC IDR_W_RADL\n        case 20: // HEVC IDR_N_LP\n        case 21: // HEVC CRA_NUT\n        case 22: // HEVC RSV_IRAP_VCL22\n        case 23: // HEVC RSV_IRAP_VCL23\n          if ((!isHevc && type !== 5) || (isHevc && type === 5)) break\n          sample.setToKeyframe()\n          this._gopId++\n          break\n        case 6: // SEI\n        case 39: // HEVC PREFIX_SEI\n        case 40: // HEVC SUFFIX_SEI\n          if ((!isHevc && type !== 6) || (isHevc && type === 6)) break\n          this.metadataTrack.seiSamples.push(new SeiSample(\n            NALu.parseSEI(NALu.removeEPB(unit), isHevc),\n            pts\n          ))\n          // fix 分割nal之前只要sei信息被当做单独一个sample\n          return\n        case 32: // HEVC VPS\n          if (!isHevc) break\n          if (!track.vps.length) {\n            const hvcC = HEVC.parseVPS(NALu.removeEPB(unit), track.hvcC)\n            track.hvcC = track.hvcC || hvcC\n            track.vps = [unit]\n          }\n          break\n        case 7: // SPS\n        case 33: // HEVC SPS\n          if ((!isHevc && type !== 7) || (isHevc && type === 7)) break\n          if (!track.sps.length) {\n            const data = NALu.removeEPB(unit)\n            const spsInfo = isHevc ? HEVC.parseSPS(data, track.hvcC) : AVC.parseSPS(data)\n            track.sps = [unit]\n            track.hvcC = track.hvcC || spsInfo.hvcC\n            track.codec = spsInfo.codec\n            track.width = spsInfo.width\n            track.height = spsInfo.height\n            track.sarRatio = spsInfo.sarRatio\n            track.fpsNum = spsInfo.fpsNum\n            track.fpsDen = spsInfo.fpsDen\n          }\n          break\n        case 8: // PPS\n        case 34: // HEVC PPS\n          if ((!isHevc && type !== 8) || (isHevc && type === 8)) break\n          if (!track.pps.length) track.pps = [unit]\n          break\n        case 9: // AUD\n        case 35: // HEVC AUD\n          // if ((!isHevc && type !== 9) || (isHevc && type === 9)) break\n          // sample.gopId = this._gopId\n          // if (sample.units.length && !keyFrame) {\n          //   this._pushVideoSample(track, sample)\n          //   sample = this.prevAvcSample = new VideoSample(pts, dts)\n          // }\n          break\n        case 38: // HEVC FD_NUT\n          if (isHevc) {\n            let ffByteFound = false\n            for (let i = 2; i < unit.byteLength; i++) {\n              if (unit[i] === 0xff) {\n                ffByteFound = true\n                break\n              }\n            }\n            if (!ffByteFound) {\n              return\n            }\n          }\n          break\n        default:\n      }\n      sample.units.push(unit)\n    })\n    sample.gopId = this._gopId\n    this._pushVideoSample(track, sample)\n  }\n\n  _pushVideoSample (track, sample) {\n    if (sample.units.length) {\n      if (sample.pts === null || sample.pts === undefined) {\n        logger.warn('Video sample no pts', sample)\n        const lastSample = track.samples[track.samples.length - 1]\n        if (lastSample) {\n          sample.pts = lastSample.pts\n          sample.dts = lastSample.dts\n        } else {\n          logger.warn('Drop video sample', sample)\n        }\n      } else {\n        track.samples.push(sample)\n      }\n    }\n  }\n\n  _parseAudioData () {\n    if (!this._audioPesData.length) return\n    const pes = TsDemuxer._parsePES(concatUint8Array(...this._audioPesData))\n    if (!pes) {\n      logger.warn('Cannot parse audio pes', this._audioPesData)\n      return\n    }\n\n    switch (this.audioTrack.codecType) {\n      case AudioCodecType.AAC:\n        this._parseAacData(pes)\n        break\n      case AudioCodecType.MP3:\n        this._parseMPEG(pes)\n        break\n      default:\n    }\n\n    this._audioPesData = []\n  }\n\n  _parseAacData (pes) {\n    const track = this.audioTrack\n    let pts = pes.pts\n    if (pts === null || pts === undefined) {\n      logger.warn('AAC pes not pts', track)\n      if (!track.samples.length || !track.sampleRate) {\n        return\n      }\n      pts = track.samples[track.samples.length - 1].pts + AAC.getFrameDuration(track.sampleRate)\n    }\n\n    const ret = AAC.parseADTS(pes.data, pts)\n    if (ret) {\n      track.codec = ret.codec\n      track.channelCount = ret.channelCount\n      track.sampleRate = ret.sampleRate\n      track.objectType = ret.objectType\n      track.sampleRateIndex = ret.samplingFrequencyIndex\n      track.config = ret.config\n      track.samples.push(...ret.frames.map((s) => new AudioSample(s.pts, s.data)))\n\n      if (ret.skip) {\n        logger.warn(`Skip aac adts ${ret.skip} bits`)\n      }\n      if (ret.remaining) {\n        logger.warn(`Remaining aac adts ${ret.remaining} bits`)\n      }\n    } else {\n      logger.warn('Cannot parse aac adts', pes)\n    }\n  }\n\n  _parseMPEG (pes) {\n    const data = pes.data\n    const length = data.length\n    let frameIndex = 0\n    let offset = 0\n    const pts = pes.pts\n    if (pts === undefined) {\n      logger.warn('[tsdemuxer]: MPEG PES unknown PTS')\n      return\n    }\n\n    while (offset < length) {\n      if (MPEG.isHeader(data, offset)) {\n        const frame = MPEG.appendFrame(\n          this.audioTrack,\n          data,\n          offset,\n          pts,\n          frameIndex\n        )\n        if (frame) {\n          offset += frame.length\n          frameIndex++\n        } else {\n          break\n        }\n      } else {\n        offset++\n      }\n    }\n  }\n\n  static _parsePES (data) {\n    const headerDataLen = data[8]\n    if (headerDataLen === null || headerDataLen === undefined || data.length < (headerDataLen + 9)) return\n    const startPrefix = data[0] << 16 | data[1] << 8 | data[2]\n    if (startPrefix !== 1) return\n    const pesLen = (data[4] << 8) + data[5]\n    if (pesLen && pesLen > data.length - 6) return\n\n    let pts\n    let dts\n    const ptsDtsFlags = data[7]\n    if (ptsDtsFlags & 0xc0) {\n      pts = (data[9] & 0x0e) * 536870912 +\n        (data[10] & 0xff) * 4194304 +\n        (data[11] & 0xfe) * 16384 +\n        (data[12] & 0xff) * 128 +\n        (data[13] & 0xfe) / 2\n\n      if (ptsDtsFlags & 0x40) {\n        dts = (data[14] & 0x0e) * 536870912 +\n          (data[15] & 0xff) * 4194304 +\n          (data[16] & 0xfe) * 16384 +\n          (data[17] & 0xff) * 128 +\n          (data[18] & 0xfe) / 2\n        if (pts - dts > 60 * 90000) pts = dts\n      } else {\n        dts = pts\n      }\n    }\n\n    return { data: data.subarray(9 + headerDataLen), pts, dts }\n  }\n}\n","export class ByteReader {\n  private dv: DataView\n  start: number\n  offset: number\n  end: number\n  constructor(buf: ArrayBuffer, offset: number, len: number) {\n    this.dv = new DataView(buf)\n    this.start = this.offset = offset || this.dv.byteOffset\n    this.end = len ? this.start + len : this.start + this.dv.byteLength\n  }\n  static fromUint8(uint8: Uint8Array) {\n    return new ByteReader(uint8.buffer, uint8.byteOffset, uint8.byteLength)\n  }\n  static concatUint8s(args: Uint8Array[]) {\n    const uint8 = new Uint8Array(args.reduce((ret, v) => ret + v.byteLength, 0))\n    let offset = 0\n    args.forEach((v) => {\n      uint8.set(v, offset)\n      offset += v.byteLength\n    })\n    return uint8\n  }\n  static concatUint8(...args: Uint8Array[]) {\n    return this.concatUint8s(args)\n  }\n  get buffer() {\n    return this.dv.buffer\n  }\n  get unreadLength() {\n    return Math.max(this.end - this.offset, 0)\n  }\n  get size() {\n    return this.end - this.start\n  }\n  readFloat(byteNum: number) {\n    let val = 0\n    switch (byteNum) {\n      case 4:\n        val = this.dv.getFloat32(this.offset)\n        break\n      case 8:\n        val = this.dv.getFloat64(this.offset)\n        break\n      default:\n        throw new Error(`read ${byteNum}-byte float is not supported`)\n    }\n    this.offset += byteNum\n    return val\n  }\n  back(byteNum: number) {\n    this.offset -= byteNum\n  }\n  skip(byteNum: number) {\n    this.offset += byteNum\n  }\n  readInt(byteNum: number) {\n    const offset = this.offset\n    this.offset += byteNum\n    switch (byteNum) {\n      case 1:\n        return this.dv.getInt8(offset)\n      case 2:\n        return this.dv.getInt16(offset)\n      case 4:\n        return this.dv.getInt32(offset)\n      default:\n        throw new Error(`read ${byteNum}-byte integers is not supported`)\n    }\n  }\n  read(byteNum: number) {\n    const offset = this.offset\n    this.offset += byteNum\n    switch (byteNum) {\n      case 1:\n        return this.dv.getUint8(offset)\n      case 2:\n        return this.dv.getUint16(offset)\n      case 3:\n        return (this.dv.getUint16(offset) << 8) + this.dv.getUint8(offset + 2)\n      case 4:\n        return this.dv.getUint32(offset)\n      default:\n        this.back(byteNum - 4)\n        // js不支持32位左移，可通过+、Math.pow运算达到64位以内运算的目的\n        return this.read(byteNum - 4) + this.dv.getUint32(offset) * Math.pow(256, byteNum - 4)\n    }\n  }\n  write(byteNum: number, val: number) {\n    const offset = this.offset\n    this.offset += byteNum\n    switch (byteNum) {\n      case 1:\n        return this.dv.setUint8(offset, val)\n      case 2:\n        return this.dv.setUint16(offset, val)\n      case 3:\n        return this.dv.setUint8(offset, val >>> 16),\n          this.dv.setUint16(offset + 1, 0xffff & val)\n      case 4:\n        return this.dv.setUint32(offset, val)\n      default:\n        throw new Error(`write ${byteNum}-byte integers is not supported`)\n    }\n  }\n  readToBuffer(len?: number) {\n    let buffer: ArrayBuffer\n    if (this.offset || len) {\n      buffer = this.dv.buffer.slice(this.offset, len ? this.offset + len : this.end)\n    } else {\n      buffer = this.dv.buffer\n    }\n    this.offset += buffer.byteLength\n    return buffer\n  }\n  readToUint8(len?: number) {\n    const uint8 = new Uint8Array(this.dv.buffer, this.offset, len || this.unreadLength)\n    this.offset += uint8.byteLength\n    return uint8\n  }\n  readString(len: number) {\n    let i = 0, str = ''\n    for (; i < len; i++) {\n      str += String.fromCharCode(this.dv.getUint8(this.offset))\n      this.offset++\n    }\n    return str\n  }\n}","import { ByteReader } from './byte-reader'\n\nexport class BitReader {\n  private val: number\n  size: number\n  offset = 0\n  constructor(val: number, size: number) {\n    this.val = val\n    this.size = size\n  }\n  static fromByte(byte: ByteReader, len: number) {\n    return new BitReader(byte.read(len), len << 3)\n  }\n  skip(len: number) {\n    this.offset += len\n  }\n  read(len: number) {\n    const unreadLength = this.size - this.offset - len\n\n    if (unreadLength >= 0) {\n      let bits = 0, i = 0\n      this.offset += len\n      // 32位及以上的整数不支持位移运算，使用 / + Math.pow 规避\n      if (this.size > 31) {\n        for (; i < len; i++) {\n          bits += Math.pow(2, i)\n        }\n        return this.val / Math.pow(2, unreadLength) & bits\n      } else {\n        for (; i < len; i++) {\n          bits += 1 << i\n        }\n        return this.val >>> unreadLength & bits\n      }\n    }\n    throw new Error(`the number of the read operation exceeds the total length limit of bits`)\n  }\n}","import { AudioCodecType, VideoCodecType } from '../model'\nimport { getAvcCodec, readBig16, readBig24, readBig32, readBig64, combineToFloat, toDegree } from '../utils'\nimport { AAC } from '../codec'\nimport { ByteReader } from '../utils/byte-reader'\nimport { BitReader } from '../utils/bit-reader'\nexport class MP4Parser {\n  static findBox (data, names, start = 0) {\n    const ret = []\n    if (!data) return ret\n\n    let size = 0\n    let type = ''\n    let headerSize = 0\n    while (data.length > 7) {\n      size = readBig32(data)\n      type = String.fromCharCode.apply(null, data.subarray(4, 8))\n      headerSize = 8\n      if (size === 1) {\n        size = readBig64(data, 8)\n        headerSize += 8\n      } else if (!size) {\n        size = data.length\n      }\n      if (!names[0] || type === names[0]) {\n        const subData = data.subarray(0, size)\n        if (names.length < 2) {\n          ret.push({\n            start,\n            size,\n            headerSize,\n            type,\n            data: subData\n          })\n        } else {\n          return MP4Parser.findBox(subData.subarray(headerSize), names.slice(1), start + headerSize)\n        }\n      }\n\n      start += size\n      data = data.subarray(size)\n    }\n\n    return ret\n  }\n\n  static tfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.trackId = readBig32(data)\n      let start = 4\n      const baseDataOffsetPresent = (ret.flags & 0xff) & 0x01\n      const sampleDescriptionIndexPresent = (ret.flags & 0xff) & 0x02\n      const defaultSampleDurationPresent = (ret.flags & 0xff) & 0x08\n      const defaultSampleSizePresent = (ret.flags & 0xff) & 0x10\n      const defaultSampleFlagsPresent = (ret.flags & 0xff) & 0x20\n\n      if (baseDataOffsetPresent) {\n        start += 4 // truncate top 4 bytes\n        ret.baseDataOffset = readBig32(data, start)\n        start += 4\n      }\n      if (sampleDescriptionIndexPresent) {\n        ret.sampleDescriptionIndex = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleDurationPresent) {\n        ret.defaultSampleDuration = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleSizePresent) {\n        ret.defaultSampleSize = readBig32(data, start)\n        start += 4\n      }\n      if (defaultSampleFlagsPresent) {\n        ret.defaultSampleFlags = readBig32(data, start)\n      }\n    })\n  }\n\n  static sidx (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      ret.reference_ID = readBig32(data, start)// stream.readUint32();\n      start += 4\n      ret.timescale = readBig32(data, start)\n      start += 4\n      if (ret.version === 0) {\n        ret.earliest_presentation_time = readBig32(data, start)\n        start += 4\n        ret.first_offset = readBig32(data, start)\n        start += 4\n      } else {\n        ret.earliest_presentation_time = readBig64(data, start)\n        start += 8\n        ret.first_offset = readBig64(data, start)\n        start += 8\n      }\n      start += 2\n      ret.references = []\n      const count = readBig16(data, start)\n      start += 2\n      for (let i = 0; i < count; i++) {\n        const ref = {}\n        ret.references.push(ref)\n        let tmp32 = readBig32(data, start)\n        start += 4\n        ref.reference_type = (tmp32 >> 31) & 0x1\n        ref.referenced_size = tmp32 & 0x7FFFFFFF\n        ref.subsegment_duration = readBig32(data, start)\n        start += 4\n        tmp32 = readBig32(data, start)\n        start += 4\n        ref.starts_with_SAP = (tmp32 >> 31) & 0x1\n        ref.SAP_type = (tmp32 >> 28) & 0x7\n        ref.SAP_delta_time = tmp32 & 0xFFFFFFF\n      }\n    })\n  }\n\n  static moov (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mvhd = MP4Parser.mvhd(MP4Parser.findBox(data, ['mvhd'], start)[0])\n      ret.trak = MP4Parser.findBox(data, ['trak'], start).map(trak => MP4Parser.trak(trak))\n      ret.pssh = MP4Parser.pssh(MP4Parser.findBox(data, ['pssh'], start)[0])\n    })\n  }\n\n  static mvhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      ret.nextTrackId = readBig32(data, start + 76)\n    })\n  }\n\n  static trak (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tkhd = MP4Parser.tkhd(MP4Parser.findBox(data, ['tkhd'], start)[0])\n      ret.mdia = MP4Parser.mdia(MP4Parser.findBox(data, ['mdia'], start)[0])\n    })\n  }\n\n  static tkhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      const byte = ByteReader.fromUint8(data)\n      if (ret.version === 1) {\n        byte.read(8) // createTime\n        byte.read(8) // modifyTime\n        ret.trackId = byte.read(4)\n        byte.read(4)\n        ret.duration = byte.read(8)\n      } else {\n        byte.read(4) // createTime\n        byte.read(4) // modifyTime\n        ret.trackId = byte.read(4)\n        byte.read(4)\n        ret.duration = byte.read(4)\n      }\n      byte.skip(16) // reserved(8) + layer(2) + alternateGroup(2) + volume(2) + reserved(2)\n      ret.matrix = [] // for remux\n      for (let i = 0; i < 36; i++) {\n        ret.matrix.push(byte.read(1))\n      }\n      byte.back(36)\n      const caculatedMatrix = [] // for caculation of rotation\n      for (let i = 0, int32; i < 3; i++) {\n        caculatedMatrix.push(combineToFloat(byte.readInt(2), byte.readInt(2))) // 16.16 fixed point\n        caculatedMatrix.push(combineToFloat(byte.readInt(2), byte.readInt(2))) // 16.16 fixed point\n        int32 = byte.readInt(4)\n        caculatedMatrix.push(combineToFloat(int32 >> 30, int32 & 0x3fffffff)) //  2.30 fixed point\n      }\n      ret.rotation = toDegree(caculatedMatrix)\n      ret.width = byte.read(4) // 16.16 fixed point, no parsed\n      ret.height = byte.read(4) // 16.16 fixed point, no parsed\n    })\n  }\n\n  static mdia (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mdhd = MP4Parser.mdhd(MP4Parser.findBox(data, ['mdhd'], start)[0])\n      ret.hdlr = MP4Parser.hdlr(MP4Parser.findBox(data, ['hdlr'], start)[0])\n      ret.minf = MP4Parser.minf(MP4Parser.findBox(data, ['minf'], start)[0])\n    })\n  }\n\n  static mdhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      if (ret.version === 1) {\n        ret.timescale = readBig32(data, 16)\n        ret.duration = readBig64(data, 20)\n        start += 28\n      } else {\n        ret.timescale = readBig32(data, 8)\n        ret.duration = readBig32(data, 12)\n        start += 16\n      }\n      const lang = readBig16(data, start)\n      ret.language = String.fromCharCode(((lang >> 10) & 0x1F) + 0x60, ((lang >> 5) & 0x1F) + 0x60, (lang & 0x1F) + 0x60)\n    })\n  }\n\n  static hdlr (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 0) {\n        ret.handlerType = String.fromCharCode.apply(null, data.subarray(4, 8))\n      }\n    })\n  }\n\n  static minf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.vmhd = MP4Parser.vmhd(MP4Parser.findBox(data, ['vmhd'], start)[0])\n      ret.smhd = MP4Parser.smhd(MP4Parser.findBox(data, ['smhd'], start)[0])\n      ret.stbl = MP4Parser.stbl(MP4Parser.findBox(data, ['stbl'], start)[0])\n    })\n  }\n\n  static vmhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.graphicsmode = readBig16(data)\n      ret.opcolor = [readBig16(data, 2), readBig16(data, 4), readBig16(data, 6)]\n    })\n  }\n\n  static smhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.balance = readBig16(data)\n    })\n  }\n\n  static stbl (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.stsd = MP4Parser.stsd(MP4Parser.findBox(data, ['stsd'], start)[0])\n      ret.stts = MP4Parser.stts(MP4Parser.findBox(data, ['stts'], start)[0])\n      ret.ctts = MP4Parser.ctts(MP4Parser.findBox(data, ['ctts'], start)[0])\n      ret.stsc = MP4Parser.stsc(MP4Parser.findBox(data, ['stsc'], start)[0])\n      ret.stsz = MP4Parser.stsz(MP4Parser.findBox(data, ['stsz'], start)[0])\n      ret.stco = MP4Parser.stco(MP4Parser.findBox(data, ['stco'], start)[0])\n      if (!ret.stco) {\n        ret.co64 = MP4Parser.co64(MP4Parser.findBox(data, ['co64'], start)[0])\n        ret.stco = ret.co64\n      }\n      const default_IV_size = ret.stsd.entries[0]?.sinf?.schi?.tenc.default_IV_size\n      ret.stss = MP4Parser.stss(MP4Parser.findBox(data, ['stss'], start)[0])\n      ret.senc = MP4Parser.senc(MP4Parser.findBox(data, ['senc'], start)[0], default_IV_size)\n    })\n  }\n\n  static senc (box, iv = 8) {\n    return parseBox(box, true, (ret, data) => {\n      let start = 0\n      const sampleCount = readBig32(data, start)\n      start += 4\n      ret.samples = []\n      for (let i = 0; i < sampleCount; i++) {\n        const sample = {}\n        sample.InitializationVector = []\n        for (let j = 0; j < iv; j++){\n          sample.InitializationVector[j] = data[start + j]\n        }\n        start += iv\n        if (ret.flags & 0x2) {\n          sample.subsamples = []\n          const subsampleCount = readBig16(data, start)\n          start += 2\n          for (let j = 0; j < subsampleCount; j++) {\n            const subsample = {}\n            subsample.BytesOfClearData = readBig16(data, start)\n            start += 2\n            subsample.BytesOfProtectedData = readBig32(data, start)\n            start += 4\n            sample.subsamples.push(subsample)\n          }\n        }\n        ret.samples.push(sample)\n      }\n    })\n  }\n\n  static pssh (box) {\n    return parseBox(box, true, (ret, data) => {\n      const keyIds = []\n      const systemId = []\n      let start = 0\n      for (let i = 0; i < 16; i++) {\n        systemId.push(toHex(data[start + i]))\n      }\n      start += 16\n      if (ret.version > 0) {\n        const numKeyIds = readBig32(data, start)\n        start += 4\n        for (let i = 0; i < ('' + numKeyIds).length; i++) {\n          for (let j = 0; j < 16; j++) {\n            const keyId = data[start]\n            start += 1\n            keyIds.push(toHex(keyId))\n          }\n        }\n      }\n      const dataSize = readBig32(data, start)\n      ret.data_size = dataSize\n      start += 4\n      ret.kid = keyIds\n      ret.system_id = systemId\n      ret.buffer = data\n    })\n  }\n\n  static stsd (box) {\n    return parseBox(box, true, (ret, data, start) => {\n      ret.entryCount = readBig32(data)\n      ret.entries = MP4Parser.findBox(data.subarray(4), [], start + 4).map(b => {\n        switch (b.type) {\n          case 'av01':\n            return MP4Parser.av01(b)\n          case 'avc1':\n          case 'avc2':\n          case 'avc3':\n          case 'avc4':\n            return MP4Parser.avc1(b)\n          case 'hvc1':\n          case 'hev1':\n            return MP4Parser.hvc1(b)\n          case 'mp4a':\n            return MP4Parser.mp4a(b)\n          case 'alaw':\n          case 'ulaw':\n            return MP4Parser.alaw(b)\n          case 'enca':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.channelCount = readBig16(data, 16)\n              ret.samplesize = readBig16(data, 18)\n              ret.sampleRate = (readBig32(data, 24) / (1 << 16))\n              data = data.subarray(28)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.esds = MP4Parser.esds(MP4Parser.findBox(data, ['esds'], start)[0])\n            })\n          case 'encv':\n            // sinf->schi->tenc\n            return parseBox(b, false, (ret, data, start) => {\n              ret.width = readBig16(data, 24)\n              ret.height = readBig16(data, 26)\n              ret.horizresolution = readBig32(data, 28)\n              ret.vertresolution = readBig32(data, 32)\n              data = data.subarray(78)\n              ret.sinf = MP4Parser.sinf(MP4Parser.findBox(data, ['sinf'], start)[0])\n              ret.avcC = MP4Parser.avcC(MP4Parser.findBox(data, ['avcC'], start)[0])\n              ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(data, ['hvcC'], start)[0])\n              ret.pasp = MP4Parser.pasp(MP4Parser.findBox(data, ['pasp'], start)[0])\n            })\n          default:\n        }\n      }).filter(Boolean)\n    })\n  }\n\n  static tenc (box) {\n    return parseBox(box, false, (ret, data) => {\n      let start = 6\n      ret.default_IsEncrypted = data[start]\n      start += 1\n      ret.default_IV_size = data[start]\n      start += 1\n      ret.default_KID = []\n      for (let i = 0; i < 16; i++) {\n        ret.default_KID.push(toHex(data[start]))\n        start += 1\n      }\n    })\n  }\n\n  static schi (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tenc = MP4Parser.tenc(MP4Parser.findBox(data, ['tenc'], start)[0])\n    })\n  }\n\n  static sinf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.schi = MP4Parser.schi(MP4Parser.findBox(data, ['schi'], start)[0])\n      ret.frma = MP4Parser.frma(MP4Parser.findBox(data, ['frma'], start)[0])\n    })\n  }\n\n  static frma (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data_format = ''\n      for (let i = 0; i < 4; i++) {\n        ret.data_format += String.fromCharCode(data[i])\n      }\n    })\n  }\n\n  static colr (box) {\n    return parseBox(box, false, (ret, data) => {\n      const byte = ByteReader.fromUint8(data)\n      ret.data = box.data\n      ret.colorType = byte.readString(4)\n      // Array.from(data.subarray(0, 4)).map(v => String.fromCharCode(v)).join('')\n      if (ret.colorType === 'nclx') {\n        ret.colorPrimaries = byte.read(2)\n        ret.transferCharacteristics = byte.read(2)\n        ret.matrixCoefficients = byte.read(2)\n        ret.fullRangeFlag = byte.read(1) >> 7\n      } else if (ret.colorType === 'rICC' || ret.colorType === 'prof') {\n        ret.iccProfile = data.readToUint8()\n      }\n    })\n  }\n\n  static av01 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.av1C = MP4Parser.av1C(MP4Parser.findBox(bodyData, ['av1C'], start)[0])\n      ret.colr = MP4Parser.colr(MP4Parser.findBox(bodyData, ['colr'], start)[0])\n    })\n  }\n\n  static av1C (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data\n\n      const byte = ByteReader.fromUint8(data)\n      const bit = BitReader.fromByte(byte, 4)\n\n      ret.marker = bit.read(1)\n      ret.version = bit.read(7)\n\n      ret.seqProfile = bit.read(3)\n      ret.seqLevelIdx0 = bit.read(5)\n\n      ret.seqTier0 = bit.read(1)\n      ret.highBitdepth = bit.read(1)\n      ret.twelveBit = bit.read(1)\n      ret.monochrome = bit.read(1)\n      ret.chromaSubsamplingX = bit.read(1)\n      ret.chromaSubsamplingY = bit.read(1)\n      ret.chromaSamplePosition = bit.read(2)\n      ret.reserved = bit.read(3)\n      ret.initialPresentationDelayPresent = bit.read(1)\n\n      if (ret.initialPresentationDelayPresent) {\n        ret.initialPresentationDelayMinusOne = bit.read(4)\n      } else {\n        ret.initialPresentationDelayMinusOne = 0\n      }\n      ret.configOBUs = byte.readToUint8()\n\n      let bitdepth\n      if (ret.seqLevelIdx0 === 2 && ret.highBitdepth === 1) {\n        bitdepth = ret.twelveBit === 1 ? '12' : '10'\n      } else if (ret.seqProfile <= 2) {\n        bitdepth = ret.highBitdepth === 1 ? '10' : '08'\n      }\n      ret.codec = [\n        'av01',\n        ret.seqProfile,\n        (ret.seqLevelIdx0 < 10 ? '0' + ret.seqLevelIdx0 : ret.seqLevelIdx0) + (ret.seqTier0 ? 'H' : 'M'),\n        bitdepth\n      ].join('.')\n    })\n  }\n\n  static avc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.avcC = MP4Parser.avcC(MP4Parser.findBox(bodyData, ['avcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static avcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data\n      ret.configurationVersion = data[0]\n      ret.AVCProfileIndication = data[1]\n      ret.profileCompatibility = data[2]\n      ret.AVCLevelIndication = data[3]\n      ret.codec = getAvcCodec([data[1], data[2], data[3]])\n      ret.lengthSizeMinusOne = data[4] & 0x3\n      ret.spsLength = data[5] & 0x1F\n      ret.sps = []\n      let start = 6\n      for (let i = 0; i < ret.spsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.sps.push(data.subarray(start, start + size))\n        // ret.spsInfo = SpsParser.parseSPS(ret.sps[i])\n        // ret.pixelRatio = ret.spsInfo.par_ratio\n        start += size\n      }\n      ret.ppsLength = data[start]\n      start += 1\n      ret.pps = []\n      for (let i = 0; i < ret.ppsLength; i++) {\n        const size = readBig16(data, start)\n        start += 2\n        ret.pps.push(data.subarray(start, start += size))\n        start += size\n      }\n    })\n  }\n\n  static hvc1 (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseVisualSampleEntry(ret, data)\n      const bodyData = data.subarray(bodyStart)\n      start += bodyStart\n      ret.hvcC = MP4Parser.hvcC(MP4Parser.findBox(bodyData, ['hvcC'], start)[0])\n      ret.pasp = MP4Parser.pasp(MP4Parser.findBox(bodyData, ['pasp'], start)[0])\n    })\n  }\n\n  static hvcC (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.data = box.data\n      ret.codec = 'hev1.1.6.L93.B0'\n      ret.configurationVersion = data[0]\n      const tmp = data[1]\n      ret.generalProfileSpace = tmp >> 6\n      ret.generalTierFlag = (tmp & 0x20) >> 5\n      ret.generalProfileIdc = tmp & 0x1F\n      ret.generalProfileCompatibility = readBig32(data, 2)\n      ret.generalConstraintIndicatorFlags = data.subarray(6, 12)\n      ret.generalLevelIdc = data[12]\n      ret.avgFrameRate = readBig16(data, 19)\n      ret.numOfArrays = data[22]\n      ret.vps = []\n      ret.sps = []\n      ret.pps = []\n      let start = 23\n      let type = 0\n      let numNalus = 0\n      let size = 0\n      for (let i = 0; i < ret.numOfArrays; i++) {\n        type = data[start] & 0x3F\n        numNalus = readBig16(data, start + 1)\n        start += 3\n        const nalus = []\n        for (let j = 0; j < numNalus; j++) {\n          size = readBig16(data, start)\n          start += 2\n          nalus.push(data.subarray(start, start + size))\n          start += size\n        }\n\n        if (type === 32) {\n          ret.vps.push(...nalus)\n        } else if (type === 33) {\n          ret.sps.push(...nalus)\n        } else if (type === 34) {\n          ret.pps.push(...nalus)\n        }\n      }\n    })\n  }\n\n  static pasp (box) {\n    return parseBox(box, false, (ret, data) => {\n      ret.hSpacing = readBig32(data)\n      ret.vSpacing = readBig32(data, 4)\n    })\n  }\n\n  static mp4a (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      const bodyStart = parseAudioSampleEntry(ret, data)\n      ret.esds = MP4Parser.esds(MP4Parser.findBox(data.subarray(bodyStart), ['esds'], start + bodyStart)[0])\n    })\n  }\n\n  static esds (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.codec = 'mp4a.'\n      let start = 0\n      let byteRead = 0\n      let size = 0\n      let tag = 0\n      while (data.length) {\n        start = 0\n        tag = data[start]\n        byteRead = data[start + 1]\n        start += 2\n        while (byteRead & 0x80) {\n          size = (byteRead & 0x7F) << 7\n          byteRead = data[start]\n          start += 1\n        }\n        size += byteRead & 0x7F\n        if (tag === 3) {\n          data = data.subarray(start + 3)\n        } else if (tag === 4) {\n          ret.codec += (data[start].toString(16) + '.').padStart(3, '0')\n          data = data.subarray(start + 13)\n        } else if (tag === 5) {\n          const config = ret.config = data.subarray(start, start + size)\n          let objectType = (config[0] & 0xF8) >> 3\n          if (objectType === 31 && config.length >= 2) {\n            objectType = 32 + ((config[0] & 0x7) << 3) + ((config[1] & 0xE0) >> 5)\n          }\n          ret.objectType = objectType\n          ret.codec += objectType.toString(16)\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        } else {\n          if (ret.codec[ret.codec.length - 1] === '.') {\n            ret.codec = ret.codec.substring(0, ret.codec.length - 1)\n          }\n          return\n        }\n      }\n    })\n  }\n\n  static alaw (box) {\n    return parseBox(box, false, (ret, data) => {\n      parseAudioSampleEntry(ret, data)\n    })\n  }\n\n  static stts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          count: readBig32(data, start),\n          delta: readBig32(data, start + 4)\n        })\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static ctts (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      if (ret.version === 1) {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: readBig32(data, start + 4)\n          })\n          start += 8\n        }\n      } else {\n        for (let i = 0; i < entryCount; i++) {\n          entries.push({\n            count: readBig32(data, start),\n            offset: -(~readBig32(data, start + 4) + 1)\n          })\n          start += 8\n        }\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsc (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push({\n          firstChunk: readBig32(data, start),\n          samplesPerChunk: readBig32(data, start + 4),\n          sampleDescriptionIndex: readBig32(data, start + 8)\n        })\n        start += 12\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stsz (box) {\n    return parseBox(box, true, (ret, data) => {\n      const sampleSize = readBig32(data)\n      const sampleCount = readBig32(data, 4)\n      const entrySizes = []\n      if (!sampleSize) {\n        let start = 8\n        for (let i = 0; i < sampleCount; i++) {\n          entrySizes.push(readBig32(data, start))\n          start += 4\n        }\n      }\n      ret.sampleSize = sampleSize\n      ret.sampleCount = sampleCount\n      ret.entrySizes = entrySizes\n    })\n  }\n\n  static stco (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static co64 (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig64(data, start))\n        start += 8\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static stss (box) {\n    return parseBox(box, true, (ret, data) => {\n      const entryCount = readBig32(data)\n      const entries = []\n      let start = 4\n      for (let i = 0; i < entryCount; i++) {\n        entries.push(readBig32(data, start))\n        start += 4\n      }\n      ret.entryCount = entryCount\n      ret.entries = entries\n    })\n  }\n\n  static moof (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.mfhd = MP4Parser.mfhd(MP4Parser.findBox(data, ['mfhd'], start)[0])\n      ret.traf = MP4Parser.findBox(data, ['traf'], start).map(t => MP4Parser.traf(t))\n    })\n  }\n\n  static mfhd (box) {\n    return parseBox(box, true, (ret, data) => {\n      ret.sequenceNumber = readBig32(data)\n    })\n  }\n\n  static traf (box) {\n    return parseBox(box, false, (ret, data, start) => {\n      ret.tfhd = MP4Parser.tfhd(MP4Parser.findBox(data, ['tfhd'], start)[0])\n      ret.tfdt = MP4Parser.tfdt(MP4Parser.findBox(data, ['tfdt'], start)[0])\n      ret.trun = MP4Parser.trun(MP4Parser.findBox(data, ['trun'], start)[0])\n    })\n  }\n\n  static trun (box) {\n    return parseBox(box, true, (ret, data) => {\n      const { version, flags } = ret\n      const dataLen = data.length\n      const sampleCount = ret.sampleCount = readBig32(data)\n      let offset = 4\n      if (dataLen > offset && flags & 1) {\n        ret.dataOffset = -(~readBig32(data, offset) + 1)\n        offset += 4\n      }\n      if (dataLen > offset && flags & 4) {\n        ret.firstSampleFlags = readBig32(data, offset)\n        offset += 4\n      }\n      ret.samples = []\n      if (dataLen > offset) {\n        let sample\n        for (let i = 0; i < sampleCount; i++) {\n          sample = {}\n          if (flags & 0x100) {\n            sample.duration = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x200) {\n            sample.size = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x400) {\n            sample.flags = readBig32(data, offset)\n            offset += 4\n          }\n          if (flags & 0x800) {\n            if (version) {\n              sample.cts = -(~readBig32(data, offset + 4) + 1)\n            } else {\n              sample.cts = readBig32(data, offset)\n            }\n            offset += 4\n          }\n          ret.samples.push(sample)\n        }\n      }\n    })\n  }\n\n  static tfdt (box) {\n    return parseBox(box, true, (ret, data) => {\n      if (ret.version === 1) {\n        ret.baseMediaDecodeTime = readBig64(data)\n      } else {\n        ret.baseMediaDecodeTime = readBig32(data)\n      }\n    })\n  }\n\n  static probe (data) {\n    return !!MP4Parser.findBox(data, ['ftyp'])\n  }\n\n  static parseSampleFlags (flags) {\n    return {\n      isLeading: (flags[0] & 0x0c) >>> 2,\n      dependsOn: flags[0] & 0x03,\n      isDependedOn: (flags[1] & 0xc0) >>> 6,\n      hasRedundancy: (flags[1] & 0x30) >>> 4,\n      paddingValue: (flags[1] & 0x0e) >>> 1,\n      isNonSyncSample: flags[1] & 0x01,\n      degradationPriority: (flags[2] << 8) | flags[3]\n    }\n  }\n\n  static moovToTrack (moov, videoTrack, audioTrack) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (vTrack && videoTrack) {\n      const v = videoTrack\n      const _vTrackId = vTrack.tkhd?.trackId\n      if (_vTrackId !== null && _vTrackId !== undefined) v.id = vTrack.tkhd.trackId\n      v.tkhdDuration = vTrack.tkhd.duration\n      v.mvhdDurtion = moov.mvhd.duration\n      v.mvhdTimecale = moov.mvhd.timescale\n      v.timescale = v.formatTimescale = vTrack.mdia.mdhd.timescale\n      v.duration = vTrack.mdia.mdhd.duration || (v.mvhdDurtion / v.mvhdTimecale * v.timescale)\n      v.rotation = vTrack.tkhd.rotation\n      v.matrix = vTrack.tkhd.matrix\n      const e1 = vTrack.mdia.minf.stbl.stsd.entries[0]\n      v.width = e1.width\n      v.height = e1.height\n      if (e1.pasp) {\n        v.sarRatio = [e1.pasp.hSpacing, e1.pasp.vSpacing]\n      }\n      if (e1.av1C) {\n        v.codecType = VideoCodecType.AV1\n        v.codec = e1.av1C.codec\n        v.av1C = e1.av1C.data\n        v.colr = e1.colr.data\n      } else if (e1.hvcC) {\n        v.codecType = VideoCodecType.HEVC\n        v.codec = e1.hvcC.codec\n        v.vps = e1.hvcC.vps\n        v.sps = e1.hvcC.sps\n        v.pps = e1.hvcC.pps\n        v.hvcC = e1.hvcC.data\n      } else if (e1.avcC) {\n        v.codec = e1.avcC.codec\n        v.sps = e1.avcC.sps\n        v.pps = e1.avcC.pps\n      } else {\n        throw new Error('unknown video stsd entry')\n      }\n      v.present = true\n      v.ext = {}\n      v.ext.stss = vTrack.mdia?.minf?.stbl?.stss\n      v.ext.ctts = vTrack.mdia?.minf?.stbl?.ctts\n\n      if (e1 && e1.type === 'encv') {\n        v.isVideoEncryption = true\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        v.videoSenc = vTrack.mdia.minf.stbl.senc && vTrack.mdia.minf.stbl.senc.samples\n        e1.data_format = e1.sinf?.frma?.data_format\n        v.useEME = moov.useEME\n        v.kidValue = moov.kidValue\n        v.pssh = moov.pssh\n        v.encv = e1\n      }\n    }\n\n    if (aTrack && audioTrack) {\n      const a = audioTrack\n      const _aTrackId = aTrack.tkhd?.trackId\n      if (_aTrackId !== null && _aTrackId !== undefined) a.id = aTrack.tkhd.trackId\n      a.tkhdDuration = aTrack.tkhd.duration\n      a.mvhdDurtion = moov.mvhd.duration\n      a.mvhdTimecale = moov.mvhd.timescale\n      a.timescale = a.formatTimescale = aTrack.mdia.mdhd.timescale\n      a.duration = aTrack.mdia.mdhd.duration || (a.mvhdDurtion / a.mvhdTimecale * a.timescale)\n      const e1 = aTrack.mdia.minf.stbl.stsd.entries[0]\n      a.sampleSize = e1.sampleSize\n      a.sampleRate = e1.sampleRate\n      a.channelCount = e1.channelCount\n      a.present = true\n\n      switch (e1.type) {\n        case 'alaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMA\n          a.sampleRate = 8000\n          break\n        case 'ulaw':\n          a.codecType = a.codec = AudioCodecType.G711PCMU\n          a.sampleRate = 8000\n          break\n        default:\n          a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n          a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n          a.objectType = e1.esds?.objectType || 2\n          if (e1.esds) a.config = Array.from(e1.esds.config)\n          a.codec = e1.esds?.codec || 'mp4a.40.2'\n          break\n      }\n      a.sampleDuration = AAC.getFrameDuration(a.sampleRate, a.timescale)\n      a.objectType = e1.esds?.objectType || 2\n      if (e1.esds) {\n        if (e1.esds.config) {\n          a.config = Array.from(e1.esds.config)\n        } else {\n          console.warn('esds config is null')\n        }\n      }\n      a.codec = e1.esds?.codec || 'mp4a.40.2'\n      a.sampleRateIndex = AAC.getRateIndexByRate(a.sampleRate)\n      a.ext = {}\n      a.ext.stss = aTrack.mdia?.minf?.stbl?.stss\n      a.ext.ctts = aTrack.mdia?.minf?.stbl?.ctts\n      a.present = true\n      if (e1 && e1.type === 'enca') {\n        a.isAudioEncryption = true\n        e1.data_format = e1.sinf?.frma?.data_format\n        e1.default_KID = e1.sinf?.schi?.tenc.default_KID\n        e1.default_IsEncrypted = e1.sinf?.schi?.tenc.default_IsEncrypted\n        e1.default_IV_size = e1.sinf?.schi?.tenc.default_IV_size\n        a.audioSenc = aTrack.mdia.minf.stbl.senc && aTrack.mdia.minf.stbl.senc.samples\n        a.useEME = moov.useEME\n        a.kidValue = moov.kidValue\n        a.enca = e1\n      }\n    }\n\n    audioTrack && (audioTrack.isVideoEncryption = videoTrack ? videoTrack.isVideoEncryption : false)\n    videoTrack && (videoTrack.isAudioEncryption = audioTrack ? audioTrack.isAudioEncryption : false)\n\n    if (videoTrack?.encv || audioTrack?.enca) {\n      const vkid = videoTrack?.encv?.default_KID\n      const akid = audioTrack?.enca?.default_KID\n      const kid = (vkid || akid) ? (vkid || akid).join('') : null\n      videoTrack && (videoTrack.kid = kid)\n      audioTrack && (audioTrack.kid = kid)\n    }\n\n    videoTrack && (videoTrack.flags = 0xf01)\n    audioTrack && (audioTrack.flags = 0x701)\n\n    return {\n      videoTrack,\n      audioTrack\n    }\n  }\n\n  static evaluateDefaultDuration (videoTrack, audioTrack, videoSampleCount) {\n    const audioSampleCount = audioTrack?.samples?.length\n\n    // audio\n    if (!audioSampleCount) return 1024\n\n    const segmentDuration = 1024 * audioSampleCount / audioTrack.timescale\n\n    return segmentDuration * videoTrack.timescale / videoSampleCount\n  }\n\n  static moofToSamples (moof, videoTrack, audioTrack) {\n    const ret = {}\n\n    if (moof.mfhd) {\n      if (videoTrack) videoTrack.sequenceNumber = moof.mfhd.sequenceNumber\n      if (audioTrack) audioTrack.sequenceNumber = moof.mfhd.sequenceNumber\n    }\n\n    moof.traf.forEach(({ tfhd, tfdt, trun }) => {\n      if (!tfhd || !trun) return\n      if (tfdt) {\n        if (videoTrack && videoTrack.id === tfhd.trackId) videoTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n        if (audioTrack && audioTrack.id === tfhd.trackId) audioTrack.baseMediaDecodeTime = tfdt.baseMediaDecodeTime\n      }\n      const defaultSize = tfhd.defaultSampleSize || 0\n      const defaultDuration = tfhd.defaultSampleDuration || MP4Parser.evaluateDefaultDuration(videoTrack, audioTrack, trun.samples.length || trun.sampleCount)\n      let offset = trun.dataOffset || 0\n      let dts = 0\n      let gopId = -1\n      if (!trun.samples.length && trun.sampleCount) {\n        ret[tfhd.trackId] = []\n        for (let i = 0; i < trun.sampleCount; i++) {\n          ret[tfhd.trackId].push({\n            offset,\n            dts,\n            duration: defaultDuration,\n            size: defaultSize\n          })\n          dts += defaultDuration\n          offset += defaultSize\n        }\n      } else {\n        ret[tfhd.trackId] = trun.samples.map((s, index) => {\n          s = {\n            offset,\n            dts,\n            pts: dts + (s.cts || 0),\n            duration: s.duration || defaultDuration,\n            size: s.size || defaultSize,\n            gopId,\n            keyframe: index === 0 || ((s.flags !== null && s.flags !== undefined) && ((s.flags & 65536) >>> 0) !== 65536)\n          }\n          if (s.keyframe) {\n            gopId++\n            s.gopId = gopId\n          }\n          dts += s.duration\n          offset += s.size\n          return s\n        })\n      }\n    })\n\n    return ret\n  }\n\n  static moovToSamples (moov) {\n    const tracks = moov.trak\n    if (!tracks || !tracks.length) return\n    const vTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'vide')\n    const aTrack = tracks.find(t => t.mdia?.hdlr?.handlerType === 'soun')\n    if (!vTrack && !aTrack) return\n    let videoSamples\n    let audioSamples\n    if (vTrack) {\n      const videoStbl = vTrack.mdia?.minf?.stbl\n      if (!videoStbl) return\n      const { stts, stsc, stsz, stco, stss, ctts } = videoStbl\n      if (!stts || !stsc || !stsz || !stco || !stss) return\n      videoSamples = getSamples(stts, stsc, stsz, stco, ctts, stss)\n    }\n    if (aTrack) {\n      const audioStbl = aTrack.mdia?.minf?.stbl\n      if (!audioStbl) return\n      const timescale = aTrack.mdia.mdhd?.timescale\n      const { stts, stsc, stsz, stco } = audioStbl\n      if (!timescale || !stts || !stsc || !stsz || !stco) return\n      audioSamples = getSamples(stts, stsc, stsz, stco)\n    }\n\n    return {\n      videoSamples,\n      audioSamples\n    }\n  }\n}\n\nfunction getSamples (stts, stsc, stsz, stco, ctts, stss) {\n  const samples = []\n  const cttsEntries = ctts?.entries\n  const stscEntries = stsc.entries\n  const stcoEntries = stco.entries\n  const stszEntrySizes = stsz.entrySizes\n  const stssEntries = stss?.entries\n  let keyframeMap\n  if (stssEntries) {\n    keyframeMap = {}\n    stssEntries.forEach(x => { keyframeMap[x - 1] = true })\n  }\n  let cttsArr\n  if (cttsEntries) {\n    cttsArr = []\n    cttsEntries.forEach(({ count, offset }) => {\n      for (let i = 0; i < count; i++) {\n        cttsArr.push(offset)\n      }\n    })\n  }\n\n  let sample\n  let gopId = -1\n  let dts = 0\n  let pos = 0\n  let chunkIndex = 0\n  let chunkRunIndex = 0\n  let offsetInChunk = 0\n  let lastSampleInChunk = stscEntries[0].samplesPerChunk\n  let lastChunkInRun = stscEntries[1] ? stscEntries[1].firstChunk - 1 : Infinity\n  stts.entries.forEach(({ count, delta }) => {\n    for (let i = 0; i < count; i++) {\n      sample = {\n        dts,\n        duration: delta,\n        size: stszEntrySizes[pos] || stsz.sampleSize,\n        offset: stcoEntries[chunkIndex] + offsetInChunk,\n        index: pos\n      }\n      if (stssEntries) {\n        sample.keyframe = keyframeMap[pos]\n        if (sample.keyframe) {\n          gopId++\n        }\n        sample.gopId = gopId\n      }\n      // sample.timeOffset = 0\n      if (cttsArr && pos < cttsArr.length) {\n        sample.pts = sample.dts + cttsArr[pos]\n        // sample.timeOffset = cttsArr[pos]\n        // if (pos === 0) {\n        //   sample.pts = sample.dts\n        //   sample.timeOffset = 0\n        // }\n      }\n      samples.push(sample)\n      dts += delta\n      pos++\n\n      if (pos < lastSampleInChunk) {\n        offsetInChunk += sample.size\n      } else {\n        chunkIndex++\n        offsetInChunk = 0\n        if (chunkIndex >= lastChunkInRun) {\n          chunkRunIndex++\n          lastChunkInRun = stscEntries[chunkRunIndex + 1] ? stscEntries[chunkRunIndex + 1].firstChunk - 1 : Infinity\n        }\n        lastSampleInChunk += stscEntries[chunkRunIndex].samplesPerChunk\n      }\n    }\n  })\n\n  return samples\n}\n\nfunction parseVisualSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.width = readBig16(data, 24)\n  ret.height = readBig16(data, 26)\n  ret.horizresolution = readBig32(data, 28)\n  ret.vertresolution = readBig32(data, 32)\n  ret.frameCount = readBig16(data, 40)\n  ret.depth = readBig16(data, 74)\n  return 78\n}\n\nfunction parseAudioSampleEntry (ret, data) {\n  ret.dataReferenceIndex = readBig16(data, 6)\n  ret.channelCount = readBig16(data, 16)\n  ret.sampleSize = readBig16(data, 18)\n  ret.sampleRate = readBig32(data, 24) / (1 << 16)\n  return 28\n}\n\nfunction parseBox (box, isFullBox, parse) {\n  if (!box) return\n  if (box.size !== box.data.length) {\n    throw new Error(`box ${box.type} size !== data.length`)\n  }\n  const ret = {\n    start: box.start,\n    size: box.size,\n    headerSize: box.headerSize,\n    type: box.type\n  }\n  if (isFullBox) {\n    ret.version = box.data[box.headerSize]\n    ret.flags = readBig24(box.data, box.headerSize + 1)\n    ret.headerSize += 4\n  }\n  parse(ret, box.data.subarray(ret.headerSize), ret.start + ret.headerSize)\n  return ret\n}\n\nconst padStart = function (str, length, pad) {\n  const charstr = String(pad)\n  const len = length >> 0\n  let maxlen = Math.ceil(len / charstr.length)\n  const chars = []\n  const r = String(str)\n  while (maxlen--) {\n    chars.push(charstr)\n  }\n  return chars.join('').substring(0, len - r.length) + r\n}\n\nconst toHex = function (...value) {\n  const hex = []\n  value.forEach(item => {\n    hex.push(padStart(Number(item).toString(16), 2, 0))\n  })\n  return hex[0]\n}\n","import { VideoTrack, AudioTrack, MetadataTrack, VideoSample, AudioSample } from '../model'\nimport { concatUint8Array, readBig32 } from '../utils'\nimport { MP4Parser } from './mp4-parser'\n\nexport class FMP4Demuxer {\n  __loadedMoofWraps = []\n  __lastRemainData = null\n  __lastRemainDataStart = 0\n  __nextMoofStart = -1\n\n\n  constructor (videoTrack, audioTrack, metadataTrack) {\n    this.videoTrack = videoTrack || new VideoTrack()\n    this.audioTrack = audioTrack || new AudioTrack()\n    this.metadataTrack = metadataTrack || new MetadataTrack()\n  }\n\n  demuxPart (partData, partDataStart, moov) {\n    const { videoTrack, audioTrack } = this\n    const videoExist = videoTrack.exist()\n    const audioExist = audioTrack.exist()\n\n    const isAV01 = /av01/.test(videoTrack.codec)\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    let data = partData\n    let dataStart = partDataStart\n    if (this.__lastRemainData) {\n      const lastRemainDataEnd = this.__lastRemainDataStart + this.__lastRemainData.byteLength\n      // 如果遗留数据和新数据之间存在非包含关系的重叠，则需要合并，否则丢弃遗留数据\n      // 如果遗留数据和新数据之间不存在重叠，需要丢弃遗留数据，保证后续的新数据可以连续的解析\n      const continuous = partDataStart <= lastRemainDataEnd && partDataStart > this.__lastRemainDataStart && partDataStart + partData.byteLength > lastRemainDataEnd\n      if (continuous) {\n        // data = 遗留数据 + 新数据，为了程序健壮性，即可能存在重复的range，需要subarray规避\n        const noDuplicateData = partData.subarray(this.__lastRemainData.byteLength + this.__lastRemainDataStart - partDataStart)\n        data = concatUint8Array(this.__lastRemainData, noDuplicateData)\n        dataStart = this.__lastRemainDataStart\n        this.__lastRemainData = null\n      } else {\n        this.__lastRemainData = null\n        this.__lastRemainDataStart = 0\n        this.__nextMoofStart = -1\n      }\n    }\n\n    if (!moov) {\n      const moovBox = MP4Parser.findBox(data, ['moov'])[0]\n      if (!moovBox) throw new Error('cannot found moov box')\n      moov = MP4Parser.moov(moovBox)\n    }\n\n    if (data) {\n      const dataEnd = dataStart + data.byteLength\n      if (!videoExist && !audioExist) {\n        MP4Parser.moovToTrack(moov, videoTrack, audioTrack)\n      }\n      // findBox要求参数由box header作为起始，故需要定位到moof的起始点，通过前一个moof计算出下一个moof的start位置，并保证解析的内容大于header的长度(8)\n      const moofBoxes = []\n      if (this.__nextMoofStart < 0) {\n        MP4Parser.findBox(data, ['moof'], dataStart).forEach(v => moofBoxes.push(v))\n      } else if (this.__nextMoofStart >= dataStart && this.__nextMoofStart <= dataEnd - 8) {\n        MP4Parser.findBox(data.subarray(this.__nextMoofStart - dataStart), ['moof'], this.__nextMoofStart).forEach(v => moofBoxes.push(v))\n      }\n      moofBoxes.filter(moofBox => moofBox.size <= moofBox.data.length).forEach(moofBox => {\n        const moof = MP4Parser.moof(moofBox)\n        // 通过（trun.dataOffset + all samples的合并值）最大值计算得到下一个moof.start，也可以通过mdat box获取，此处为前者逻辑\n        this.__nextMoofStart = moof.start + Math.max(...moof.traf.map(v => v.trun.samples.reduce((ret, w) => ret + w.size, v.trun.dataOffset || 0)))\n        this.__loadedMoofWraps.push({\n          start: moof.start,\n          nextMoofStart: this.__nextMoofStart,\n          moof\n        })\n        this.__loadedMoofWraps.sort((p, n) => p.start - n.start) // 排序，兼容seek\n      })\n\n      for (const moofWrap of this.__loadedMoofWraps) {\n        // 跳过不需要解析的moof，减少非必要的损耗\n        if (moofWrap.start > dataEnd || moofWrap.nextMoofStart < dataStart) {\n          continue\n        }\n        const moofStart = moofWrap.start\n        const tracks = MP4Parser.moofToSamples(moofWrap.moof, videoTrack, audioTrack)\n\n        const videoBaseMediaDecodeTime = videoTrack.baseMediaDecodeTime\n        const audioBaseMediaDecodeTime = audioTrack.baseMediaDecodeTime\n        let nalSize\n        Object.keys(tracks).forEach(k => {\n          // eslint-disable-next-line\n          if (videoTrack.id == k) {\n            tracks[k]\n              .some(x => {\n                const xStart = x.offset += moofStart\n                if (xStart < dataStart) {\n                  return\n                }\n                // 如果当前sample已经超过了数据范围，则中断遍历\n                if (xStart + x.size > dataEnd) {\n                  return true\n                }\n                const sample = new VideoSample((x.pts || x.dts) + videoBaseMediaDecodeTime, x.dts + videoBaseMediaDecodeTime)\n                sample.duration = x.duration\n                sample.gopId = x.gopId\n                if (x.keyframe) sample.setToKeyframe()\n                const sampleData = data.subarray(xStart - dataStart, xStart - dataStart + x.size)\n                sample.data = sampleData\n                if (!isAV01) { // av1编码的数据不需要解析nals\n                  let start = 0\n                  const len = sampleData.length - 1\n                  while (start < len) {\n                    nalSize = readBig32(sampleData, start)\n                    start += 4\n                    sample.units.push(sampleData.subarray(start, start + nalSize))\n                    start += nalSize\n                  }\n                }\n                this.__lastRemainDataStart = xStart + x.size\n                videoTrack.samples.push(sample)\n              })\n            // eslint-disable-next-line eqeqeq\n          } else if (audioTrack.id == k) {\n            tracks[k]\n              .some(x => {\n                const xStart = x.offset + moofStart\n                if (xStart < dataStart) {\n                  return\n                }\n                if (xStart + x.size > dataEnd) {\n                  return true\n                }\n                const sampleData = data.subarray(xStart - dataStart, xStart - dataStart + x.size)\n                audioTrack.samples.push(new AudioSample(x.dts + audioBaseMediaDecodeTime, sampleData, x.duration))\n                this.__lastRemainDataStart = xStart + x.size\n              })\n          }\n        })\n      }\n    }\n\n    // 保存未解析的数据，下次解析时合并使用\n    if (this.__lastRemainDataStart > dataStart && this.__lastRemainDataStart < data.byteLength + dataStart) {\n      this.__lastRemainData = data.subarray(this.__lastRemainDataStart - dataStart)\n    } else {\n      this.__lastRemainData = data\n      this.__lastRemainDataStart = dataStart\n    }\n\n    // fmp4中sample.pts是通过tfdt的baseMediaDecodeTime + sample.duration计算得出的\n    // 所以此处sample的pts是多少不重要，反而需要确保demuxPart中baseMediaDecodeTime的值为起始帧的pts，才能保证remux后解析的结果与原始数据一致\n    if (videoTrack.samples.length) {\n      videoTrack.baseMediaDecodeTime = videoTrack.samples[0].pts\n    }\n    if (audioTrack.samples.length) {\n      audioTrack.baseMediaDecodeTime = audioTrack.samples[0].pts\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  demux (videoData, audioData) {\n    const { videoTrack, audioTrack } = this\n    const videoExist = videoTrack.exist()\n    const audioExist = audioTrack.exist()\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    if (audioData) {\n      if (!audioExist) {\n        const moovBox = MP4Parser.findBox(audioData, ['moov'])[0]\n        if (!moovBox) throw new Error('cannot found moov box')\n        MP4Parser.moovToTrack(MP4Parser.moov(moovBox), null, audioTrack)\n      }\n      const moofBox = MP4Parser.findBox(audioData, ['moof'])[0]\n      if (moofBox) {\n        const samples = MP4Parser.moofToSamples(MP4Parser.moof(moofBox), null, audioTrack)[audioTrack.id]\n        const baseMediaDecodeTime = audioTrack.baseMediaDecodeTime\n        if (samples) {\n          const baseOffset = moofBox.start\n          samples.map(x => {\n            x.offset += baseOffset\n            const sampleData = audioData.subarray(x.offset, x.offset + x.size)\n            audioTrack.samples.push(new AudioSample(x.dts + baseMediaDecodeTime, sampleData, x.duration))\n          })\n        }\n      }\n    }\n\n    if (videoData) {\n      if (!videoExist && !audioExist) {\n        const moovBox = MP4Parser.findBox(videoData, ['moov'])[0]\n        if (!moovBox) throw new Error('cannot found moov box')\n        MP4Parser.moovToTrack(MP4Parser.moov(moovBox), videoTrack, audioTrack)\n      }\n      const moofBox = MP4Parser.findBox(videoData, ['moof'])[0]\n      if (moofBox) {\n        const tracks = MP4Parser.moofToSamples(MP4Parser.moof(moofBox), videoTrack, audioTrack)\n        const videoBaseMediaDecodeTime = videoTrack.baseMediaDecodeTime\n        const audioBaseMediaDecodeTime = audioTrack.baseMediaDecodeTime\n        const baseOffset = moofBox.start\n        let nalSize\n        Object.keys(tracks).forEach(k => {\n          // eslint-disable-next-line eqeqeq\n          if (videoTrack.id == k) {\n            tracks[k].map(x => {\n              x.offset += baseOffset\n              const sample = new VideoSample((x.pts || x.dts) + videoBaseMediaDecodeTime, x.dts + videoBaseMediaDecodeTime)\n              sample.duration = x.duration\n              sample.gopId = x.gopId\n              if (x.keyframe) sample.setToKeyframe()\n              const sampleData = videoData.subarray(x.offset, x.offset + x.size)\n              sample.data = sampleData\n              let start = 0\n              const len = sampleData.length - 1\n              while (start < len) {\n                nalSize = readBig32(sampleData, start)\n                start += 4\n                sample.units.push(sampleData.subarray(start, start + nalSize))\n                start += nalSize\n              }\n              videoTrack.samples.push(sample)\n            })\n            // eslint-disable-next-line eqeqeq\n          } else if (audioTrack.id == k) {\n            tracks[k].map(x => {\n              x.offset += baseOffset\n              const sampleData = videoData.subarray(x.offset, x.offset + x.size)\n              audioTrack.samples.push(new AudioSample(x.dts + audioBaseMediaDecodeTime, sampleData, x.duration))\n            })\n          }\n        })\n      }\n    }\n\n    return {\n      videoTrack,\n      audioTrack,\n      metadataTrack: this.metadataTrack\n    }\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n    this.metadataTrack.reset()\n  }\n\n  static probe (data) {\n    return MP4Parser.probe(data)\n  }\n}\n","\n// 改造为兼容IE11\nfunction Concat (ResultConstructor, ...arrays){\n  let totalLength = 0\n  arrays.forEach(function (arr){\n    totalLength += arr.length\n  })\n  const result = new ResultConstructor(totalLength)\n  let offset = 0\n  arrays.forEach(function (arr){\n    result.set(arr, offset)\n    offset += arr.length\n  })\n  return result\n}\n\nclass Buffer {\n  constructor () {\n    this.buffer = new Uint8Array(0)\n  }\n\n  write (...buffer) {\n    const self = this\n    buffer.forEach(item => {\n      if (item) {\n        self.buffer = Concat(Uint8Array, self.buffer, item)\n      } else {\n        window.console.warn(item)\n      }\n    })\n  }\n\n  static writeUint16 (value) {\n    return new Uint8Array([\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n\n  static writeUint32 (value) {\n    return new Uint8Array([\n      value >> 24,\n      (value >> 16) & 0xff,\n      (value >> 8) & 0xff,\n      value & 0xff\n    ])\n  }\n}\n\nexport default Buffer\n","import { AudioCodecType, TrackType, VideoCodecType } from '../model'\nimport { concatUint8Array, parse } from '../utils'\nimport Buffer from './buffer'\n\nconst UINT32_MAX = 2 ** 32 - 1\n\nexport class MP4 {\n  static types = [\n    'Opus',\n    'dOps',\n    'av01',\n    'av1C',\n    'avc1',\n    'avcC',\n    'hvc1',\n    'hvcC',\n    'dinf',\n    'dref',\n    'esds',\n    'ftyp',\n    'hdlr',\n    'mdat',\n    'mdhd',\n    'mdia',\n    'mfhd',\n    'minf',\n    'moof',\n    'moov',\n    'mp4a',\n    'mvex',\n    'mvhd',\n    'pasp',\n    'stbl',\n    'stco',\n    'stsc',\n    'stsd',\n    'stsz',\n    'stts',\n    'tfdt',\n    'tfhd',\n    'traf',\n    'trak',\n    'trex',\n    'tkhd',\n    'vmhd',\n    'smhd',\n    'ctts',\n    'stss',\n    'styp',\n    'pssh',\n    'sidx',\n    'sbgp',\n    'saiz',\n    'saio',\n    'senc',\n    'trun',\n    'encv',\n    'enca',\n    'sinf',\n    'btrt',\n    'frma',\n    'tenc',\n    'schm',\n    'schi',\n    'mehd',\n    'fiel',\n    'sdtp'\n  ].reduce((p, c) => {\n    p[c] = [c.charCodeAt(0), c.charCodeAt(1), c.charCodeAt(2), c.charCodeAt(3)]\n    return p\n  }, Object.create(null));\n\n  static HDLR_TYPES = {\n    video: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x76, 0x69, 0x64, 0x65, // handler_type: 'vide'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x56, 0x69, 0x64, 0x65, 0x6f, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'VideoHandler'\n    ]),\n    audio: new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0x73, 0x6f, 0x75, 0x6e, // handler_type: 'soun'\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x53, 0x6f, 0x75, 0x6e, 0x64, 0x48, 0x61,\n      0x6e, 0x64, 0x6c, 0x65, 0x72, 0x00 // name: 'SoundHandler'\n    ])\n  }\n\n  static FTYPAVC1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    97, 118, 99, 49 // avc1\n  ]))\n\n  static FTYPHEV1 = MP4.box(MP4.types.ftyp, new Uint8Array([\n    105, 115, 111, 109, // isom\n    0, 0, 0, 1,\n    105, 115, 111, 109,\n    104, 101, 118, 49 // hev1\n  ]))\n\n  static DINF = MP4.box(MP4.types.dinf, MP4.box(MP4.types.dref, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x01, // entry_count\n    0x00, 0x00, 0x00, 0x0c, // entry_size\n    0x75, 0x72, 0x6c, 0x20, // 'url' type\n    0x00, // version\n    0x00, 0x00, 0x01 // entry_flags\n  ])))\n\n  static VMHD = MP4.box(MP4.types.vmhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x01, // flags\n    0x00, 0x00, // graphics mode\n    0x00, 0x00, 0x00, 0x00, 0x00, 0x00 // op color\n  ]))\n\n  static SMHD = MP4.box(MP4.types.smhd, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, // balance\n    0x00, 0x00 // reserved\n  ]))\n\n  static StblTable = new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00 // entry_count\n  ])\n\n  static STTS = MP4.box(MP4.types.stts, MP4.StblTable)\n\n  static STSC = MP4.box(MP4.types.stsc, MP4.StblTable)\n\n  static STSZ = MP4.box(MP4.types.stsz, new Uint8Array([\n    0x00, // version\n    0x00, 0x00, 0x00, // flags\n    0x00, 0x00, 0x00, 0x00, // sample_size\n    0x00, 0x00, 0x00, 0x00 // sample_count\n  ]))\n\n  static STCO = MP4.box(MP4.types.stco, MP4.StblTable)\n\n  static box (type, ...payload) {\n    payload = payload.filter(Boolean)\n    const size = 8 + payload.reduce((p, c) => (p + c.byteLength), 0)\n    const ret = new Uint8Array(size)\n    ret[0] = (size >> 24) & 0xff\n    ret[1] = (size >> 16) & 0xff\n    ret[2] = (size >> 8) & 0xff\n    ret[3] = size & 0xff\n    ret.set(type, 4)\n    let offset = 8\n    payload.forEach((data) => {\n      ret.set(data, offset)\n      offset += data.byteLength\n    })\n    return ret\n  }\n\n  static ftyp (tracks) {\n    const isHevc = tracks.find(t => t.type === TrackType.VIDEO && t.codecType === VideoCodecType.HEVC)\n    return isHevc ? MP4.FTYPHEV1 : MP4.FTYPAVC1\n  }\n\n  static initSegment (tracks) {\n    const ftyp = MP4.ftyp(tracks)\n    // console.log('[remux],ftyp ,len ', ftyp.byteLength, hashVal(ftyp.toString()))\n    const init = concatUint8Array(ftyp, MP4.moov(tracks))\n    // console.log('[remux],init ,len ', init.byteLength, hashVal(init.toString()))\n    return init\n  }\n\n  static pssh (data) {\n    // const buffer = new Buffer()\n    const content = new Uint8Array(\n      [\n        0x01, 0x00, 0x00, 0x00 // version\n      ].concat(\n        [\n          0x10, 0x77, 0xef, 0xec,\n          0xc0, 0xb2, 0x4d, 0x02,\n          0xac, 0xe3, 0x3c, 0x1e,\n          0x52, 0xe2, 0xfb, 0x4b\n        ],\n        [0x00, 0x00, 0x00, 0x01],\n        parse(data.kid),\n        [0x00, 0x00, 0x00, 0x00]\n      )\n    )\n    return MP4.box(MP4.types.pssh, content)\n  }\n\n  static moov (tracks) {\n    if (tracks[0].useEME && (tracks[0].encv || tracks[0].enca)) {\n      if (!tracks[0].pssh) {\n        tracks[0].pssh = {\n          kid: tracks[0].kid\n        }\n      }\n      const pssh = this.pssh(tracks[0].pssh)\n      // console.log('[remux],pssh,', hashVal(pssh.toString()))\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        MP4.mvex(tracks),\n        ...tracks.map((t) => MP4.trak(t)),\n        pssh)\n    } else {\n      return MP4.box(MP4.types.moov,\n        MP4.mvhd(tracks[0].mvhdDurtion || tracks[0].duration, tracks[0].mvhdTimecale || tracks[0].timescale),\n        ...tracks.map((t) => MP4.trak(t)),\n        MP4.mvex(tracks)\n      )\n    }\n  }\n\n  static mvhd (duration, timescale = 90000) {\n    const mvhd = MP4.box(MP4.types.mvhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x01, 0x00, 0x00, // rate\n      0x01, 0x00, // volume\n      0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      0xff, 0xff, 0xff, 0xff // todo 0xff, 0xff, 0xff, 0xff // next_track_ID\n    ]))\n    // console.log('[remux],mvhd, len,', mvhd.byteLength, hashVal(mvhd.toString()))\n    return mvhd\n  }\n\n  static trak (track) {\n    const trak = MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.tkhdDuration || 0, track.width, track.height),\n      MP4.mdia(track)\n    )\n    // console.log('[remux],trak, len,', trak.byteLength, track.id, hashVal(trak.toString()))\n    return trak\n  }\n\n  static tkhd (id, duration, width = 0, height = 0) {\n    const tkhd = MP4.box(MP4.types.tkhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x07, // flags、todo 0x07\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // modification_time todo\n      (id >> 24) & 0xff, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff,\n      0x00, 0x00, 0x00, 0x00,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // todo (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, // layer\n      0x00, 0x00, // /*0x00*/ alternate_group  //todo type === 'video' ? 0x01 : 0x00（第二个位置）\n      0x01, 0x00, // /* 0x01 */, 0x00, // non-audio track volume  //todo type === 'audio' ? 0x01 : 0x00（第一个位置）\n      0x00, 0x00, // reserved\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x01, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x40, 0x00, 0x00, 0x00, // matrix\n      (width >> 8) & 0xff, width & 0xff, 0x00, 0x00,\n      (height >> 8) & 0xff, height & 0xff, 0x00, 0x00\n    ]))\n    // console.log('[remux],tkhd, len,', tkhd.byteLength, hashVal(tkhd.toString()))\n    return tkhd\n  }\n\n  static mdia (track) {\n    const mdia = MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minf(track))\n    // console.log('[remux],mdia, len,', mdia.byteLength, hashVal(mdia.toString()))\n    return mdia\n  }\n\n  static mdhd (duration, timescale = 90000) {\n    const mdhd = MP4.box(MP4.types.mdhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x00, // creation_time\n      0x00, 0x00, 0x00, 0x00, // todo 0x00, 0x00, 0x00, 0x00, // modification_time\n      (timescale >> 24) & 0xff, (timescale >> 16) & 0xff, (timescale >> 8) & 0xff, timescale & 0xff,\n      (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff, // (duration >> 24) & 0xff, (duration >> 16) & 0xff, (duration >> 8) & 0xff, duration & 0xff,//todo\n      0x55, 0xc4, // 'und' language (undetermined) //todo 0x15, 0xC7\n      0x00, 0x00 // pre_defined\n    ]))\n    // console.log('[remux],mdhd, len,', mdhd.byteLength, hashVal(mdhd.toString()))\n    return mdhd\n  }\n\n  static hdlr (type) {\n    const hdlr = MP4.box(MP4.types.hdlr, MP4.HDLR_TYPES[type])\n    // console.log('[remux],hdlr, len,', hdlr.byteLength, hashVal(hdlr.toString()))\n    return hdlr\n  }\n\n  static minf (track) {\n    const minf = MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stbl(track))\n    // console.log('[remux],minf, len,', minf.byteLength, hashVal(minf.toString()))\n    return minf\n  }\n\n  static stbl (track) {\n    const extBox = []\n    if (track && track.ext) {\n      track.ext.stss && extBox.push(MP4.stss(track.ext.stss.entries))\n      // track.ext.stss && extBox.push(MP4.ctts(track.ext.stss.entries))\n    }\n    const stbl = MP4.box(MP4.types.stbl, MP4.stsd(track), MP4.STTS, extBox[0], MP4.STSC, MP4.STSZ, MP4.STCO)\n    // console.log('[remux],stbl, len,', stbl.byteLength, hashVal(stbl.toString()))\n    return stbl\n  }\n\n  static stsd (track) {\n    let content\n\n    if (track.type === 'audio') {\n      if (track.useEME && track.enca) {\n        content = MP4.enca(track)\n        // console.log('[remux],enca, len,', content.byteLength, track.type, hashVal(content.toString()))\n      } else {\n        if (track.codecType === AudioCodecType.OPUS) {\n          content = MP4.opus(track)\n        } else {\n          content = MP4.mp4a(track)\n        }\n      }\n    } else if (track.useEME && track.encv) {\n      content = MP4.encv(track)\n      // console.log('[remux],encv, len,', content.byteLength, track.type, hashVal(content.toString()))\n    } else if (track.av1C) {\n      content = MP4.av01(track)\n    } else {\n      content = MP4.avc1hev1(track)\n      // console.log('[remux],avc1hev1, len,', content.byteLength, track.type, hashVal(content.toString()))\n    }\n    const stsd = MP4.box(MP4.types.stsd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      0x00, 0x00, 0x00, 0x01 // entry_count\n    ]), content)\n    // console.log('[remux],stsd, len,', stsd.byteLength, hashVal(stsd.toString()))\n    return stsd\n  }\n\n  static enca (data) {\n    const channelCount = data.enca.channelCount\n    const sampleRate = data.enca.sampleRate\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, channelCount, // channelcount\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, 0x00, 0x00, // reserved2\n      (sampleRate >> 8) & 0xff,\n      sampleRate & 0xff, //\n      0x00, 0x00\n    ])\n    const esds = MP4.esds(data.config)\n    // console.log('[remux],esds, len,', esds.byteLength, hashVal(esds.toString()))\n    const sinf = MP4.sinf(data.enca)\n    // console.log('[remux],sinf, len,', sinf.byteLength, hashVal(sinf.toString()))\n    return MP4.box(MP4.types.enca, content, esds, sinf)\n  }\n\n  static encv (track) {\n    const sps = track.sps.length > 0 ? track.sps[0] : []\n    const pps = track.pps.length > 0 ? track.pps[0] : []\n    const width = track.width\n    const height = track.height\n    const hSpacing = track.sarRatio[0]\n    const vSpacing = track.sarRatio[1]\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // pre_defined\n      (width >> 8) & 0xff,\n      width & 0xff, // width\n      (height >> 8) & 0xff,\n      height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n\n      0x12,\n      0x64, 0x61, 0x69, 0x6C, // dailymotion/hls.js\n      0x79, 0x6D, 0x6F, 0x74,\n      0x69, 0x6F, 0x6E, 0x2F,\n      0x68, 0x6C, 0x73, 0x2E,\n      0x6A, 0x73, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // compressorname\n      0x00, 0x18, // depth = 24\n      0x11, 0x11]) // pre_defined = -1;\n    const avcc = new Uint8Array([\n      0x01, // version\n      sps[1], // profile\n      sps[2], // profile compatible\n      sps[3], // level\n      0xfc | 3,\n      0xE0 | 1, // 目前只处理一个sps\n      sps.length >>> 8 & 0xff,\n      sps.length & 0xff\n    ].concat(...sps).concat([\n      0x01,\n      pps.length >>> 8 & 0xff,\n      pps.length & 0xff\n    ]).concat(...pps))\n    const btrt = new Uint8Array([\n      0x00, 0x00, 0x58, 0x39,\n      0x00, 0x0F, 0xC8, 0xC0,\n      0x00, 0x04, 0x56, 0x48\n    ])\n    const sinf = MP4.sinf(track.encv)\n    const pasp = new Uint8Array([\n      (hSpacing >> 24), // hSpacing\n      (hSpacing >> 16) & 0xff,\n      (hSpacing >> 8) & 0xff,\n      hSpacing & 0xff,\n      (vSpacing >> 24), // vSpacing\n      (vSpacing >> 16) & 0xff,\n      (vSpacing >> 8) & 0xff,\n      vSpacing & 0xff\n    ])\n    return MP4.box(MP4.types.encv, content, MP4.box(MP4.types.avcC, avcc), MP4.box(MP4.types.btrt, btrt), sinf, MP4.box(MP4.types.pasp, pasp))\n  }\n\n  static schi (data) {\n    const content = new Uint8Array([])\n    const tenc = MP4.tenc(data)\n    return MP4.box(MP4.types.schi, content, tenc)\n  }\n\n  static tenc (data) {\n    //  用于每个track的加密参数（包括KID、初始化向量、加密标志位），包含在TrackEncryptionBox(‘tenc’)中。\n    const content = new Uint8Array(\n      [\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // skip\n        data.default_IsEncrypted & 0xff, // default_isProtected\n        data.default_IV_size & 0xff // default_Per_Sample_IV_Size\n      ].concat(parse(data.default_KID)))\n    return MP4.box(MP4.types.tenc, content)\n  }\n\n  static sinf (data) {\n    const content = new Uint8Array([])\n    const frma = new Uint8Array([\n      data.data_format.charCodeAt(0),\n      data.data_format.charCodeAt(1),\n      data.data_format.charCodeAt(2),\n      data.data_format.charCodeAt(3)\n    ])\n    const schm = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x63, 0x65, 0x6E, 0x63, // cenc\n      0x00, 0x01, 0x00, 0x00 // version\n    ])\n    const schi = MP4.schi(data)\n    return MP4.box(MP4.types.sinf, content, MP4.box(MP4.types.frma, frma), MP4.box(MP4.types.schm, schm), schi)\n  }\n  static av01 (track) {\n    return MP4.box(MP4.types.av01, new Uint8Array([\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n      (track.width >> 8) & 0xff, track.width & 0xff, // width\n      (track.height >> 8) & 0xff, track.height & 0xff, // height\n      0x00, 0x48, 0x00, 0x00, // horizresolution\n      0x00, 0x48, 0x00, 0x00, // vertresolution\n      0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // frame_count\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x00, // compressor name\n      0x00, 0x18, // depth\n      0x11, 0x11 // pre_defined = -1 //todo\n    ]), track.av1C, track.colr)\n  }\n  static avc1hev1 (track) {\n    const isHevc = track.codecType === VideoCodecType.HEVC\n    const typ = isHevc ? MP4.types.hvc1 : MP4.types.avc1\n    const config = isHevc ? MP4.hvcC(track) : MP4.avcC(track)\n    const boxes = [\n      new Uint8Array([\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // data_reference_index\n        0x00, 0x00, // pre_defined\n        0x00, 0x00, // reserved\n        0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // pre_defined\n        (track.width >> 8) & 0xff, track.width & 0xff, // width\n        (track.height >> 8) & 0xff, track.height & 0xff, // height\n        0x00, 0x48, 0x00, 0x00, // horizresolution\n        0x00, 0x48, 0x00, 0x00, // vertresolution\n        0x00, 0x00, 0x00, 0x00, // reserved\n        0x00, 0x01, // frame_count\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00,\n        0x00, 0x00, 0x00, 0x00, // compressor name\n        0x00, 0x18, // depth\n        0x11, 0x11 // pre_defined = -1 //todo\n      ]), config\n    ]\n    // console.log('[remux],avc1hev1_0, len,', boxes[0].byteLength, hashVal(boxes[0].toString()))\n    // console.log('[remux],avc1hev1_1, len,', boxes[1].byteLength, hashVal(boxes[1].toString()))\n    if (isHevc) {\n      boxes.push(MP4.box(MP4.types.fiel, new Uint8Array([0x01, 0x00])))\n      // console.log('[remux],fiel, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    } else if (track.sarRatio && track.sarRatio.length > 1) {\n      boxes.push(MP4.pasp(track.sarRatio))\n      // console.log('[remux],pasp, len,', boxes[2].byteLength, hashVal(boxes[2].toString()))\n    }\n    return MP4.box(typ, ...boxes)\n  }\n\n  static avcC (track) {\n    const sps = []\n    const pps = []\n\n    let len\n    track.sps.forEach((s) => {\n      len = s.byteLength\n      sps.push((len >>> 8) & 0xff)\n      sps.push(len & 0xff)\n      sps.push(...s)\n    })\n\n    track.pps.forEach((p) => {\n      len = p.byteLength\n      pps.push((len >>> 8) & 0xff)\n      pps.push(len & 0xff)\n      pps.push(...p)\n    })\n\n    return MP4.box(MP4.types.avcC, new Uint8Array([\n      0x01, // configurationVersion\n      sps[3], // AVCProfileIndication\n      sps[4], // profile_compatibility\n      sps[5], // AVCLevelIndication\n      0xfc | 3, // lengthSizeMinusOne\n      0xe0 | track.sps.length // 3bit reserved (111) + numOfSequenceParameterSets\n    ].concat(...sps)\n      .concat([track.pps.length]) // numOfPictureParameterSets\n      .concat(...pps)))\n  }\n\n  static hvcC (track) {\n    const hvcC = track.hvcC\n    if (hvcC instanceof ArrayBuffer || hvcC instanceof Uint8Array) return hvcC\n    const { vps, sps, pps } = track\n    let data\n    if (hvcC) {\n      const pcf = hvcC.generalProfileCompatibilityFlags\n      const cif = hvcC.generalConstraintIndicatorFlags\n      const numOfArrays = (vps.length && 1) + (sps.length && 1) + (pps.length && 1)\n      data = [\n        0x01, // configurationVersion\n        hvcC.generalProfileSpace << 6 | hvcC.generalTierFlag << 5 | hvcC.generalProfileIdc,\n        pcf >>> 24, pcf >>> 16, pcf >>> 8, pcf,\n        cif[0], cif[1], cif[2], cif[3], cif[4], cif[5],\n        hvcC.generalLevelIdc,\n        0xF0, 0x00, // min_spatial_segmentation_idc\n        0xFC, // parallelismType\n        hvcC.chromaFormatIdc | 0xFC,\n        hvcC.bitDepthLumaMinus8 | 0xF8,\n        hvcC.bitDepthChromaMinus8 | 0xF8,\n        0x00, 0x00, // avgFrameRate\n        hvcC.numTemporalLayers << 3 | hvcC.temporalIdNested << 2 | 3,\n        numOfArrays\n      ]\n      const write = (x) => {\n        data.push(x.length >> 8, x.length)\n        data.push(...x)\n      }\n      if (vps.length) {\n        data.push(0xA0, 0x00, vps.length)\n        vps.forEach(write)\n      }\n      if (sps.length) {\n        data.push(0xA1, 0x00, sps.length)\n        sps.forEach(write)\n      }\n      if (pps.length) {\n        data.push(0xA2, 0x00, pps.length)\n        pps.forEach(write)\n      }\n    } else {\n      data = [\n        0x01, // configurationVersion\n        0x01, // profile_space + tier_flag + profile_idc\n        0x60, 0x00, 0x00, 0x00, // general_profile_compatibility\n        0x90, 0x00, 0x00, 0x00, 0x00, 0x00, // constraint_indicator_flags\n        0x5D, // level_idc=90\n        0xF0, 0x00, 0xFC, 0xFD, // profile_compatibility_indications\n        0xF8, // ‘11111’b + bitDepthLumaMinus8\n        0xF8, // ‘11111’b + bitDepthChromaMinus8\n        0x00, 0x00, // avgFrameRate\n        0x0F, // constantFrameRate + numTemporalLayers + ‘1’b + lengthSizeMinusOne\n        0x03, // numOfArrays\n\n        // vps\n        0xA0, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x18, // nalUnitLength\n        0x40, 0x01, 0x0C, 0x01, 0xFF, 0xFF, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0x99, 0x98, 0x09,\n\n        // sps\n        0xA1, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x2D, // nalUnitLength\n        0x42, 0x01, 0x01, 0x01, 0x60, 0x00, 0x00, 0x03, 0x00, 0x90, 0x00, 0x00, 0x03, 0x00, 0x00, 0x03, 0x00, 0x5D, 0xA0, 0x02,\n        0x80, 0x80, 0x2D, 0x16, 0x59, 0x99, 0xA4, 0x93, 0x2B, 0x9A, 0x80, 0x80, 0x80, 0x82, 0x00, 0x00, 0x03, 0x00, 0x02, 0x00,\n        0x00, 0x03, 0x00, 0x32, 0x10,\n\n        // pps\n        0xA2, 0x00, 0x01, // array_completeness + ‘0’b + NAL_unit_type + numNalus\n        0x00, 0x07, // nalUnitLength\n        0x44, 0x01, 0xC1, 0x72, 0xB4, 0x62, 0x40\n      ]\n    }\n    return MP4.box(MP4.types.hvcC, new Uint8Array(data))\n  }\n\n  static pasp ([hSpacing, vSpacing]) {\n    return MP4.box(MP4.types.pasp, new Uint8Array([\n      hSpacing >> 24, (hSpacing >> 16) & 0xff, (hSpacing >> 8) & 0xff, hSpacing & 0xff,\n      vSpacing >> 24, (vSpacing >> 16) & 0xff, (vSpacing >> 8) & 0xff, vSpacing & 0xff\n    ]))\n  }\n\n  static mp4a (track) {\n    return MP4.box(MP4.types.mp4a, new Uint8Array([\n      0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      0x00, track.channelCount,\n      0x00, 0x10, // sampleSize:16bits\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff, track.sampleRate & 0xff,\n      0x00, 0x00\n    ]), track.config.length ? MP4.esds(track.config) : undefined)\n  }\n\n  static esds (config) {\n    const len = config.length\n    const esds = MP4.box(MP4.types.esds, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      0x03, // tag\n      0x17 + len, // length\n      0x00, 0x00, // ES_ID\n      0x00, // streamDependenceFlag, URL_flag, reserved, streamPriority\n      0x04, // tag\n      0x0f + len, // length\n      0x40, // object type\n      0x15, // streamType\n      0x00, 0x06, 0x00, // bufferSizeDB\n      0x00, 0x00, 0xda, 0xc0, // maxBitrate\n      0x00, 0x00, 0xda, 0xc0, // avgBitrate\n      0x05 // tag, DecoderSpecificInfoTag\n    ].concat([len])\n      .concat(config)\n      .concat(\n        [0x06, 0x01, 0x02]// GASpecificConfig\n      )\n    ))\n    // console.log('[remux],esds ,len ', esds.byteLength, hashVal(esds.toString()))\n    return esds\n  }\n\n  /**\n   * https://opus-codec.org/docs/opus_in_isobmff.html\n   */\n  static opus (track) {\n    const opusAudioDescription = new Uint8Array([\n      0x00, 0x00, 0x00, // version\n      0x00, 0x00, 0x00, // reserved\n      0x00, 0x01, // data_reference_index\n      0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, // reserved\n      track.channelCount,\n      0x00, 0x10, // sampleSize\n      0x00, 0x00, // pre_defined\n      0x00, 0x00, // reserved\n      (track.sampleRate >> 8) & 0xff,\n      track.sampleRate & 0xff, // sampleRate\n      0x00, 0x00\n    ])\n\n    const opusSpecificConfig = track.config.length ? MP4.dOps(track) : []\n    return MP4.box(MP4.types.Opus, opusAudioDescription, opusSpecificConfig)\n  }\n\n  static dOps (track) {\n    if (track.config) {\n      track.config[4] = (track.sampleRate >>> 24) & 0xFF\n      track.config[5] = (track.sampleRate >>> 16) & 0xFF\n      track.config[6] = (track.sampleRate >>> 8) & 0xFF\n      track.config[7] = (track.sampleRate) & 0xFF\n\n      return MP4.box(MP4.types.dOps, track.config)\n    }\n\n    // const {channelCount, channelConfigCode, sampleRate } = track\n\n    // const mapping = channelConfigCode?.map((c) => {\n    //   return [\n    //     (c >>> 4) & 0xFF, // Channel mapping family\n    //     c & 0xFF // Channel mapping index\n    //   ]\n    // }).flat() || []\n\n    // const data = new Uint8Array([\n    //   0x00, // version\n    //   channelCount, // channelCount\n    //   0x00, 0x00, // preSkip\n    //   (sampleRate >>> 24) & 0xFF,\n    //   (sampleRate >>> 17) & 0xFF,\n    //   (sampleRate >>> 8) & 0xFF,\n    //   (sampleRate >>> 0) & 0xFF,\n    //   0x00, 0x00, // Global Gain\n    //   ... mapping\n    // ])\n\n    // return data\n  }\n\n  static mvex (tracks) {\n    // const mehd = MP4.box(MP4.types.mehd, this.extension(0, 0), Buffer.writeUint32(tracks[0].tkhdDuration))\n    // const mvex = MP4.box(MP4.types.mvex, mehd, MP4.trex1(1), MP4.trex2(2))\n    // // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    // const mvex = MP4.box(MP4.types.mvex, MP4.trex1(1), MP4.trex2(2))\n    const mvex = MP4.box(MP4.types.mvex, ...tracks.map((t) => MP4.trex(t.id)))\n    // console.log('[remux],mvex, len,', mvex.byteLength, hashVal(mvex.toString()))\n    return mvex\n  }\n\n  static trex (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff, // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x00, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x01 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex1 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x02, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x00, 0x01, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static trex2 (id) {\n    const trex = MP4.box(MP4.types.trex, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags\n      (id >> 24),\n      (id >> 16) & 0xff,\n      (id >> 8) & 0xff,\n      (id & 0xff), // track_ID\n      0x00, 0x00, 0x00, 0x01, // default_sample_description_index\n      0x00, 0x00, 0x04, 0x00, // default_sample_duration\n      0x00, 0x00, 0x00, 0x00, // default_sample_size\n      0x02, 0x00, 0x00, 0x00 // default_sample_flags\n    ]))\n    // console.log('[remux],trex, len,', trex.byteLength, hashVal(trex.toString()))\n    return trex\n  }\n\n  static moof (tracks) {\n    const moof = MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].samples ? tracks[0].samples[0].gopId : 0), ...tracks.map((t) => MP4.traf(t)))\n    // console.log('[remux],moof, len', moof.byteLength)\n    return moof\n    // return MP4.box(MP4.types.moof, MP4.mfhd(tracks[0].gopId), ...tracks.map((t) => MP4.traf(t)))\n  }\n\n  static mfhd (sequenceNumber) {\n    // sequenceNumber += 1\n    const mfhd = MP4.box(MP4.types.mfhd, new Uint8Array([\n      0x00, // version\n      0x00, 0x00, 0x00, // flags\n      sequenceNumber >> 24, (sequenceNumber >> 16) & 0xff, (sequenceNumber >> 8) & 0xff, sequenceNumber & 0xff\n    ]))\n    // console.log('[remux],mfhd, len,', mfhd.byteLength, hashVal(mfhd.toString()))\n    return mfhd\n  }\n\n  static traf (track) {\n    const tfhd = MP4.tfhd(track.id)\n    // console.log('[remux],tfhd, len,', tfhd.byteLength, hashVal(tfhd.toString()), ', trackid = ', track.id)\n    // console.log('[remux],tfdt,baseMediaDecodeTime,', track.baseMediaDecodeTime)\n    const tfdt = MP4.tfdt(track, track.baseMediaDecodeTime)\n    let sencLength = 0\n    let samples\n    if (track.isVideo && track.videoSenc) {\n      samples = track.videoSenc\n      samples.forEach(function (item) {\n        sencLength = sencLength + 8\n        if (item.subsamples && item.subsamples.length) {\n          sencLength = sencLength + 2\n          sencLength = sencLength + item.subsamples.length * 6\n        }\n      })\n    }\n    track.videoSencLength = sencLength\n    // console.log('[remux],tfdt, len,', tfdt.toString().length)\n    // console.log('[remux],tfdt, len,', tfdt.byteLength, hashVal(tfdt.toString()))\n    if (!track.useEME || (!track.isVideoEncryption && !track.isAudioEncryption)) {\n      const sdtp = MP4.sdtp(track)\n      // console.log('[remux],sdtp, len,', sdtp.byteLength, hashVal(sdtp.toString()))\n      const offset = 16 + // tfhd\n        20 + // tfdt\n        8 + // traf header\n        16 + // mfhd\n        8 + // moof header\n        8 // mdat header\n      return MP4.box(MP4.types.traf, tfhd, tfdt, sdtp, MP4.trun(track.samples, sdtp.byteLength + offset))\n    } else if (track.isVideoEncryption) {\n      if (track.isVideo) {\n        // 加密视频\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const trun = MP4.trun1(track)\n        const senc = MP4.senc(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, saiz, saio, trun, senc)\n        // console.log('[remux],trex_video, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      } else {\n        // 视频加密，音频加密和未加密处理\n        if (!track.isAudioEncryption) {\n          // 音频未加密\n          const sbgp = MP4.sbgp()\n          const trun = MP4.trun1(track)\n          return MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, trun)\n        } else {\n          // 音频加密\n          const sbgp = MP4.sbgp()\n          const saiz = MP4.saiz(track)\n          const saio = MP4.saio(track)\n          const senc = MP4.senc(track)\n          const trun = MP4.trun1(track)\n          const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n          // console.log('[remux],trex_audio, len,', traf.byteLength, hashVal(traf.toString()))\n          return traf\n        }\n      }\n    } else {\n      // 视频未加密，音频加密\n      if (track.isVideo) {\n        const trun = MP4.trun1(track)\n        return MP4.box(MP4.types.traf, tfhd, tfdt, trun)\n      } else {\n        const sbgp = MP4.sbgp()\n        const saiz = MP4.saiz(track)\n        const saio = MP4.saio(track)\n        const senc = MP4.senc(track)\n        const trun = MP4.trun1(track)\n        const traf = MP4.box(MP4.types.traf, tfhd, tfdt, sbgp, saiz, saio, senc, trun)\n        // console.log('[remux],trex, len,', traf.byteLength, hashVal(traf.toString()))\n        return traf\n      }\n    }\n  }\n\n  static sdtp (data) {\n    const buffer = new Buffer()\n    data.samples.forEach(item => {\n      buffer.write(new Uint8Array(data.isVideo ? [item.keyframe ? 32 : 16] : [16]))\n    })\n    return MP4.box(MP4.types.sdtp, this.extension(0, 0), buffer.buffer)\n  }\n\n  static trun1 (data) {\n    // const id = data.id\n    // const ceil = id === 1 ? 12 : 4\n    const buffer = new Buffer()\n    const sampleCount = Buffer.writeUint32(data.samples.length)\n    let offset = null\n    if (data.isVideo) {\n      const sencLength = data.videoSencLength\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      17 + //saiz\n      24 + //saio\n      data.samples.length*16\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      12(header) + sencLength //senc\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n      = 149+data.samples.length * 16 + sencLength\n       */\n      offset = Buffer.writeUint32(data.samples.length * 16 + sencLength + 149)\n      if (!data.isVideoEncryption && data.isAudioEncryption) {\n        offset = Buffer.writeUint32(data.samples.length * 16 + 92)\n      }\n    } else {\n      /*\n      16 + // mfhd\n      16 + // tfhd\n      20 + // tfdt\n      28 + //sbgp\n      4(offset) + 4(sampleCount) + 12(header)  //trun\n      8 + // traf header\n      8 + // moof header\n      8 // mdat header\n       */\n      let len = data.samples.length * 12 + 124\n      if (data.isAudioEncryption) {\n        len = data.samples.length * 12 + 8 * data.audioSenc.length + 177\n      }\n      offset = Buffer.writeUint32(len)\n    }\n\n    data.samples.forEach(item => {\n      buffer.write(Buffer.writeUint32(item.duration))\n      buffer.write(Buffer.writeUint32(item.size))\n      buffer.write(Buffer.writeUint32(item.keyframe ? 0x02000000 : 0x00010000))\n      if (data.isVideo) {\n        buffer.write(Buffer.writeUint32(item.cts ? item.cts : 0))\n      }\n    })\n\n    return MP4.box(MP4.types.trun, this.extension(0, data.flags), sampleCount, offset, buffer.buffer)\n  }\n\n  static senc (data) {\n    const buffer = new Buffer()\n    const len = data.samples.length\n    const ceil = data.isVideo ? 16 : 8\n    const flag = data.isVideo ? 2 : 0\n    let samples = []\n    let samplesLength = 0\n    if (data.isVideo) {\n      samples = data.videoSenc\n      samplesLength = data.videoSencLength\n    } else {\n      samples = data.audioSenc\n    }\n    samplesLength = samplesLength || ceil * len\n    buffer.write(\n      Buffer.writeUint32(16 + samplesLength), MP4.types.senc, this.extension(0, flag)\n    )\n    buffer.write(Buffer.writeUint32(len))\n    samples.forEach(item => {\n      for (let i = 0; i < item.InitializationVector.length; i++) {\n        buffer.write(new Uint8Array([item.InitializationVector[i]]))\n      }\n      if (item.subsamples && item.subsamples.length) {\n        buffer.write(Buffer.writeUint16(item.subsamples.length))\n        item.subsamples.forEach(value => {\n          buffer.write(Buffer.writeUint16(value.BytesOfClearData))\n          buffer.write(Buffer.writeUint32(value.BytesOfProtectedData))\n        })\n      }\n    })\n    return buffer.buffer\n    // return MP4.box(MP4.types.senc, this.extension(0, flag), buffer.buffer)\n  }\n\n  static saio (data) {\n    let length = data.samples.length * 12 + 141\n    if (!data.isVideo && data.isAudioEncryption) {\n      length = 149\n    }\n    const content = new Uint8Array([\n      0x01, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x00, 0x00,\n      (length >> 24) & 0xff,\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff\n    ])\n    return MP4.box(MP4.types.saio, content)\n  }\n\n  static saiz (data) {\n    const samplesLength = data.samples.length\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x10, // default sample info size\n      (samplesLength >> 24) & 0xff,\n      (samplesLength >> 16) & 0xff,\n      (samplesLength >> 8) & 0xff,\n      samplesLength & 0xff\n    ])\n    return MP4.box(MP4.types.saiz, content)\n  }\n\n  static sbgp () {\n    const content = new Uint8Array([\n      0x72, 0x6F, 0x6C, 0x6C, // sgpd, grouping_type\n      0x00, 0x00, 0x00, 0x01,\n      0x00, 0x00, 0x01, 0x19,\n      0x00, 0x00, 0x00, 0x01\n    ])\n    return MP4.box(MP4.types.sbgp, this.extension(0, 0), content)\n  }\n\n  static extension (version, flag) {\n    return new Uint8Array([\n      version,\n      (flag >> 16) & 0xff,\n      (flag >> 8) & 0xff,\n      flag & 0xff\n    ])\n  }\n\n  static tfhd (id) {\n    return MP4.box(MP4.types.tfhd, new Uint8Array([\n      0x00, // version 0\n      0x00, 0x00, 0x00, // flags todo 0x00\n      id >> 24, (id >> 16) & 0xff, (id >> 8) & 0xff, id & 0xff // track_ID\n    ]))\n  }\n\n  static tfdt (data, baseMediaDecodeTime) {\n    const upperWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime / (UINT32_MAX + 1))\n    const lowerWordBaseMediaDecodeTime = Math.floor(baseMediaDecodeTime % (UINT32_MAX + 1))\n    if (data.useEME && (data.isVideoEncryption || data.isAudioEncryption)) {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x00, // version 0\n        0x00, 0x00, 0x00, // flags\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    } else {\n      return MP4.box(MP4.types.tfdt, new Uint8Array([\n        0x01, // version 1\n        0x00, 0x00, 0x00, // flags\n        upperWordBaseMediaDecodeTime >> 24,\n        (upperWordBaseMediaDecodeTime >> 16) & 0xff,\n        (upperWordBaseMediaDecodeTime >> 8) & 0xff,\n        upperWordBaseMediaDecodeTime & 0xff,\n        lowerWordBaseMediaDecodeTime >> 24,\n        (lowerWordBaseMediaDecodeTime >> 16) & 0xff,\n        (lowerWordBaseMediaDecodeTime >> 8) & 0xff,\n        lowerWordBaseMediaDecodeTime & 0xff\n      ]))\n    }\n  }\n\n  static trun (samples, offset) {\n    const sampleLen = samples.length\n    const dataLen = 12 + (16 * sampleLen)\n    offset += 8 + dataLen\n    const data = new Uint8Array(dataLen)\n    data.set([\n      0x00, // version\n      0x00, 0x0f, 0x01, // flags\n      (sampleLen >>> 24) & 0xff, (sampleLen >>> 16) & 0xff, (sampleLen >>> 8) & 0xff, sampleLen & 0xff,\n      (offset >>> 24) & 0xff, (offset >>> 16) & 0xff, (offset >>> 8) & 0xff, offset & 0xff // data_offset\n    ], 0)\n    for (let i = 0; i < sampleLen; i++) {\n      const {\n        duration, size, flag = {}, cts = 0\n      } = samples[i]\n      data.set([\n        (duration >>> 24) & 0xff, (duration >>> 16) & 0xff, (duration >>> 8) & 0xff, duration & 0xff,\n        (size >>> 24) & 0xff, (size >>> 16) & 0xff, (size >>> 8) & 0xff, size & 0xff,\n        (flag.isLeading << 2) | (flag.dependsOn === null || flag.dependsOn === undefined ? 1 : flag.dependsOn),\n        (flag.isDependedOn << 6) | (flag.hasRedundancy << 4) | (flag.paddingValue << 1) | (flag.isNonSyncSample === null || flag.isNonSyncSample === undefined ? 1 : flag.isNonSyncSample),\n        flag.degradationPriority & (0xf0 << 8), flag.degradationPriority & 0x0f, // sample_flags\n        (cts >>> 24) & 0xff, (cts >>> 16) & 0xff, (cts >>> 8) & 0xff, cts & 0xff // sample_composition_time_offset\n      ], 12 + 16 * i)\n    }\n\n    return MP4.box(MP4.types.trun, data)\n  }\n\n  static moovMP4 (tracks) {\n    return MP4.box(MP4.types.moov,\n      MP4.mvhd(tracks[0].duration, tracks[0].timescale),\n      ...tracks.map((t) => MP4.trackMP4(t)))\n  }\n\n  static trackMP4 (track) {\n    return MP4.box(\n      MP4.types.trak,\n      MP4.tkhd(track.id, track.duration, track.width, track.height),\n      MP4.mdiaMP4(track)\n    )\n  }\n\n  static mdiaMP4 (track) {\n    return MP4.box(MP4.types.mdia, MP4.mdhd(track.duration, track.timescale), MP4.hdlr(track.type), MP4.minfMP4(track))\n  }\n\n  static minfMP4 (track) {\n    return MP4.box(MP4.types.minf, track.type === TrackType.VIDEO ? MP4.VMHD : MP4.SMHD, MP4.DINF, MP4.stblMP4(track))\n  }\n\n  static stblMP4 (track) {\n    const { ext } = track\n    const boxes = [\n      MP4.stsd(track),\n      MP4.stts(ext.stts),\n      MP4.stsc(ext.stsc),\n      MP4.stsz(ext.stsz),\n      MP4.stco(ext.stco)\n    ]\n\n    if (ext.stss.length) {\n      boxes.push(MP4.stss(ext.stss))\n    }\n\n    if (ext.ctts.length) {\n      boxes.push(MP4.ctts(ext.ctts))\n    }\n\n    return MP4.box(MP4.types.stbl, ...boxes)\n  }\n\n  static stts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n\n    return MP4.box(MP4.types.stts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsc (entries) {\n    const len = entries.length\n    const data = new Uint8Array(12 * len)\n    let offset = 0\n    entries.forEach(({ firstChunk, samplesPerChunk, sampleDescIndex }) => {\n      data.set([\n        firstChunk >> 24, (firstChunk >> 16) & 0xff, (firstChunk >> 8) & 0xff, firstChunk & 0xff,\n        samplesPerChunk >> 24, (samplesPerChunk >> 16) & 0xff, (samplesPerChunk >> 8) & 0xff, samplesPerChunk & 0xff,\n        sampleDescIndex >> 24, (sampleDescIndex >> 16) & 0xff, (sampleDescIndex >> 8) & 0xff, sampleDescIndex & 0xff\n      ], offset)\n      offset += 12\n    })\n    return MP4.box(MP4.types.stsc, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      (len >> 24), (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static stsz (samplesSizes) {\n    const len = samplesSizes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    samplesSizes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stsz, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stco (offsets) {\n    const len = offsets.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    offsets.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stco, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static stss (keyframeIndexes) {\n    const len = keyframeIndexes.length\n    const data = new Uint8Array(4 * len)\n    let offset = 0\n    keyframeIndexes.forEach((x) => {\n      data.set([\n        x >> 24, (x >> 16) & 0xff, (x >> 8) & 0xff, x & 0xff\n      ], offset)\n      offset += 4\n    })\n    return MP4.box(MP4.types.stss, concatUint8Array(\n      new Uint8Array([\n        0, 0, 0, 0,\n        len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n      ]),\n      data\n    ))\n  }\n\n  static ctts (samples) {\n    const len = samples.length\n    const data = new Uint8Array(8 * len)\n    let offset = 0\n    samples.forEach(({ value, count }) => {\n      data.set([\n        count >> 24, (count >> 16) & 0xff, (count >> 8) & 0xff, count & 0xff,\n        value >> 24, (value >> 16) & 0xff, (value >> 8) & 0xff, value & 0xff\n      ], offset)\n      offset += 8\n    })\n    return MP4.box(MP4.types.ctts, concatUint8Array(new Uint8Array([\n      0, 0, 0, 0,\n      len >> 24, (len >> 16) & 0xff, (len >> 8) & 0xff, len & 0xff\n    ]), data))\n  }\n\n  static styp () {\n    return MP4.box(MP4.types.styp, new Uint8Array([\n      0x6D, 0x73, 0x64, 0x68,\n      0x00, 0x00, 0x00, 0x00,\n      0x6D, 0x73, 0x64, 0x68,\n      0x6D, 0x73, 0x69, 0x78\n    ]))\n  }\n\n  // data.sampleOffset 指的是samples的序列号。_samples[0].idx\n  static sidx (data) {\n    // const buffer = new Buffer()\n    const timescale = data.timescale\n    const duration = data.samples[0].duration\n    const durationCount = duration * data.samples.length\n    const earliestTime = data.samples[0].sampleOffset * duration\n    let mdatSize = 8\n    data.samples.forEach(item => {\n      mdatSize += item.size\n    })\n    let length = 0\n    if (data.isVideo) {\n      let sencLength = 0\n      let samples\n      if (data.videoSenc) {\n        samples = data.videoSenc\n      }\n      if (data.isVideo) {\n        samples.forEach(item => {\n          sencLength = sencLength + 8\n          if (item.subsamples && item.subsamples.length) {\n            sencLength = sencLength + 2\n            sencLength = sencLength + item.subsamples.length * 6\n          }\n        })\n      }\n      data.videoSencLength = sencLength\n      length = mdatSize + 141 + data.samples.length * 16 + sencLength\n      if (data.useEME && data.isAudioEncryption && !data.isVideoEncryption) {\n        length = mdatSize + (data.samples.length * 16) + 84\n      }\n    } else {\n      length = mdatSize + 116 + data.samples.length * 12\n      if (data.useEME && data.isAudioEncryption) {\n        length = mdatSize + 169 + data.samples.length * 12 + 8 * data.audioSenc.length\n      }\n    }\n\n    const content = new Uint8Array([\n      0x00, 0x00, 0x00, 0x00,\n      0x00, 0x00, 0x00, data.id & 0xff, // ref_id\n      (timescale >> 24) & 0xff,\n      (timescale >> 16) & 0xff,\n      (timescale >> 8) & 0xff,\n      timescale & 0xff, // timescale\n      (earliestTime >> 24) & 0xff,\n      (earliestTime >> 16) & 0xff,\n      (earliestTime >> 8) & 0xff,\n      earliestTime & 0xff, // earliest_presentation_time\n      0x00, 0x00, 0x00, 0x00, // first_offset\n      0x00, 0x00, // reserved\n      0x00, 0x01, // ref_count\n      // 0x00, 0x04, 0x11, 0xCF, // ref_size + ref_type\n      // 0x00, 0x01, 0x0A, 0xA6, // ref_size + ref_type\n      0x00, // ref_size + ref_type ref_size = moof.size + mdat.size\n      (length >> 16) & 0xff,\n      (length >> 8) & 0xff,\n      length & 0xff,\n      (durationCount >> 24) & 0xff,\n      (durationCount >> 16) & 0xff,\n      (durationCount >> 8) & 0xff,\n      durationCount & 0xff,\n      0x90, 0x00, 0x00, 0x00\n    ])\n    return MP4.box(MP4.types.sidx, content)\n  }\n\n  static mdat (data) {\n    const mdat = MP4.box(MP4.types.mdat, data)\n    // console.log('[remux],mdat ,len ', mdat.byteLength, hashVal(mdat.toString()))\n    return mdat\n  }\n}\n","\nexport class Logger {\n  constructor (name, enable) {\n    this.name = name || ''\n    this._prefix = `[${this.name}]`\n    Logger.disabled = enable\n  }\n\n  debug (...args) {\n    if (Logger.disabled) return\n    console.debug(this._prefix, ...args)\n  }\n\n  log (...args) {\n    if (Logger.disabled) return\n    console.log(this._prefix, ...args)\n  }\n\n  warn (...args) {\n    if (Logger.disabled) return\n    console.warn(this._prefix, ...args)\n  }\n\n  error (...args) {\n    if (Logger.disabled) return\n    console.error(this._prefix, ...args)\n  }\n\n  table (...args) {\n    if (Logger.disabled) return\n    console.group(this._prefix)\n    console.table(...args)\n    console.groupEnd()\n  }\n\n  static disabled = true\n\n  static enable () {\n    Logger.disabled = false\n  }\n\n  static disable () {\n    Logger.disabled = true\n  }\n}\n","import {\n  WordArray,\n  Hasher,\n} from './core.js';\n\n// Constants table\nconst T = [];\n\n// Compute constants\nfor (let i = 0; i < 64; i += 1) {\n  T[i] = (Math.abs(Math.sin(i + 1)) * 0x100000000) | 0;\n}\n\nconst FF = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & c) | (~b & d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst GG = (a, b, c, d, x, s, t) => {\n  const n = a + ((b & d) | (c & ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst HH = (a, b, c, d, x, s, t) => {\n  const n = a + (b ^ c ^ d) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\nconst II = (a, b, c, d, x, s, t) => {\n  const n = a + (c ^ (b | ~d)) + x + t;\n  return ((n << s) | (n >>> (32 - s))) + b;\n};\n\n/**\n * MD5 hash algorithm.\n */\nexport class MD5Algo extends Hasher {\n  _doReset() {\n    this._hash = new WordArray([\n      0x67452301,\n      0xefcdab89,\n      0x98badcfe,\n      0x10325476,\n    ]);\n  }\n\n  _doProcessBlock(M, offset) {\n    const _M = M;\n\n    // Swap endian\n    for (let i = 0; i < 16; i += 1) {\n      // Shortcuts\n      const offset_i = offset + i;\n      const M_offset_i = M[offset_i];\n\n      _M[offset_i] = (\n        (((M_offset_i << 8) | (M_offset_i >>> 24)) & 0x00ff00ff)\n          | (((M_offset_i << 24) | (M_offset_i >>> 8)) & 0xff00ff00)\n      );\n    }\n\n    // Shortcuts\n    const H = this._hash.words;\n\n    const M_offset_0 = _M[offset + 0];\n    const M_offset_1 = _M[offset + 1];\n    const M_offset_2 = _M[offset + 2];\n    const M_offset_3 = _M[offset + 3];\n    const M_offset_4 = _M[offset + 4];\n    const M_offset_5 = _M[offset + 5];\n    const M_offset_6 = _M[offset + 6];\n    const M_offset_7 = _M[offset + 7];\n    const M_offset_8 = _M[offset + 8];\n    const M_offset_9 = _M[offset + 9];\n    const M_offset_10 = _M[offset + 10];\n    const M_offset_11 = _M[offset + 11];\n    const M_offset_12 = _M[offset + 12];\n    const M_offset_13 = _M[offset + 13];\n    const M_offset_14 = _M[offset + 14];\n    const M_offset_15 = _M[offset + 15];\n\n    // Working varialbes\n    let a = H[0];\n    let b = H[1];\n    let c = H[2];\n    let d = H[3];\n\n    // Computation\n    a = FF(a, b, c, d, M_offset_0, 7, T[0]);\n    d = FF(d, a, b, c, M_offset_1, 12, T[1]);\n    c = FF(c, d, a, b, M_offset_2, 17, T[2]);\n    b = FF(b, c, d, a, M_offset_3, 22, T[3]);\n    a = FF(a, b, c, d, M_offset_4, 7, T[4]);\n    d = FF(d, a, b, c, M_offset_5, 12, T[5]);\n    c = FF(c, d, a, b, M_offset_6, 17, T[6]);\n    b = FF(b, c, d, a, M_offset_7, 22, T[7]);\n    a = FF(a, b, c, d, M_offset_8, 7, T[8]);\n    d = FF(d, a, b, c, M_offset_9, 12, T[9]);\n    c = FF(c, d, a, b, M_offset_10, 17, T[10]);\n    b = FF(b, c, d, a, M_offset_11, 22, T[11]);\n    a = FF(a, b, c, d, M_offset_12, 7, T[12]);\n    d = FF(d, a, b, c, M_offset_13, 12, T[13]);\n    c = FF(c, d, a, b, M_offset_14, 17, T[14]);\n    b = FF(b, c, d, a, M_offset_15, 22, T[15]);\n\n    a = GG(a, b, c, d, M_offset_1, 5, T[16]);\n    d = GG(d, a, b, c, M_offset_6, 9, T[17]);\n    c = GG(c, d, a, b, M_offset_11, 14, T[18]);\n    b = GG(b, c, d, a, M_offset_0, 20, T[19]);\n    a = GG(a, b, c, d, M_offset_5, 5, T[20]);\n    d = GG(d, a, b, c, M_offset_10, 9, T[21]);\n    c = GG(c, d, a, b, M_offset_15, 14, T[22]);\n    b = GG(b, c, d, a, M_offset_4, 20, T[23]);\n    a = GG(a, b, c, d, M_offset_9, 5, T[24]);\n    d = GG(d, a, b, c, M_offset_14, 9, T[25]);\n    c = GG(c, d, a, b, M_offset_3, 14, T[26]);\n    b = GG(b, c, d, a, M_offset_8, 20, T[27]);\n    a = GG(a, b, c, d, M_offset_13, 5, T[28]);\n    d = GG(d, a, b, c, M_offset_2, 9, T[29]);\n    c = GG(c, d, a, b, M_offset_7, 14, T[30]);\n    b = GG(b, c, d, a, M_offset_12, 20, T[31]);\n\n    a = HH(a, b, c, d, M_offset_5, 4, T[32]);\n    d = HH(d, a, b, c, M_offset_8, 11, T[33]);\n    c = HH(c, d, a, b, M_offset_11, 16, T[34]);\n    b = HH(b, c, d, a, M_offset_14, 23, T[35]);\n    a = HH(a, b, c, d, M_offset_1, 4, T[36]);\n    d = HH(d, a, b, c, M_offset_4, 11, T[37]);\n    c = HH(c, d, a, b, M_offset_7, 16, T[38]);\n    b = HH(b, c, d, a, M_offset_10, 23, T[39]);\n    a = HH(a, b, c, d, M_offset_13, 4, T[40]);\n    d = HH(d, a, b, c, M_offset_0, 11, T[41]);\n    c = HH(c, d, a, b, M_offset_3, 16, T[42]);\n    b = HH(b, c, d, a, M_offset_6, 23, T[43]);\n    a = HH(a, b, c, d, M_offset_9, 4, T[44]);\n    d = HH(d, a, b, c, M_offset_12, 11, T[45]);\n    c = HH(c, d, a, b, M_offset_15, 16, T[46]);\n    b = HH(b, c, d, a, M_offset_2, 23, T[47]);\n\n    a = II(a, b, c, d, M_offset_0, 6, T[48]);\n    d = II(d, a, b, c, M_offset_7, 10, T[49]);\n    c = II(c, d, a, b, M_offset_14, 15, T[50]);\n    b = II(b, c, d, a, M_offset_5, 21, T[51]);\n    a = II(a, b, c, d, M_offset_12, 6, T[52]);\n    d = II(d, a, b, c, M_offset_3, 10, T[53]);\n    c = II(c, d, a, b, M_offset_10, 15, T[54]);\n    b = II(b, c, d, a, M_offset_1, 21, T[55]);\n    a = II(a, b, c, d, M_offset_8, 6, T[56]);\n    d = II(d, a, b, c, M_offset_15, 10, T[57]);\n    c = II(c, d, a, b, M_offset_6, 15, T[58]);\n    b = II(b, c, d, a, M_offset_13, 21, T[59]);\n    a = II(a, b, c, d, M_offset_4, 6, T[60]);\n    d = II(d, a, b, c, M_offset_11, 10, T[61]);\n    c = II(c, d, a, b, M_offset_2, 15, T[62]);\n    b = II(b, c, d, a, M_offset_9, 21, T[63]);\n\n    // Intermediate hash value\n    H[0] = (H[0] + a) | 0;\n    H[1] = (H[1] + b) | 0;\n    H[2] = (H[2] + c) | 0;\n    H[3] = (H[3] + d) | 0;\n  }\n  /* eslint-ensable no-param-reassign */\n\n  _doFinalize() {\n    // Shortcuts\n    const data = this._data;\n    const dataWords = data.words;\n\n    const nBitsTotal = this._nDataBytes * 8;\n    const nBitsLeft = data.sigBytes * 8;\n\n    // Add padding\n    dataWords[nBitsLeft >>> 5] |= 0x80 << (24 - (nBitsLeft % 32));\n\n    const nBitsTotalH = Math.floor(nBitsTotal / 0x100000000);\n    const nBitsTotalL = nBitsTotal;\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 15] = (\n      (((nBitsTotalH << 8) | (nBitsTotalH >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalH << 24) | (nBitsTotalH >>> 8)) & 0xff00ff00)\n    );\n    dataWords[(((nBitsLeft + 64) >>> 9) << 4) + 14] = (\n      (((nBitsTotalL << 8) | (nBitsTotalL >>> 24)) & 0x00ff00ff)\n        | (((nBitsTotalL << 24) | (nBitsTotalL >>> 8)) & 0xff00ff00)\n    );\n\n    data.sigBytes = (dataWords.length + 1) * 4;\n\n    // Hash final blocks\n    this._process();\n\n    // Shortcuts\n    const hash = this._hash;\n    const H = hash.words;\n\n    // Swap endian\n    for (let i = 0; i < 4; i += 1) {\n      // Shortcut\n      const H_i = H[i];\n\n      H[i] = (((H_i << 8) | (H_i >>> 24)) & 0x00ff00ff)\n        | (((H_i << 24) | (H_i >>> 8)) & 0xff00ff00);\n    }\n\n    // Return final computed hash\n    return hash;\n  }\n\n  clone() {\n    const clone = super.clone.call(this);\n    clone._hash = this._hash.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Shortcut function to the hasher's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n *\n * @return {WordArray} The hash.\n *\n * @static\n *\n * @example\n *\n *     var hash = CryptoJS.MD5('message');\n *     var hash = CryptoJS.MD5(wordArray);\n */\nexport const MD5 = Hasher._createHelper(MD5Algo);\n\n/**\n * Shortcut function to the HMAC's object interface.\n *\n * @param {WordArray|string} message The message to hash.\n * @param {WordArray|string} key The secret key.\n *\n * @return {WordArray} The HMAC.\n *\n * @static\n *\n * @example\n *\n *     var hmac = CryptoJS.HmacMD5(message, key);\n */\nexport const HmacMD5 = Hasher._createHmacHelper(MD5Algo);\n","import { MP4 } from './mp4'\nimport { concatUint8Array } from '../utils'\nimport { Logger } from './logger'\n\n/**\n * @typedef {Object} RemuxResult\n * @property {Uint8Array} [videoInitSegment]\n * @property {Uint8Array} [audioInitSegment]\n * @property {Uint8Array} [videoSegment]\n * @property {Uint8Array} [audioSegment]\n */\n\nexport class FMP4Remuxer {\n  /**\n   * @param {import('../model').VideoTrack} videoTrack\n   * @param {import('../model').AudioTrack} audioTrack\n   */\n  constructor (videoTrack, audioTrack, options) {\n    this.videoTrack = videoTrack\n    this.audioTrack = audioTrack\n    const browserVersions = /Chrome\\/([^.]+)/.exec(navigator.userAgent)\n    this.forceFirstIDR = browserVersions && Number(browserVersions[1]) < 50\n    this.log = new Logger('FMP4Remuxer', options && options.openLog ? !options.openLog : true)\n  }\n\n  /**\n   * @param {boolean} [createInit=false]\n   * @returns {RemuxResult}\n   */\n  remux (createInit = false, options = {}) {\n    const videoTrack = this.videoTrack\n    const audioTrack = this.audioTrack\n    const hasVideo = videoTrack.exist()\n    const hasAudio = audioTrack.exist()\n\n    let videoInitSegment\n    let audioInitSegment\n\n    let initSegment\n    const tracks = []\n\n    if (createInit) {\n      if (options && options.initMerge) {\n        if (hasVideo) {\n          tracks.push(this.videoTrack)\n        }\n        if (hasAudio) {\n          tracks.push(this.audioTrack)\n        }\n        initSegment = MP4.initSegment(tracks)\n      } else {\n        if (hasVideo) videoInitSegment = MP4.initSegment([this.videoTrack])\n        if (hasAudio) audioInitSegment = MP4.initSegment([this.audioTrack])\n      }\n    }\n\n    let videoSegment\n    let audioSegment\n    if (hasVideo && videoTrack.hasSample()) {\n      videoSegment = this._remuxVideo()\n    }\n\n    if (hasAudio && audioTrack.hasSample()) {\n      audioSegment = this._remuxAudio()\n    }\n\n    videoTrack.samples = []\n    audioTrack.samples = []\n\n    return {\n      initSegment,\n      videoInitSegment,\n      audioInitSegment,\n      videoSegment,\n      audioSegment\n    }\n  }\n\n  _remuxVideo () {\n    const track = this.videoTrack\n    if (this.forceFirstIDR) {\n      track.samples[0].flag = { dependsOn: 2, isNonSyncSample: 0 }\n    }\n    const samples = track.samples\n    const isAV01 = /av01/.test(track.codec)\n\n    let mdatSize = 0\n\n    if (isAV01) {\n      samples.forEach((s) => {\n        mdatSize += s.data.byteLength\n      })\n    } else {\n      samples.forEach((s) => {\n        mdatSize += s.units.reduce((t, c) => (t + c.byteLength), 0)\n        mdatSize += (s.units.length * 4)\n      })\n    }\n\n    const mdata = new Uint8Array(mdatSize)\n\n    // av1没有uints，直接写入data即可\n    // todo: H.265/H.264为什么要拼接nals/uints而不直接用data？\n    if (isAV01) {\n      for (let i = 0, l = samples.length, offset = 0, sample; i < l; i++) {\n        sample = samples[i]\n        mdata.set(sample.data, offset)\n        sample.size = sample.data.byteLength\n        offset += sample.size\n      }\n    } else {\n      const mdatView = new DataView(mdata.buffer)\n      for (let i = 0, l = samples.length, offset = 0, sample; i < l; i++) {\n        sample = samples[i]\n\n        let sampleSize = 0\n        sample.units.forEach((u) => {\n          mdatView.setUint32(offset, u.byteLength)\n          offset += 4\n          mdata.set(u, offset)\n          offset += u.byteLength\n          sampleSize += (4 + u.byteLength)\n        })\n        sample.size = sampleSize\n      }\n    }\n    const mdat = MP4.mdat(mdata)\n\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n\n  }\n\n  _remuxAudio () {\n    const track = this.audioTrack\n    const mdata = new Uint8Array(track.samples.reduce((t, c) => (t + c.size), 0))\n    track.samples.reduce((offset, s) => {\n      mdata.set(s.data, offset)\n      return offset + s.size\n    }, 0)\n    const mdat = MP4.mdat(mdata)\n    const moof = MP4.moof([track])\n    return concatUint8Array(moof, mdat)\n  }\n\n  reset () {\n    this.videoTrack.reset()\n    this.audioTrack.reset()\n  }\n}\n","/* eslint-disable no-use-before-define */\n\n/**\n * Base class for inheritance.\n */\nexport class Base {\n  /**\n   * Extends this object and runs the init method.\n   * Arguments to create() will be passed to init().\n   *\n   * @return {Object} The new object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var instance = MyType.create();\n   */\n  static create(...args) {\n    return new this(...args);\n  }\n\n  /**\n   * Copies properties into this object.\n   *\n   * @param {Object} properties The properties to mix in.\n   *\n   * @example\n   *\n   *     MyType.mixIn({\n   *         field: 'value'\n   *     });\n   */\n  mixIn(properties) {\n    return Object.assign(this, properties);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = instance.clone();\n   */\n  clone() {\n    const clone = new this.constructor();\n    Object.assign(clone, this);\n    return clone;\n  }\n}\n\n/**\n * An array of 32-bit words.\n *\n * @property {Array} words The array of 32-bit words.\n * @property {number} sigBytes The number of significant bytes in this word array.\n */\nexport class WordArray extends Base {\n  /**\n   * Initializes a newly created word array.\n   *\n   * @param {Array} words (Optional) An array of 32-bit words.\n   * @param {number} sigBytes (Optional) The number of significant bytes in the words.\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.create();\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607]);\n   *     var wordArray = CryptoJS.lib.WordArray.create([0x00010203, 0x04050607], 6);\n   */\n  constructor(words = [], sigBytes = words.length * 4) {\n    super();\n\n    let typedArray = words;\n    // Convert buffers to uint8\n    if (typedArray instanceof ArrayBuffer) {\n      typedArray = new Uint8Array(typedArray);\n    }\n\n    // Convert other array views to uint8\n    if (\n      typedArray instanceof Int8Array\n      || typedArray instanceof Uint8ClampedArray\n      || typedArray instanceof Int16Array\n      || typedArray instanceof Uint16Array\n      || typedArray instanceof Int32Array\n      || typedArray instanceof Uint32Array\n      || typedArray instanceof Float32Array\n      || typedArray instanceof Float64Array\n    ) {\n      typedArray = new Uint8Array(typedArray.buffer, typedArray.byteOffset, typedArray.byteLength);\n    }\n\n    // Handle Uint8Array\n    if (typedArray instanceof Uint8Array) {\n      // Shortcut\n      const typedArrayByteLength = typedArray.byteLength;\n\n      // Extract bytes\n      const _words = [];\n      for (let i = 0; i < typedArrayByteLength; i += 1) {\n        _words[i >>> 2] |= typedArray[i] << (24 - (i % 4) * 8);\n      }\n\n      // Initialize this word array\n      this.words = _words;\n      this.sigBytes = typedArrayByteLength;\n    } else {\n      // Else call normal init\n      this.words = words;\n      this.sigBytes = sigBytes;\n    }\n  }\n\n  /**\n   * Creates a word array filled with random bytes.\n   *\n   * @param {number} nBytes The number of random bytes to generate.\n   *\n   * @return {WordArray} The random word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.lib.WordArray.random(16);\n   */\n  static random(nBytes) {\n    const words = [];\n\n    const r = (m_w) => {\n      let _m_w = m_w;\n      let _m_z = 0x3ade68b1;\n      const mask = 0xffffffff;\n\n      return () => {\n        _m_z = (0x9069 * (_m_z & 0xFFFF) + (_m_z >> 0x10)) & mask;\n        _m_w = (0x4650 * (_m_w & 0xFFFF) + (_m_w >> 0x10)) & mask;\n        let result = ((_m_z << 0x10) + _m_w) & mask;\n        result /= 0x100000000;\n        result += 0.5;\n        return result * (Math.random() > 0.5 ? 1 : -1);\n      };\n    };\n\n    for (let i = 0, rcache; i < nBytes; i += 4) {\n      const _r = r((rcache || Math.random()) * 0x100000000);\n\n      rcache = _r() * 0x3ade67b7;\n      words.push((_r() * 0x100000000) | 0);\n    }\n\n    return new WordArray(words, nBytes);\n  }\n\n  /**\n   * Converts this word array to a string.\n   *\n   * @param {Encoder} encoder (Optional) The encoding strategy to use. Default: CryptoJS.enc.Hex\n   *\n   * @return {string} The stringified word array.\n   *\n   * @example\n   *\n   *     var string = wordArray + '';\n   *     var string = wordArray.toString();\n   *     var string = wordArray.toString(CryptoJS.enc.Utf8);\n   */\n  toString(encoder = Hex) {\n    return encoder.stringify(this);\n  }\n\n  /**\n   * Concatenates a word array to this word array.\n   *\n   * @param {WordArray} wordArray The word array to append.\n   *\n   * @return {WordArray} This word array.\n   *\n   * @example\n   *\n   *     wordArray1.concat(wordArray2);\n   */\n  concat(wordArray) {\n    // Shortcuts\n    const thisWords = this.words;\n    const thatWords = wordArray.words;\n    const thisSigBytes = this.sigBytes;\n    const thatSigBytes = wordArray.sigBytes;\n\n    // Clamp excess bits\n    this.clamp();\n\n    // Concat\n    if (thisSigBytes % 4) {\n      // Copy one byte at a time\n      for (let i = 0; i < thatSigBytes; i += 1) {\n        const thatByte = (thatWords[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n        thisWords[(thisSigBytes + i) >>> 2] |= thatByte << (24 - ((thisSigBytes + i) % 4) * 8);\n      }\n    } else {\n      // Copy one word at a time\n      for (let i = 0; i < thatSigBytes; i += 4) {\n        thisWords[(thisSigBytes + i) >>> 2] = thatWords[i >>> 2];\n      }\n    }\n    this.sigBytes += thatSigBytes;\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Removes insignificant bits.\n   *\n   * @example\n   *\n   *     wordArray.clamp();\n   */\n  clamp() {\n    // Shortcuts\n    const { words, sigBytes } = this;\n\n    // Clamp\n    words[sigBytes >>> 2] &= 0xffffffff << (32 - (sigBytes % 4) * 8);\n    words.length = Math.ceil(sigBytes / 4);\n  }\n\n  /**\n   * Creates a copy of this word array.\n   *\n   * @return {WordArray} The clone.\n   *\n   * @example\n   *\n   *     var clone = wordArray.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone.words = this.words.slice(0);\n\n    return clone;\n  }\n}\n\n/**\n * Hex encoding strategy.\n */\nexport const Hex = {\n  /**\n   * Converts a word array to a hex string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The hex string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var hexString = CryptoJS.enc.Hex.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const hexChars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      hexChars.push((bite >>> 4).toString(16));\n      hexChars.push((bite & 0x0f).toString(16));\n    }\n\n    return hexChars.join('');\n  },\n\n  /**\n   * Converts a hex string to a word array.\n   *\n   * @param {string} hexStr The hex string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Hex.parse(hexString);\n   */\n  parse(hexStr) {\n    // Shortcut\n    const hexStrLength = hexStr.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < hexStrLength; i += 2) {\n      words[i >>> 3] |= parseInt(hexStr.substr(i, 2), 16) << (24 - (i % 8) * 4);\n    }\n\n    return new WordArray(words, hexStrLength / 2);\n  },\n};\n\n/**\n * Latin1 encoding strategy.\n */\nexport const Latin1 = {\n  /**\n   * Converts a word array to a Latin1 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Latin1 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var latin1String = CryptoJS.enc.Latin1.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n\n    // Convert\n    const latin1Chars = [];\n    for (let i = 0; i < sigBytes; i += 1) {\n      const bite = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      latin1Chars.push(String.fromCharCode(bite));\n    }\n\n    return latin1Chars.join('');\n  },\n\n  /**\n   * Converts a Latin1 string to a word array.\n   *\n   * @param {string} latin1Str The Latin1 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Latin1.parse(latin1String);\n   */\n  parse(latin1Str) {\n    // Shortcut\n    const latin1StrLength = latin1Str.length;\n\n    // Convert\n    const words = [];\n    for (let i = 0; i < latin1StrLength; i += 1) {\n      words[i >>> 2] |= (latin1Str.charCodeAt(i) & 0xff) << (24 - (i % 4) * 8);\n    }\n\n    return new WordArray(words, latin1StrLength);\n  },\n};\n\n/**\n * UTF-8 encoding strategy.\n */\nexport const Utf8 = {\n  /**\n   * Converts a word array to a UTF-8 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The UTF-8 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var utf8String = CryptoJS.enc.Utf8.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    try {\n      return decodeURIComponent(escape(Latin1.stringify(wordArray)));\n    } catch (e) {\n      throw new Error('Malformed UTF-8 data');\n    }\n  },\n\n  /**\n   * Converts a UTF-8 string to a word array.\n   *\n   * @param {string} utf8Str The UTF-8 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var wordArray = CryptoJS.enc.Utf8.parse(utf8String);\n   */\n  parse(utf8Str) {\n    return Latin1.parse(unescape(encodeURIComponent(utf8Str)));\n  },\n};\n\n/**\n * Abstract buffered block algorithm template.\n *\n * The property blockSize must be implemented in a concrete subtype.\n *\n * @property {number} _minBufferSize\n *\n *     The number of blocks that should be kept unprocessed in the buffer. Default: 0\n */\nexport class BufferedBlockAlgorithm extends Base {\n  constructor() {\n    super();\n    this._minBufferSize = 0;\n  }\n\n  /**\n   * Resets this block algorithm's data buffer to its initial state.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm.reset();\n   */\n  reset() {\n    // Initial values\n    this._data = new WordArray();\n    this._nDataBytes = 0;\n  }\n\n  /**\n   * Adds new data to this block algorithm's buffer.\n   *\n   * @param {WordArray|string} data\n   *\n   *     The data to append. Strings are converted to a WordArray using UTF-8.\n   *\n   * @example\n   *\n   *     bufferedBlockAlgorithm._append('data');\n   *     bufferedBlockAlgorithm._append(wordArray);\n   */\n  _append(data) {\n    let m_data = data;\n\n    // Convert string to WordArray, else assume WordArray already\n    if (typeof m_data === 'string') {\n      m_data = Utf8.parse(m_data);\n    }\n\n    // Append\n    this._data.concat(m_data);\n    this._nDataBytes += m_data.sigBytes;\n  }\n\n  /**\n   * Processes available data blocks.\n   *\n   * This method invokes _doProcessBlock(offset), which must be implemented by a concrete subtype.\n   *\n   * @param {boolean} doFlush Whether all blocks and partial blocks should be processed.\n   *\n   * @return {WordArray} The processed data.\n   *\n   * @example\n   *\n   *     var processedData = bufferedBlockAlgorithm._process();\n   *     var processedData = bufferedBlockAlgorithm._process(!!'flush');\n   */\n  _process(doFlush) {\n    let processedWords;\n\n    // Shortcuts\n    const { _data: data, blockSize } = this;\n    const dataWords = data.words;\n    const dataSigBytes = data.sigBytes;\n    const blockSizeBytes = blockSize * 4;\n\n    // Count blocks ready\n    let nBlocksReady = dataSigBytes / blockSizeBytes;\n    if (doFlush) {\n      // Round up to include partial blocks\n      nBlocksReady = Math.ceil(nBlocksReady);\n    } else {\n      // Round down to include only full blocks,\n      // less the number of blocks that must remain in the buffer\n      nBlocksReady = Math.max((nBlocksReady | 0) - this._minBufferSize, 0);\n    }\n\n    // Count words ready\n    const nWordsReady = nBlocksReady * blockSize;\n\n    // Count bytes ready\n    const nBytesReady = Math.min(nWordsReady * 4, dataSigBytes);\n\n    // Process blocks\n    if (nWordsReady) {\n      for (let offset = 0; offset < nWordsReady; offset += blockSize) {\n        // Perform concrete-algorithm logic\n        this._doProcessBlock(dataWords, offset);\n      }\n\n      // Remove processed words\n      processedWords = dataWords.splice(0, nWordsReady);\n      data.sigBytes -= nBytesReady;\n    }\n\n    // Return processed words\n    return new WordArray(processedWords, nBytesReady);\n  }\n\n  /**\n   * Creates a copy of this object.\n   *\n   * @return {Object} The clone.\n   *\n   * @example\n   *\n   *     var clone = bufferedBlockAlgorithm.clone();\n   */\n  clone() {\n    const clone = super.clone.call(this);\n    clone._data = this._data.clone();\n\n    return clone;\n  }\n}\n\n/**\n * Abstract hasher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this hasher operates on. Default: 16 (512 bits)\n */\nexport class Hasher extends BufferedBlockAlgorithm {\n  constructor(cfg) {\n    super();\n\n    this.blockSize = 512 / 32;\n\n    /**\n     * Configuration options.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates a shortcut function to a hasher's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to create a helper for.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var SHA256 = CryptoJS.lib.Hasher._createHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHelper(SubHasher) {\n    return (message, cfg) => new SubHasher(cfg).finalize(message);\n  }\n\n  /**\n   * Creates a shortcut function to the HMAC's object interface.\n   *\n   * @param {Hasher} SubHasher The hasher to use in this HMAC helper.\n   *\n   * @return {Function} The shortcut function.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var HmacSHA256 = CryptoJS.lib.Hasher._createHmacHelper(CryptoJS.algo.SHA256);\n   */\n  static _createHmacHelper(SubHasher) {\n    return (message, key) => new HMAC(SubHasher, key).finalize(message);\n  }\n\n  /**\n   * Resets this hasher to its initial state.\n   *\n   * @example\n   *\n   *     hasher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-hasher logic\n    this._doReset();\n  }\n\n  /**\n   * Updates this hasher with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {Hasher} This hasher.\n   *\n   * @example\n   *\n   *     hasher.update('message');\n   *     hasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    // Append\n    this._append(messageUpdate);\n\n    // Update the hash\n    this._process();\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the hash computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The hash.\n   *\n   * @example\n   *\n   *     var hash = hasher.finalize();\n   *     var hash = hasher.finalize('message');\n   *     var hash = hasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Final message update\n    if (messageUpdate) {\n      this._append(messageUpdate);\n    }\n\n    // Perform concrete-hasher logic\n    const hash = this._doFinalize();\n\n    return hash;\n  }\n}\n\n/**\n * HMAC algorithm.\n */\nexport class HMAC extends Base {\n  /**\n   * Initializes a newly created HMAC.\n   *\n   * @param {Hasher} SubHasher The hash algorithm to use.\n   * @param {WordArray|string} key The secret key.\n   *\n   * @example\n   *\n   *     var hmacHasher = CryptoJS.algo.HMAC.create(CryptoJS.algo.SHA256, key);\n   */\n  constructor(SubHasher, key) {\n    super();\n\n    const hasher = new SubHasher();\n    this._hasher = hasher;\n\n    // Convert string to WordArray, else assume WordArray already\n    let _key = key;\n    if (typeof _key === 'string') {\n      _key = Utf8.parse(_key);\n    }\n\n    // Shortcuts\n    const hasherBlockSize = hasher.blockSize;\n    const hasherBlockSizeBytes = hasherBlockSize * 4;\n\n    // Allow arbitrary length keys\n    if (_key.sigBytes > hasherBlockSizeBytes) {\n      _key = hasher.finalize(key);\n    }\n\n    // Clamp excess bits\n    _key.clamp();\n\n    // Clone key for inner and outer pads\n    const oKey = _key.clone();\n    this._oKey = oKey;\n    const iKey = _key.clone();\n    this._iKey = iKey;\n\n    // Shortcuts\n    const oKeyWords = oKey.words;\n    const iKeyWords = iKey.words;\n\n    // XOR keys with pad constants\n    for (let i = 0; i < hasherBlockSize; i += 1) {\n      oKeyWords[i] ^= 0x5c5c5c5c;\n      iKeyWords[i] ^= 0x36363636;\n    }\n    oKey.sigBytes = hasherBlockSizeBytes;\n    iKey.sigBytes = hasherBlockSizeBytes;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Resets this HMAC to its initial state.\n   *\n   * @example\n   *\n   *     hmacHasher.reset();\n   */\n  reset() {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Reset\n    hasher.reset();\n    hasher.update(this._iKey);\n  }\n\n  /**\n   * Updates this HMAC with a message.\n   *\n   * @param {WordArray|string} messageUpdate The message to append.\n   *\n   * @return {HMAC} This HMAC instance.\n   *\n   * @example\n   *\n   *     hmacHasher.update('message');\n   *     hmacHasher.update(wordArray);\n   */\n  update(messageUpdate) {\n    this._hasher.update(messageUpdate);\n\n    // Chainable\n    return this;\n  }\n\n  /**\n   * Finalizes the HMAC computation.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} messageUpdate (Optional) A final message update.\n   *\n   * @return {WordArray} The HMAC.\n   *\n   * @example\n   *\n   *     var hmac = hmacHasher.finalize();\n   *     var hmac = hmacHasher.finalize('message');\n   *     var hmac = hmacHasher.finalize(wordArray);\n   */\n  finalize(messageUpdate) {\n    // Shortcut\n    const hasher = this._hasher;\n\n    // Compute HMAC\n    const innerHash = hasher.finalize(messageUpdate);\n    hasher.reset();\n    const hmac = hasher.finalize(this._oKey.clone().concat(innerHash));\n\n    return hmac;\n  }\n}\n","import {\n  WordArray,\n} from './core.js';\n\nconst parseLoop = (base64Str, base64StrLength, reverseMap) => {\n  const words = [];\n  let nBytes = 0;\n  for (let i = 0; i < base64StrLength; i += 1) {\n    if (i % 4) {\n      const bits1 = reverseMap[base64Str.charCodeAt(i - 1)] << ((i % 4) * 2);\n      const bits2 = reverseMap[base64Str.charCodeAt(i)] >>> (6 - (i % 4) * 2);\n      const bitsCombined = bits1 | bits2;\n      words[nBytes >>> 2] |= bitsCombined << (24 - (nBytes % 4) * 8);\n      nBytes += 1;\n    }\n  }\n  return WordArray.create(words, nBytes);\n};\n\n/**\n * Base64 encoding strategy.\n */\nexport const Base64 = {\n  /**\n   * Converts a word array to a Base64 string.\n   *\n   * @param {WordArray} wordArray The word array.\n   *\n   * @return {string} The Base64 string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const base64String = CryptoJS.enc.Base64.stringify(wordArray);\n   */\n  stringify(wordArray) {\n    // Shortcuts\n    const { words, sigBytes } = wordArray;\n    const map = this._map;\n\n    // Clamp excess bits\n    wordArray.clamp();\n\n    // Convert\n    const base64Chars = [];\n    for (let i = 0; i < sigBytes; i += 3) {\n      const byte1 = (words[i >>> 2] >>> (24 - (i % 4) * 8)) & 0xff;\n      const byte2 = (words[(i + 1) >>> 2] >>> (24 - ((i + 1) % 4) * 8)) & 0xff;\n      const byte3 = (words[(i + 2) >>> 2] >>> (24 - ((i + 2) % 4) * 8)) & 0xff;\n\n      const triplet = (byte1 << 16) | (byte2 << 8) | byte3;\n\n      for (let j = 0; (j < 4) && (i + j * 0.75 < sigBytes); j += 1) {\n        base64Chars.push(map.charAt((triplet >>> (6 * (3 - j))) & 0x3f));\n      }\n    }\n\n    // Add padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      while (base64Chars.length % 4) {\n        base64Chars.push(paddingChar);\n      }\n    }\n\n    return base64Chars.join('');\n  },\n\n  /**\n   * Converts a Base64 string to a word array.\n   *\n   * @param {string} base64Str The Base64 string.\n   *\n   * @return {WordArray} The word array.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const wordArray = CryptoJS.enc.Base64.parse(base64String);\n   */\n  parse(base64Str) {\n    // Shortcuts\n    let base64StrLength = base64Str.length;\n    const map = this._map;\n    let reverseMap = this._reverseMap;\n\n    if (!reverseMap) {\n      this._reverseMap = [];\n      reverseMap = this._reverseMap;\n      for (let j = 0; j < map.length; j += 1) {\n        reverseMap[map.charCodeAt(j)] = j;\n      }\n    }\n\n    // Ignore padding\n    const paddingChar = map.charAt(64);\n    if (paddingChar) {\n      const paddingIndex = base64Str.indexOf(paddingChar);\n      if (paddingIndex !== -1) {\n        base64StrLength = paddingIndex;\n      }\n    }\n\n    // Convert\n    return parseLoop(base64Str, base64StrLength, reverseMap);\n  },\n\n  _map: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n};\n","import {\n  Base,\n  WordArray,\n} from './core.js';\nimport { MD5Algo } from './md5.js';\n\n/**\n * This key derivation function is meant to conform with EVP_BytesToKey.\n * www.openssl.org/docs/crypto/EVP_BytesToKey.html\n */\nexport class EvpKDFAlgo extends Base {\n  /**\n   * Initializes a newly created key derivation function.\n   *\n   * @param {Object} cfg (Optional) The configuration options to use for the derivation.\n   *\n   * @example\n   *\n   *     const kdf = CryptoJS.algo.EvpKDF.create();\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8 });\n   *     const kdf = CryptoJS.algo.EvpKDF.create({ keySize: 8, iterations: 1000 });\n   */\n  constructor(cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {number} keySize The key size in words to generate. Default: 4 (128 bits)\n     * @property {Hasher} hasher The hash algorithm to use. Default: MD5\n     * @property {number} iterations The number of iterations to perform. Default: 1\n     */\n    this.cfg = Object.assign(\n      new Base(),\n      {\n        keySize: 128 / 32,\n        hasher: MD5Algo,\n        iterations: 1,\n      },\n      cfg,\n    );\n  }\n\n  /**\n   * Derives a key from a password.\n   *\n   * @param {WordArray|string} password The password.\n   * @param {WordArray|string} salt A salt.\n   *\n   * @return {WordArray} The derived key.\n   *\n   * @example\n   *\n   *     const key = kdf.compute(password, salt);\n   */\n  compute(password, salt) {\n    let block;\n\n    // Shortcut\n    const { cfg } = this;\n\n    // Init hasher\n    const hasher = cfg.hasher.create();\n\n    // Initial values\n    const derivedKey = WordArray.create();\n\n    // Shortcuts\n    const derivedKeyWords = derivedKey.words;\n    const { keySize, iterations } = cfg;\n\n    // Generate key\n    while (derivedKeyWords.length < keySize) {\n      if (block) {\n        hasher.update(block);\n      }\n      block = hasher.update(password).finalize(salt);\n      hasher.reset();\n\n      // Iterations\n      for (let i = 1; i < iterations; i += 1) {\n        block = hasher.finalize(block);\n        hasher.reset();\n      }\n\n      derivedKey.concat(block);\n    }\n    derivedKey.sigBytes = keySize * 4;\n\n    return derivedKey;\n  }\n}\n\n/**\n * Derives a key from a password.\n *\n * @param {WordArray|string} password The password.\n * @param {WordArray|string} salt A salt.\n * @param {Object} cfg (Optional) The configuration options to use for this computation.\n *\n * @return {WordArray} The derived key.\n *\n * @static\n *\n * @example\n *\n *     var key = CryptoJS.EvpKDF(password, salt);\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8 });\n *     var key = CryptoJS.EvpKDF(password, salt, { keySize: 8, iterations: 1000 });\n */\nexport const EvpKDF = (password, salt, cfg) => EvpKDFAlgo.create(cfg).compute(password, salt);\n","/* eslint-disable no-use-before-define */\n\nimport {\n  Base,\n  WordArray,\n  BufferedBlockAlgorithm,\n} from './core.js';\nimport { Base64 } from './enc-base64.js';\nimport { EvpKDFAlgo } from './evpkdf.js';\n\n/**\n * Abstract base cipher template.\n *\n * @property {number} keySize This cipher's key size. Default: 4 (128 bits)\n * @property {number} ivSize This cipher's IV size. Default: 4 (128 bits)\n * @property {number} _ENC_XFORM_MODE A constant representing encryption mode.\n * @property {number} _DEC_XFORM_MODE A constant representing decryption mode.\n */\nexport class Cipher extends BufferedBlockAlgorithm {\n  /**\n   * Initializes a newly created cipher.\n   *\n   * @param {number} xformMode Either the encryption or decryption transormation mode constant.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.create(\n   *       CryptoJS.algo.AES._ENC_XFORM_MODE, keyWordArray, { iv: ivWordArray }\n   *     );\n   */\n  constructor(xformMode, key, cfg) {\n    super();\n\n    /**\n     * Configuration options.\n     *\n     * @property {WordArray} iv The IV to use for this operation.\n     */\n    this.cfg = Object.assign(new Base(), cfg);\n\n    // Store transform mode and key\n    this._xformMode = xformMode;\n    this._key = key;\n\n    // Set initial values\n    this.reset();\n  }\n\n  /**\n   * Creates this cipher in encryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createEncryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createEncryptor(key, cfg) {\n    return this.create(this._ENC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates this cipher in decryption mode.\n   *\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {Cipher} A cipher instance.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const cipher = CryptoJS.algo.AES.createDecryptor(keyWordArray, { iv: ivWordArray });\n   */\n  static createDecryptor(key, cfg) {\n    return this.create(this._DEC_XFORM_MODE, key, cfg);\n  }\n\n  /**\n   * Creates shortcut functions to a cipher's object interface.\n   *\n   * @param {Cipher} cipher The cipher to create a helper for.\n   *\n   * @return {Object} An object with encrypt and decrypt shortcut functions.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const AES = CryptoJS.lib.Cipher._createHelper(CryptoJS.algo.AES);\n   */\n  static _createHelper(SubCipher) {\n    const selectCipherStrategy = (key) => {\n      if (typeof key === 'string') {\n        return PasswordBasedCipher;\n      }\n      return SerializableCipher;\n    };\n\n    return {\n      encrypt(message, key, cfg) {\n        return selectCipherStrategy(key).encrypt(SubCipher, message, key, cfg);\n      },\n\n      decrypt(ciphertext, key, cfg) {\n        return selectCipherStrategy(key).decrypt(SubCipher, ciphertext, key, cfg);\n      },\n    };\n  }\n\n  /**\n   * Resets this cipher to its initial state.\n   *\n   * @example\n   *\n   *     cipher.reset();\n   */\n  reset() {\n    // Reset data buffer\n    super.reset.call(this);\n\n    // Perform concrete-cipher logic\n    this._doReset();\n  }\n\n  /**\n   * Adds data to be encrypted or decrypted.\n   *\n   * @param {WordArray|string} dataUpdate The data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.process('data');\n   *     const encrypted = cipher.process(wordArray);\n   */\n  process(dataUpdate) {\n    // Append\n    this._append(dataUpdate);\n\n    // Process available blocks\n    return this._process();\n  }\n\n  /**\n   * Finalizes the encryption or decryption process.\n   * Note that the finalize operation is effectively a destructive, read-once operation.\n   *\n   * @param {WordArray|string} dataUpdate The final data to encrypt or decrypt.\n   *\n   * @return {WordArray} The data after final processing.\n   *\n   * @example\n   *\n   *     const encrypted = cipher.finalize();\n   *     const encrypted = cipher.finalize('data');\n   *     const encrypted = cipher.finalize(wordArray);\n   */\n  finalize(dataUpdate) {\n    // Final data update\n    if (dataUpdate) {\n      this._append(dataUpdate);\n    }\n\n    // Perform concrete-cipher logic\n    const finalProcessedData = this._doFinalize();\n\n    return finalProcessedData;\n  }\n}\nCipher._ENC_XFORM_MODE = 1;\nCipher._DEC_XFORM_MODE = 2;\nCipher.keySize = 128 / 32;\nCipher.ivSize = 128 / 32;\n\n/**\n * Abstract base stream cipher template.\n *\n * @property {number} blockSize\n *\n *     The number of 32-bit words this cipher operates on. Default: 1 (32 bits)\n */\nexport class StreamCipher extends Cipher {\n  constructor(...args) {\n    super(...args);\n\n    this.blockSize = 1;\n  }\n\n  _doFinalize() {\n    // Process partial blocks\n    const finalProcessedBlocks = this._process(!!'flush');\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * Abstract base block cipher mode template.\n */\nexport class BlockCipherMode extends Base {\n  /**\n   * Initializes a newly created mode.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.Encryptor.create(cipher, iv.words);\n   */\n  constructor(cipher, iv) {\n    super();\n\n    this._cipher = cipher;\n    this._iv = iv;\n  }\n\n  /**\n   * Creates this mode for encryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createEncryptor(cipher, iv.words);\n   */\n  static createEncryptor(cipher, iv) {\n    return this.Encryptor.create(cipher, iv);\n  }\n\n  /**\n   * Creates this mode for decryption.\n   *\n   * @param {Cipher} cipher A block cipher instance.\n   * @param {Array} iv The IV words.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     const mode = CryptoJS.mode.CBC.createDecryptor(cipher, iv.words);\n   */\n  static createDecryptor(cipher, iv) {\n    return this.Decryptor.create(cipher, iv);\n  }\n}\n\nfunction xorBlock(words, offset, blockSize) {\n  const _words = words;\n  let block;\n\n  // Shortcut\n  const iv = this._iv;\n\n  // Choose mixing block\n  if (iv) {\n    block = iv;\n\n    // Remove IV for subsequent blocks\n    this._iv = undefined;\n  } else {\n    block = this._prevBlock;\n  }\n\n  // XOR blocks\n  for (let i = 0; i < blockSize; i += 1) {\n    _words[offset + i] ^= block[i];\n  }\n}\n\n/**\n * Cipher Block Chaining mode.\n */\n\n/**\n * Abstract base CBC mode.\n */\nexport class CBC extends BlockCipherMode {\n}\n/**\n * CBC encryptor.\n */\nCBC.Encryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // XOR and encrypt\n    xorBlock.call(this, words, offset, blockSize);\n    cipher.encryptBlock(words, offset);\n\n    // Remember this block to use with next block\n    this._prevBlock = words.slice(offset, offset + blockSize);\n  }\n};\n/**\n * CBC decryptor.\n */\nCBC.Decryptor = class extends CBC {\n  /**\n   * Processes the data block at offset.\n   *\n   * @param {Array} words The data words to operate on.\n   * @param {number} offset The offset where the block starts.\n   *\n   * @example\n   *\n   *     mode.processBlock(data.words, offset);\n   */\n  processBlock(words, offset) {\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n\n    // Remember this block to use with next block\n    const thisBlock = words.slice(offset, offset + blockSize);\n\n    // Decrypt and XOR\n    cipher.decryptBlock(words, offset);\n    xorBlock.call(this, words, offset, blockSize);\n\n    // This block becomes the previous block\n    this._prevBlock = thisBlock;\n  }\n};\n\n/**\n * PKCS #5/7 padding strategy.\n */\nexport const Pkcs7 = {\n  /**\n   * Pads data using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to pad.\n   * @param {number} blockSize The multiple that the data should be padded to.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.pad(wordArray, 4);\n   */\n  pad(data, blockSize) {\n    // Shortcut\n    const blockSizeBytes = blockSize * 4;\n\n    // Count padding bytes\n    const nPaddingBytes = blockSizeBytes - (data.sigBytes % blockSizeBytes);\n\n    // Create padding word\n    const paddingWord = (nPaddingBytes << 24)\n      | (nPaddingBytes << 16)\n      | (nPaddingBytes << 8)\n      | nPaddingBytes;\n\n    // Create padding\n    const paddingWords = [];\n    for (let i = 0; i < nPaddingBytes; i += 4) {\n      paddingWords.push(paddingWord);\n    }\n    const padding = WordArray.create(paddingWords, nPaddingBytes);\n\n    // Add padding\n    data.concat(padding);\n  },\n\n  /**\n   * Unpads data that had been padded using the algorithm defined in PKCS #5/7.\n   *\n   * @param {WordArray} data The data to unpad.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     CryptoJS.pad.Pkcs7.unpad(wordArray);\n   */\n  unpad(data) {\n    const _data = data;\n\n    // Get number of padding bytes from last byte\n    const nPaddingBytes = _data.words[(_data.sigBytes - 1) >>> 2] & 0xff;\n\n    // Remove padding\n    _data.sigBytes -= nPaddingBytes;\n  },\n};\n\n/**\n * Abstract base block cipher template.\n *\n * @property {number} blockSize\n *\n *    The number of 32-bit words this cipher operates on. Default: 4 (128 bits)\n */\nexport class BlockCipher extends Cipher {\n  constructor(xformMode, key, cfg) {\n    /**\n     * Configuration options.\n     *\n     * @property {Mode} mode The block mode to use. Default: CBC\n     * @property {Padding} padding The padding strategy to use. Default: Pkcs7\n     */\n    super(xformMode, key, Object.assign(\n      {\n        mode: CBC,\n        padding: Pkcs7,\n      },\n      cfg,\n    ));\n\n    this.blockSize = 128 / 32;\n  }\n\n  reset() {\n    let modeCreator;\n\n    // Reset cipher\n    super.reset.call(this);\n\n    // Shortcuts\n    const { cfg } = this;\n    const { iv, mode } = cfg;\n\n    // Reset block mode\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      modeCreator = mode.createEncryptor;\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      modeCreator = mode.createDecryptor;\n      // Keep at least one block in the buffer for unpadding\n      this._minBufferSize = 1;\n    }\n\n    this._mode = modeCreator.call(mode, this, iv && iv.words);\n    this._mode.__creator = modeCreator;\n  }\n\n  _doProcessBlock(words, offset) {\n    this._mode.processBlock(words, offset);\n  }\n\n  _doFinalize() {\n    let finalProcessedBlocks;\n\n    // Shortcut\n    const { padding } = this.cfg;\n\n    // Finalize\n    if (this._xformMode === this.constructor._ENC_XFORM_MODE) {\n      // Pad data\n      padding.pad(this._data, this.blockSize);\n\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n    } else /* if (this._xformMode == this._DEC_XFORM_MODE) */ {\n      // Process final blocks\n      finalProcessedBlocks = this._process(!!'flush');\n\n      // Unpad data\n      padding.unpad(finalProcessedBlocks);\n    }\n\n    return finalProcessedBlocks;\n  }\n}\n\n/**\n * A collection of cipher parameters.\n *\n * @property {WordArray} ciphertext The raw ciphertext.\n * @property {WordArray} key The key to this ciphertext.\n * @property {WordArray} iv The IV used in the ciphering operation.\n * @property {WordArray} salt The salt used with a key derivation function.\n * @property {Cipher} algorithm The cipher algorithm.\n * @property {Mode} mode The block mode used in the ciphering operation.\n * @property {Padding} padding The padding scheme used in the ciphering operation.\n * @property {number} blockSize The block size of the cipher.\n * @property {Format} formatter\n *    The default formatting strategy to convert this cipher params object to a string.\n */\nexport class CipherParams extends Base {\n  /**\n   * Initializes a newly created cipher params object.\n   *\n   * @param {Object} cipherParams An object with any of the possible cipher parameters.\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.lib.CipherParams.create({\n   *         ciphertext: ciphertextWordArray,\n   *         key: keyWordArray,\n   *         iv: ivWordArray,\n   *         salt: saltWordArray,\n   *         algorithm: CryptoJS.algo.AES,\n   *         mode: CryptoJS.mode.CBC,\n   *         padding: CryptoJS.pad.PKCS7,\n   *         blockSize: 4,\n   *         formatter: CryptoJS.format.OpenSSL\n   *     });\n   */\n  constructor(cipherParams) {\n    super();\n\n    this.mixIn(cipherParams);\n  }\n\n  /**\n   * Converts this cipher params object to a string.\n   *\n   * @param {Format} formatter (Optional) The formatting strategy to use.\n   *\n   * @return {string} The stringified cipher params.\n   *\n   * @throws Error If neither the formatter nor the default formatter is set.\n   *\n   * @example\n   *\n   *     var string = cipherParams + '';\n   *     var string = cipherParams.toString();\n   *     var string = cipherParams.toString(CryptoJS.format.OpenSSL);\n   */\n  toString(formatter) {\n    return (formatter || this.formatter).stringify(this);\n  }\n}\n\n/**\n * OpenSSL formatting strategy.\n */\nexport const OpenSSLFormatter = {\n  /**\n   * Converts a cipher params object to an OpenSSL-compatible string.\n   *\n   * @param {CipherParams} cipherParams The cipher params object.\n   *\n   * @return {string} The OpenSSL-compatible string.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var openSSLString = CryptoJS.format.OpenSSL.stringify(cipherParams);\n   */\n  stringify(cipherParams) {\n    let wordArray;\n\n    // Shortcuts\n    const { ciphertext, salt } = cipherParams;\n\n    // Format\n    if (salt) {\n      wordArray = WordArray.create([0x53616c74, 0x65645f5f]).concat(salt).concat(ciphertext);\n    } else {\n      wordArray = ciphertext;\n    }\n\n    return wordArray.toString(Base64);\n  },\n\n  /**\n   * Converts an OpenSSL-compatible string to a cipher params object.\n   *\n   * @param {string} openSSLStr The OpenSSL-compatible string.\n   *\n   * @return {CipherParams} The cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var cipherParams = CryptoJS.format.OpenSSL.parse(openSSLString);\n   */\n  parse(openSSLStr) {\n    let salt;\n\n    // Parse base64\n    const ciphertext = Base64.parse(openSSLStr);\n\n    // Shortcut\n    const ciphertextWords = ciphertext.words;\n\n    // Test for salt\n    if (ciphertextWords[0] === 0x53616c74 && ciphertextWords[1] === 0x65645f5f) {\n      // Extract salt\n      salt = WordArray.create(ciphertextWords.slice(2, 4));\n\n      // Remove salt from ciphertext\n      ciphertextWords.splice(0, 4);\n      ciphertext.sigBytes -= 16;\n    }\n\n    return CipherParams.create({ ciphertext, salt });\n  },\n};\n\n/**\n * A cipher wrapper that returns ciphertext as a serializable cipher params object.\n */\nexport class SerializableCipher extends Base {\n  /**\n   * Encrypts a message.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key);\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv });\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       .encrypt(CryptoJS.algo.AES, message, key, { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, key, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Encrypt\n    const encryptor = cipher.createEncryptor(key, _cfg);\n    const ciphertext = encryptor.finalize(message);\n\n    // Shortcut\n    const cipherCfg = encryptor.cfg;\n\n    // Create and return serializable cipher params\n    return CipherParams.create({\n      ciphertext,\n      key,\n      iv: cipherCfg.iv,\n      algorithm: cipher,\n      mode: cipherCfg.mode,\n      padding: cipherCfg.padding,\n      blockSize: encryptor.blockSize,\n      formatter: _cfg.format,\n    });\n  }\n\n  /**\n   * Decrypts serialized ciphertext.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {WordArray} key The key.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.SerializableCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, key,\n   *         { iv: iv, format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, key, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Decrypt\n    const plaintext = cipher.createDecryptor(key, _cfg).finalize(_ciphertext.ciphertext);\n\n    return plaintext;\n  }\n\n  /**\n   * Converts serialized ciphertext to CipherParams,\n   * else assumed CipherParams already and returns ciphertext unchanged.\n   *\n   * @param {CipherParams|string} ciphertext The ciphertext.\n   * @param {Formatter} format The formatting strategy to use to parse serialized ciphertext.\n   *\n   * @return {CipherParams} The unserialized ciphertext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.SerializableCipher\n   *       ._parse(ciphertextStringOrParams, format);\n   */\n  static _parse(ciphertext, format) {\n    if (typeof ciphertext === 'string') {\n      return format.parse(ciphertext, this);\n    }\n    return ciphertext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {Formatter} format\n *\n *    The formatting strategy to convert cipher param objects to and from a string.\n *    Default: OpenSSL\n */\nSerializableCipher.cfg = Object.assign(\n  new Base(),\n  { format: OpenSSLFormatter },\n);\n\n/**\n * OpenSSL key derivation function.\n */\nexport const OpenSSLKdf = {\n  /**\n   * Derives a key and IV from a password.\n   *\n   * @param {string} password The password to derive from.\n   * @param {number} keySize The size in words of the key to generate.\n   * @param {number} ivSize The size in words of the IV to generate.\n   * @param {WordArray|string} salt\n   *     (Optional) A 64-bit salt to use. If omitted, a salt will be generated randomly.\n   *\n   * @return {CipherParams} A cipher params object with the key, IV, and salt.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32);\n   *     var derivedParams = CryptoJS.kdf.OpenSSL.execute('Password', 256/32, 128/32, 'saltsalt');\n   */\n  execute(password, keySize, ivSize, salt) {\n    let _salt = salt;\n\n    // Generate random salt\n    if (!_salt) {\n      _salt = WordArray.random(64 / 8);\n    }\n\n    // Derive key and IV\n    const key = EvpKDFAlgo.create({ keySize: keySize + ivSize }).compute(password, _salt);\n\n    // Separate key and IV\n    const iv = WordArray.create(key.words.slice(keySize), ivSize * 4);\n    key.sigBytes = keySize * 4;\n\n    // Return params\n    return CipherParams.create({ key, iv, salt: _salt });\n  },\n};\n\n/**\n * A serializable cipher wrapper that derives the key from a password,\n * and returns ciphertext as a serializable cipher params object.\n */\nexport class PasswordBasedCipher extends SerializableCipher {\n  /**\n   * Encrypts a message using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {WordArray|string} message The message to encrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {CipherParams} A cipher params object.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password');\n   *     var ciphertextParams = CryptoJS.lib.PasswordBasedCipher\n   *       .encrypt(CryptoJS.algo.AES, message, 'password', { format: CryptoJS.format.OpenSSL });\n   */\n  static encrypt(cipher, message, password, cfg) {\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf.execute(password, cipher.keySize, cipher.ivSize);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Encrypt\n    const ciphertext = SerializableCipher.encrypt\n      .call(this, cipher, message, derivedParams.key, _cfg);\n\n    // Mix in derived params\n    ciphertext.mixIn(derivedParams);\n\n    return ciphertext;\n  }\n\n  /**\n   * Decrypts serialized ciphertext using a password.\n   *\n   * @param {Cipher} cipher The cipher algorithm to use.\n   * @param {CipherParams|string} ciphertext The ciphertext to decrypt.\n   * @param {string} password The password.\n   * @param {Object} cfg (Optional) The configuration options to use for this operation.\n   *\n   * @return {WordArray} The plaintext.\n   *\n   * @static\n   *\n   * @example\n   *\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, formattedCiphertext, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   *     var plaintext = CryptoJS.lib.PasswordBasedCipher\n   *       .decrypt(CryptoJS.algo.AES, ciphertextParams, 'password',\n   *         { format: CryptoJS.format.OpenSSL });\n   */\n  static decrypt(cipher, ciphertext, password, cfg) {\n    let _ciphertext = ciphertext;\n\n    // Apply config defaults\n    const _cfg = Object.assign(new Base(), this.cfg, cfg);\n\n    // Convert string to CipherParams\n    _ciphertext = this._parse(_ciphertext, _cfg.format);\n\n    // Derive key and other params\n    const derivedParams = _cfg.kdf\n      .execute(password, cipher.keySize, cipher.ivSize, _ciphertext.salt);\n\n    // Add IV to config\n    _cfg.iv = derivedParams.iv;\n\n    // Decrypt\n    const plaintext = SerializableCipher.decrypt\n      .call(this, cipher, _ciphertext, derivedParams.key, _cfg);\n\n    return plaintext;\n  }\n}\n/**\n * Configuration options.\n *\n * @property {KDF} kdf\n *     The key derivation function to use to generate a key and IV from a password.\n *     Default: OpenSSL\n */\nPasswordBasedCipher.cfg = Object.assign(SerializableCipher.cfg, { kdf: OpenSSLKdf });\n","import {\n  BlockCipher,\n} from './cipher-core.js';\n\n// Lookup tables\nconst _SBOX = [];\nconst INV_SBOX = [];\nconst _SUB_MIX_0 = [];\nconst _SUB_MIX_1 = [];\nconst _SUB_MIX_2 = [];\nconst _SUB_MIX_3 = [];\nconst INV_SUB_MIX_0 = [];\nconst INV_SUB_MIX_1 = [];\nconst INV_SUB_MIX_2 = [];\nconst INV_SUB_MIX_3 = [];\n\n// Compute lookup tables\n\n// Compute double table\nconst d = [];\nfor (let i = 0; i < 256; i += 1) {\n  if (i < 128) {\n    d[i] = i << 1;\n  } else {\n    d[i] = (i << 1) ^ 0x11b;\n  }\n}\n\n// Walk GF(2^8)\nlet x = 0;\nlet xi = 0;\nfor (let i = 0; i < 256; i += 1) {\n  // Compute sbox\n  let sx = xi ^ (xi << 1) ^ (xi << 2) ^ (xi << 3) ^ (xi << 4);\n  sx = (sx >>> 8) ^ (sx & 0xff) ^ 0x63;\n  _SBOX[x] = sx;\n  INV_SBOX[sx] = x;\n\n  // Compute multiplication\n  const x2 = d[x];\n  const x4 = d[x2];\n  const x8 = d[x4];\n\n  // Compute sub bytes, mix columns tables\n  let t = (d[sx] * 0x101) ^ (sx * 0x1010100);\n  _SUB_MIX_0[x] = (t << 24) | (t >>> 8);\n  _SUB_MIX_1[x] = (t << 16) | (t >>> 16);\n  _SUB_MIX_2[x] = (t << 8) | (t >>> 24);\n  _SUB_MIX_3[x] = t;\n\n  // Compute inv sub bytes, inv mix columns tables\n  t = (x8 * 0x1010101) ^ (x4 * 0x10001) ^ (x2 * 0x101) ^ (x * 0x1010100);\n  INV_SUB_MIX_0[sx] = (t << 24) | (t >>> 8);\n  INV_SUB_MIX_1[sx] = (t << 16) | (t >>> 16);\n  INV_SUB_MIX_2[sx] = (t << 8) | (t >>> 24);\n  INV_SUB_MIX_3[sx] = t;\n\n  // Compute next counter\n  if (!x) {\n    xi = 1;\n    x = xi;\n  } else {\n    x = x2 ^ d[d[d[x8 ^ x2]]];\n    xi ^= d[d[xi]];\n  }\n}\n\n// Precomputed Rcon lookup\nconst RCON = [0x00, 0x01, 0x02, 0x04, 0x08, 0x10, 0x20, 0x40, 0x80, 0x1b, 0x36];\n\n/**\n * AES block cipher algorithm.\n */\nexport class AESAlgo extends BlockCipher {\n  _doReset() {\n    let t;\n\n    // Skip reset of nRounds has been set before and key did not change\n    if (this._nRounds && this._keyPriorReset === this._key) {\n      return;\n    }\n\n    // Shortcuts\n    this._keyPriorReset = this._key;\n    const key = this._keyPriorReset;\n    const keyWords = key.words;\n    const keySize = key.sigBytes / 4;\n\n    // Compute number of rounds\n    this._nRounds = keySize + 6;\n    const nRounds = this._nRounds;\n\n    // Compute number of key schedule rows\n    const ksRows = (nRounds + 1) * 4;\n\n    // Compute key schedule\n    this._keySchedule = [];\n    const keySchedule = this._keySchedule;\n    for (let ksRow = 0; ksRow < ksRows; ksRow += 1) {\n      if (ksRow < keySize) {\n        keySchedule[ksRow] = keyWords[ksRow];\n      } else {\n        t = keySchedule[ksRow - 1];\n\n        if (!(ksRow % keySize)) {\n          // Rot word\n          t = (t << 8) | (t >>> 24);\n\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n\n          // Mix Rcon\n          t ^= RCON[(ksRow / keySize) | 0] << 24;\n        } else if (keySize > 6 && ksRow % keySize === 4) {\n          // Sub word\n          t = (_SBOX[t >>> 24] << 24)\n            | (_SBOX[(t >>> 16) & 0xff] << 16)\n            | (_SBOX[(t >>> 8) & 0xff] << 8)\n            | _SBOX[t & 0xff];\n        }\n\n        keySchedule[ksRow] = keySchedule[ksRow - keySize] ^ t;\n      }\n    }\n\n    // Compute inv key schedule\n    this._invKeySchedule = [];\n    const invKeySchedule = this._invKeySchedule;\n    for (let invKsRow = 0; invKsRow < ksRows; invKsRow += 1) {\n      const ksRow = ksRows - invKsRow;\n\n      if (invKsRow % 4) {\n        t = keySchedule[ksRow];\n      } else {\n        t = keySchedule[ksRow - 4];\n      }\n\n      if (invKsRow < 4 || ksRow <= 4) {\n        invKeySchedule[invKsRow] = t;\n      } else {\n        invKeySchedule[invKsRow] = INV_SUB_MIX_0[_SBOX[t >>> 24]]\n          ^ INV_SUB_MIX_1[_SBOX[(t >>> 16) & 0xff]]\n          ^ INV_SUB_MIX_2[_SBOX[(t >>> 8) & 0xff]]\n          ^ INV_SUB_MIX_3[_SBOX[t & 0xff]];\n      }\n    }\n  }\n\n  encryptBlock(M, offset) {\n    this._doCryptBlock(\n      M, offset, this._keySchedule, _SUB_MIX_0, _SUB_MIX_1, _SUB_MIX_2, _SUB_MIX_3, _SBOX,\n    );\n  }\n\n  decryptBlock(M, offset) {\n    const _M = M;\n\n    // Swap 2nd and 4th rows\n    let t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n\n    this._doCryptBlock(\n      _M,\n      offset,\n      this._invKeySchedule,\n      INV_SUB_MIX_0,\n      INV_SUB_MIX_1,\n      INV_SUB_MIX_2,\n      INV_SUB_MIX_3,\n      INV_SBOX,\n    );\n\n    // Inv swap 2nd and 4th rows\n    t = _M[offset + 1];\n    _M[offset + 1] = _M[offset + 3];\n    _M[offset + 3] = t;\n  }\n\n  _doCryptBlock(M, offset, keySchedule, SUB_MIX_0, SUB_MIX_1, SUB_MIX_2, SUB_MIX_3, SBOX) {\n    const _M = M;\n\n    // Shortcut\n    const nRounds = this._nRounds;\n\n    // Get input, add round key\n    let s0 = _M[offset] ^ keySchedule[0];\n    let s1 = _M[offset + 1] ^ keySchedule[1];\n    let s2 = _M[offset + 2] ^ keySchedule[2];\n    let s3 = _M[offset + 3] ^ keySchedule[3];\n\n    // Key schedule row counter\n    let ksRow = 4;\n\n    // Rounds\n    for (let round = 1; round < nRounds; round += 1) {\n      // Shift rows, sub bytes, mix columns, add round key\n      const t0 = SUB_MIX_0[s0 >>> 24]\n        ^ SUB_MIX_1[(s1 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s2 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s3 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t1 = SUB_MIX_0[s1 >>> 24]\n        ^ SUB_MIX_1[(s2 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s3 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s0 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t2 = SUB_MIX_0[s2 >>> 24]\n        ^ SUB_MIX_1[(s3 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s0 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s1 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n      const t3 = SUB_MIX_0[s3 >>> 24]\n        ^ SUB_MIX_1[(s0 >>> 16) & 0xff]\n        ^ SUB_MIX_2[(s1 >>> 8) & 0xff]\n        ^ SUB_MIX_3[s2 & 0xff]\n        ^ keySchedule[ksRow];\n      ksRow += 1;\n\n      // Update state\n      s0 = t0;\n      s1 = t1;\n      s2 = t2;\n      s3 = t3;\n    }\n\n    // Shift rows, sub bytes, add round key\n    const t0 = (\n      (SBOX[s0 >>> 24] << 24)\n        | (SBOX[(s1 >>> 16) & 0xff] << 16)\n        | (SBOX[(s2 >>> 8) & 0xff] << 8)\n        | SBOX[s3 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t1 = (\n      (SBOX[s1 >>> 24] << 24)\n        | (SBOX[(s2 >>> 16) & 0xff] << 16)\n        | (SBOX[(s3 >>> 8) & 0xff] << 8)\n        | SBOX[s0 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t2 = (\n      (SBOX[s2 >>> 24] << 24)\n        | (SBOX[(s3 >>> 16) & 0xff] << 16)\n        | (SBOX[(s0 >>> 8) & 0xff] << 8)\n        | SBOX[s1 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n    const t3 = (\n      (SBOX[s3 >>> 24] << 24)\n        | (SBOX[(s0 >>> 16) & 0xff] << 16) | (SBOX[(s1 >>> 8) & 0xff] << 8) | SBOX[s2 & 0xff]\n    ) ^ keySchedule[ksRow];\n    ksRow += 1;\n\n    // Set output\n    _M[offset] = t0;\n    _M[offset + 1] = t1;\n    _M[offset + 2] = t2;\n    _M[offset + 3] = t3;\n  }\n}\nAESAlgo.keySize = 256 / 32;\n\n/**\n * Shortcut functions to the cipher's object interface.\n *\n * @example\n *\n *     var ciphertext = CryptoJS.AES.encrypt(message, key, cfg);\n *     var plaintext  = CryptoJS.AES.decrypt(ciphertext, key, cfg);\n */\nexport const AES = BlockCipher._createHelper(AESAlgo);\n","/**\n * Counter block mode.\n */\nimport {\n  BlockCipherMode,\n} from './cipher-core.js';\n\nexport class CTR extends BlockCipherMode {\n}\nCTR.Encryptor = class extends CTR {\n  processBlock(words, offset) {\n    const _words = words;\n\n    // Shortcuts\n    const cipher = this._cipher;\n    const { blockSize } = cipher;\n    const iv = this._iv;\n    let counter = this._counter;\n\n    // Generate keystream\n    if (iv) {\n      this._counter = iv.slice(0);\n      counter = this._counter;\n\n      // Remove IV for subsequent blocks\n      this._iv = undefined;\n    }\n    const keystream = counter.slice(0);\n    cipher.encryptBlock(keystream, 0);\n\n    // Increment counter\n    counter[blockSize - 1] = (counter[blockSize - 1] + 1) | 0;\n\n    // Encrypt\n    for (let i = 0; i < blockSize; i += 1) {\n      _words[offset + i] ^= keystream[i];\n    }\n  }\n};\nCTR.Decryptor = CTR.Encryptor;\n","import { concatUint8Array } from 'xgplayer-streaming-shared'\n\n/**\n * @interface\n */\nexport class IExternalDecryptor {\n  /**\n   * @param {Uint8Array} data\n   * @param {BufferSource} key\n   * @param {BufferSource} iv\n   * @returns {Promise.<Uint8Array>}\n   */\n  async decrypt (data, key, iv) {}\n}\n\nexport class Decryptor {\n  constructor () {\n    const crypto = window.crypto || window.msCrypto\n    this.subtle = crypto && (crypto.subtle || crypto.webkitSubtle)\n\n    /**\n     * @type {IExternalDecryptor}\n     */\n    this.externalDecryptor = null\n  }\n\n  destroy () {\n    if (this.externalDecryptor?.destroy) {\n      this.externalDecryptor.destroy()\n    }\n  }\n\n  decrypt (video, audio) {\n    if (!video && !audio) return\n    const ret = []\n    if (video) {\n      ret[0] = this._decryptSegment(video)\n    }\n    if (audio) {\n      ret[1] = this._decryptSegment(audio)\n    }\n    return Promise.all(ret)\n  }\n\n  async _decryptSegment (seg) {\n    let data = seg.data\n    if (seg.key) {\n      data = await this._decryptData(seg.data, seg.key, seg.keyIv)\n    }\n    if (!seg.map) return data\n    return concatUint8Array(seg.map, data)\n  }\n\n  async _decryptData (data, key, iv) {\n    if (this.externalDecryptor) {\n      return await this.externalDecryptor.decrypt(data, key, iv)\n    } else {\n      if (!this.subtle) throw new Error('crypto is not defined')\n      const aesKey = await this.subtle.importKey('raw', key, { name: 'AES-CBC' }, false, ['encrypt', 'decrypt'])\n      return new Uint8Array(\n        await this.subtle.decrypt({ name: 'AES-CBC', iv }, aesKey, data)\n      )\n    }\n  }\n}\n","import { EVENT } from 'xgplayer-streaming-shared'\n\nexport const Event = {\n  ...EVENT,\n  STREAM_PARSED: 'core.streamparsed',\n  NO_AUDIO_TRACK: 'core.noaudiotrack',\n  SUBTITLE_SEGMENTS: 'core.subtitlesegments',\n  SUBTITLE_PLAYLIST: 'core.subtitleplaylist',\n  SEI_PAYLOAD_TIME: 'core.seipayloadtime',\n  APPEND_COST: 'core.appendcost'\n}\n","import { ERR, Logger, StreamingError, concatUint8Array } from 'xgplayer-streaming-shared'\nimport { FMP4Demuxer, FMP4Remuxer, TrackType, TsDemuxer, WarningType } from 'xgplayer-transmuxer'\nimport { Event } from '../../constants'\n\nconst logger = new Logger('Transmuxer')\n\nexport class Transmuxer {\n  _initSegmentId = ''\n\n  constructor (hls, isMP4, needRemux, fixerConfig) {\n    this.hls = hls\n    this._demuxer = isMP4 ? new FMP4Demuxer() : new TsDemuxer(null, null, null, fixerConfig)\n    this._isMP4 = isMP4\n    if (needRemux) this._remuxer = new FMP4Remuxer(this._demuxer.videoTrack, this._demuxer.audioTrack)\n  }\n\n  transmux (videoChunk, audioChunk, discontinuity, contiguous, startTime, needInit) {\n    const demuxer = this._demuxer\n    try {\n      if (this._isMP4) {\n        demuxer.demux(videoChunk, audioChunk)\n      } else {\n        demuxer.demuxAndFix(concatUint8Array(videoChunk, audioChunk), discontinuity, contiguous, startTime)\n      }\n    } catch (error) {\n      throw new StreamingError(ERR.DEMUX, ERR.SUB_TYPES.HLS, error)\n    }\n\n    const { videoTrack, audioTrack, metadataTrack } = demuxer\n    const vParsed = {\n      codec: videoTrack.codec,\n      timescale: videoTrack.timescale,\n      firstDts: videoTrack.firstDts / videoTrack.timescale,\n      firstPts: videoTrack.firstPts / videoTrack.timescale,\n      duration: videoTrack.samplesDuration / videoTrack.timescale\n    }\n    const aParsed = {\n      codec: audioTrack.codec,\n      timescale: audioTrack.timescale,\n      firstDts: audioTrack.firstDts / videoTrack.timescale,\n      firstPts: audioTrack.firstPts / videoTrack.timescale,\n      duration: audioTrack.samplesDuration / videoTrack.timescale,\n      container: audioTrack.container\n    }\n    const newId = `${videoTrack.codec}/${videoTrack.width}/${videoTrack.height}/${audioTrack.codec}/${audioTrack.config}`\n    if (newId !== this._initSegmentId) {\n      this._initSegmentId = newId\n      needInit = true\n    }\n\n    this._fireEvents(videoTrack, audioTrack, metadataTrack, discontinuity || needInit)\n\n    this.hls.emit(Event.DEMUXED_TRACK, {videoTrack, audioTrack})\n\n    if (this._remuxer) {\n      // LG webos5.4系统上发现, 直播流开启low latency mode渲染的话，出首帧后需要等一段时间才触发loadeddata、canplay事件,影响首帧统计\n      // low latency mode通过解析封装的fmp4中对媒体播放时长的描述判断 https://issues.chromium.org/issues/41161663\n      if (needInit && this.hls.isLive && !this.hls.config.mseLowLatency) {\n        videoTrack.duration = this.hls.totalDuration * videoTrack.timescale\n        audioTrack.duration = this.hls.totalDuration * audioTrack.timescale\n      }\n\n      try {\n        const {\n          videoInitSegment,\n          videoSegment,\n          audioInitSegment,\n          audioSegment\n        } = this._remuxer.remux(needInit)\n        const v = concatUint8Array(videoInitSegment, videoSegment)\n        const a = concatUint8Array(audioInitSegment, audioSegment)\n        return [\n          v ? { ...vParsed, data: v } : undefined,\n          a ? { ...aParsed, data: a } : undefined\n        ]\n      } catch (error) {\n        throw new StreamingError(ERR.REMUX, ERR.SUB_TYPES.FMP4, error)\n      }\n    } else {\n      return [videoTrack, audioTrack]\n    }\n  }\n\n  _fireEvents (videoTrack, audioTrack, metadataTrack, discontinuity) {\n    const tracks = [videoTrack, audioTrack]\n    let logCC = `discontinuity: ${discontinuity}`\n\n    tracks.forEach(track => {\n      if (track.samples?.length) {\n        logCC += `; ${track.samples.length} ${\n          track.type === TrackType.VIDEO ? 'video' : 'audio'\n        } samples, firstDts/firstPts/duration: ${(\n          track.firstDts / track.timescale\n        ).toFixed(3)}/${(track.firstPts / track.timescale).toFixed(3)}/${(\n          track.samplesDuration / track.timescale\n        ).toFixed(3)}`\n      }\n\n      if (discontinuity && track.exist()) {\n        this.hls.emit(Event.METADATA_PARSED, {\n          type: track.type,\n          track,\n          meta: {\n            codec: track.codec,\n            timescale: track.timescale,\n            baseDts: track.baseDts,\n            ... (track.type === TrackType.VIDEO\n              ? {width: track.width,\n                height: track.height,\n                sarRatio: track.sarRatio\n              }\n              : {\n                codec: track.codec,\n                channelCount: track.channelCount,\n                sampleRate: track.sampleRate\n              })\n          }\n        })\n      }\n    })\n    logger.debug(logCC)\n\n    videoTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AV_SHIFT:\n          type = Event.LARGE_AV_FIRST_FRAME_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP:\n          type = Event.LARGE_VIDEO_DTS_GAP_DETECT\n          break\n        case WarningType.LARGE_VIDEO_GAP_BETWEEN_CHUNK:\n          type = Event.MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT\n          break\n        default:\n      }\n\n      if (type) this.hls.emit(Event.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('video exception', warn)\n    })\n\n    audioTrack.warnings.forEach(warn => {\n      let type\n      switch (warn.type) {\n        case WarningType.LARGE_AUDIO_GAP:\n          type = Event.LARGE_AUDIO_DTS_GAP_DETECT\n          break\n        case WarningType.AUDIO_FILLED:\n          type = Event.AUDIO_GAP_DETECT\n          break\n        case WarningType.AUDIO_DROPPED:\n          type = Event.AUDIO_OVERLAP_DETECT\n          break\n        default:\n      }\n\n      if (type) this.hls.emit(Event.STREAM_EXCEPTION, { ...warn, type })\n      logger.warn('audio exception', warn)\n    })\n\n    videoTrack.samples.forEach((sample) => {\n      if (sample.keyframe) {\n        this.hls.emit(Event.KEYFRAME, { pts: sample.pts })\n      }\n    })\n\n    metadataTrack.seiSamples.forEach(sei => {\n      this.hls.emit(Event.SEI, {\n        ...sei,\n        originPts: sei.originPts / 90, // sei 统一时间单位为毫秒\n        sei: {\n          code: sei.data.type,\n          content: sei.data.payload,\n          dts: sei.pts\n        }\n      })\n    })\n  }\n}\n","import { TsDemuxer, MP4Parser } from 'xgplayer-transmuxer'\nimport { MSE, Buffer, ERR, StreamingError, Logger, EVENT } from 'xgplayer-streaming-shared'\nimport { Decryptor } from './decrypt'\nimport { Transmuxer } from './transmuxer'\nimport { Event } from '../constants'\n\nconst logger = new Logger('BufferService')\n\nexport class BufferService {\n  _decryptor = new Decryptor()\n  /** @type {Transmuxer} */\n  _transmuxer = null\n  /** @type {MSE} */\n  _mse = null\n  _softVideo = null\n  _sourceCreated = false\n  _needInitSegment = true\n  _directAppend = false\n\n  constructor (hls) {\n    this.hls = hls\n    if (hls.config.softDecode) { // soft decode\n      this._softVideo = hls.media\n    } else {\n      this._mse = new MSE(null, {\n        preferMMS: hls.config.preferMMS\n      })\n\n      if (hls.config.url) {\n        this._mse.bindMedia(hls.media).then((e) => {\n          this.hls.emit(EVENT.MEDIASOURCE_OPENED, e)\n        })\n      }\n    }\n\n    // If a third-party decryption module is configured, use it\n    if (hls.config.decryptor) {\n      this._decryptor.externalDecryptor = hls.config.decryptor\n    }\n  }\n\n  get baseDts () {\n    return this._transmuxer?._demuxer?._fixer?._baseDts\n  }\n\n  get nbSb () {\n    if (!this._mse?._sourceBuffer) return 0\n\n    return Object.keys(this._mse._sourceBuffer).length\n  }\n\n  get msIsOpened () {\n    return this._mse?.isOpened\n  }\n\n  get msHasOpTasks () {\n    return this._mse?.hasOpTasks\n  }\n\n  get msStreaming () {\n    return this._mse?.streaming\n  }\n\n  async updateDuration (duration) {\n    logger.debug('update duration', duration)\n    if (this._mse) {\n      if (!this._mse.isOpened) {\n        await this._mse.open()\n      }\n      await this._mse.updateDuration(duration)\n    } else if (this._softVideo) {\n      this._softVideo.duration = duration\n    }\n  }\n\n  createSource (videoChunk, audioChunk, videoCodec, audioCodec) {\n    if (this._sourceCreated) return\n    const chunk = videoChunk || audioChunk\n    if (!chunk) return\n    if (TsDemuxer.probe(chunk)) {\n      if (!this._transmuxer) this._transmuxer = new Transmuxer(this.hls, false, !this._softVideo, this.hls.config.fixerConfig)\n    } else if (MP4Parser.probe(chunk)) {\n      if (this._softVideo) {\n        if (!this._transmuxer) this._transmuxer = new Transmuxer(this.hls, true, null, this.hls.config.fixerConfig)\n      } else {\n        this._directAppend = true\n        let mix = false\n        if (videoChunk && !videoCodec) {\n          MP4Parser.findBox(videoChunk, ['moov', 'trak']).forEach(t => {\n            const box = MP4Parser.findBox(t.data, ['trak', 'mdia', 'minf', 'stbl', 'stsd'])[0]\n            if (box) {\n              const e = MP4Parser.stsd(box).entries[0]\n              if (e) {\n                if (e.hvcC) {\n                  videoCodec = e.hvcC.codec || 'hev1.1.6.L93.B0'\n                } else if (e.avcC) {\n                  videoCodec = e.avcC.codec\n                } else if (e.sampleRate || e.esds) {\n                  audioCodec = e.esds?.codec || 'mp4a.40.2'\n                  mix = true\n                }\n              }\n            }\n          })\n        }\n        if (audioChunk && !audioCodec) {\n          MP4Parser.findBox(audioChunk, ['moov', 'trak', 'mdia', 'minf', 'stbl', 'stsd']).forEach(stsd => {\n            const e = MP4Parser.stsd(stsd).entries[0]\n            if (e && e.esds) audioCodec = e.esds.codec\n          })\n        }\n        if (videoChunk && !videoCodec) videoCodec = 'avc1.42e01e'\n        if (audioChunk && !audioCodec) audioCodec = 'mp4a.40.2'\n        if (mix) {\n          videoCodec += `, ${audioCodec}`\n          audioCodec = ''\n        }\n        this._createMseSource(videoCodec, audioCodec)\n      }\n    } else {\n      throw new StreamingError(ERR.OTHER, null, null, null, 'unsupported stream')\n    }\n    if (this._softVideo) this._sourceCreated = true\n  }\n\n  async appendBuffer (segment, audioSegment, videoChunk, audioChunk, discontinuity, contiguous, startTime) {\n    if (!videoChunk?.length && !audioChunk?.length) return\n\n    const afterAppend = () => {\n      if (this.hls?.emit) {\n        this.hls?.emit(EVENT.APPEND_BUFFER, {\n          start: segment.start,\n          end: segment.end\n        })\n      }\n    }\n\n    if (this._directAppend) {\n      const p = []\n      if (videoChunk) p.push(this._mse.append(MSE.VIDEO, videoChunk))\n      if (audioChunk) p.push(this._mse.append(MSE.AUDIO, audioChunk))\n      return Promise.all(p).then(afterAppend)\n    }\n    const needInit = this._needInitSegment || discontinuity\n    const [video, audio] = this._transmuxer.transmux(videoChunk, audioChunk, needInit, contiguous, startTime, this._needInitSegment || discontinuity)\n\n    if (audioChunk && audioSegment) {\n      audioSegment?.setTrackExist(false, true)\n    }\n\n    if (audioChunk && segment) {\n      segment?.setTrackExist(true, false)\n    }\n\n    if (!audioSegment) {\n      segment?.setTrackExist(!!video, !!audio)\n    }\n\n\n    if (video && !audio) {\n      this.hls.emit(Event.NO_AUDIO_TRACK)\n    }\n\n    if (this._softVideo) {\n      this._softVideo.appendBuffer(video, audio)\n      this._needInitSegment = false\n\n      afterAppend()\n    } else if (this._mse) {\n      const isFirstAppend = !this._sourceCreated\n      if (isFirstAppend) {\n        this._createMseSource(video?.codec, audio?.codec, audio?.container)\n      }\n      this._needInitSegment = false\n      const mse = this._mse\n      const p = []\n\n      if (needInit && !isFirstAppend) {\n        // handle codec change during midstream\n        this._handleCodecChange(video, audio).forEach(task => p.push(task))\n      }\n\n      if (video) {\n        const {data: videoData, ...videoRest} = video\n        p.push(mse.append(MSE.VIDEO, videoData, videoRest))\n      }\n      if (audio) {\n        const {data: audioData, ...audioRest} = audio\n        p.push(mse.append(MSE.AUDIO, audioData, audioRest))\n      }\n\n      const ret = Promise.all(p)\n      ret.then(afterAppend)\n      return ret\n    }\n  }\n\n  async removeBuffer (start = 0, end = Infinity) {\n    const media = this.hls.media\n    if (!this._mse || !media || start < 0 || end < start || start >= this._mse.duration) return\n\n    return this._mse\n      .clearBuffer(start, end)\n      .then(() => this.hls.emit(EVENT.REMOVE_BUFFER, { start, end, removeEnd: end }))\n  }\n\n  async evictBuffer (bufferBehind) {\n    const media = this.hls.media\n    if (!this._mse || !media || !bufferBehind || bufferBehind < 0) return\n    const currentTime = media.currentTime\n    const removeEnd = currentTime - bufferBehind\n    if (removeEnd <= 0) return\n    const start = Buffer.start(Buffer.get(media))\n    if (start + 1 >= removeEnd) return\n    return this.removeBuffer(0, removeEnd)\n  }\n\n  async clearAllBuffer () {\n    if (this._mse) return this._mse.clearAllBuffer()\n  }\n\n  decryptBuffer (video, audio) {\n    return this._decryptor.decrypt(video, audio)\n  }\n\n  async reset (reuseMse = false) {\n    if (this._mse && !reuseMse) {\n      this._transmuxer = null\n      this._sourceCreated = false\n      await this._mse.unbindMedia()\n      await this._mse.bindMedia(this.hls.media)\n    }\n    this._needInitSegment = true\n    this._directAppend = false\n  }\n\n  async endOfStream () {\n    if (this._mse) {\n      if (this._sourceCreated) {\n        await this._mse.endOfStream()\n        this.hls.emit(EVENT.BUFFEREOS)\n      }\n    }\n    if (this._softVideo) {\n      this._softVideo.endOfStream()\n    }\n  }\n\n  async setLiveSeekableRange (start, end) {\n    if (this._mse) this._mse.setLiveSeekableRange(start, end)\n  }\n\n  async detachMedia () {\n    if (this._mse) {\n      await this._mse.unbindMedia()\n    }\n  }\n\n  async destroy () {\n    this._decryptor?.destroy()\n    await this.detachMedia()\n\n    this._decryptor = null\n    this._mse = null\n    this._softVideo = null\n  }\n\n  /**\n   * @private\n   */\n  _createMseSource (videoCodec, audioCodec, container) {\n    logger.debug(`create mse source, videoCodec=${videoCodec}, audioCodec=${audioCodec}`)\n    const mse = this._mse\n    if (!mse) return\n    if (videoCodec) {\n      mse.createSource(MSE.VIDEO, `video/mp4;codecs=${videoCodec}`)\n      this._sourceCreated = true\n    }\n    if (audioCodec) {\n      mse.createSource(MSE.AUDIO, `audio/mp4;codecs=${audioCodec}`)\n      this._sourceCreated = true\n    } else if (container) {\n      mse.createSource(MSE.AUDIO, `${container};codecs=\"\"`)\n      this._sourceCreated = true\n    }\n    this.hls.emit(EVENT.SOURCEBUFFER_CREATED)\n  }\n\n  /**\n   * This makes it possible to change codecs or container type mid-stream.\n   * @private\n   */\n  _handleCodecChange (video, audio) {\n    const tasks = []\n    const mse = this._mse\n    const codecList = [{\n      type: MSE.VIDEO,\n      codecs: video?.codec\n    }, {\n      type: MSE.AUDIO,\n      codecs: audio?.codec\n    }]\n\n    codecList.filter(item => !!item.codecs).forEach(({type, codecs}) => {\n      const sourceBuffer = mse.getSourceBuffer(type)\n      if (sourceBuffer) {\n        const codec = codecs.split(',')[0]\n        if (!new RegExp(codec, 'ig').test(sourceBuffer.mimeType)) {\n          tasks.push(\n            mse.changeType(type, `${type}/mp4;codecs=${codecs}`)\n          )\n        }\n      }\n    })\n    return tasks\n  }\n\n  seamlessSwitch () {\n    this._needInitSegment = true\n  }\n\n  isFull (mediaType = MSE.VIDEO){\n    return this._mse?.isFull(mediaType)\n  }\n}\n","export class MasterPlaylist {\n  version = 0\n  streams = [] // MasterStream\n  /**\n   * @readonly\n   */\n  isMaster = true\n}\n\nconst MediaType = {\n  Audio: 'AUDIO',\n  Video: 'VIDEO',\n  SubTitle: 'SUBTITLE',\n  ClosedCaptions: 'CLOSED-CAPTIONS'\n}\n\n// #EXT-X-KEY KEYFORMAT values\n// urn:uuid: https://dashif.org/identifiers/content_protection/\nconst KeySystems = {\n  CLEAR_KEY: 'org.w3.clearkey',\n  FAIRPLAY: ['urn:uuid:94ce86fb-07ff-4f43-adb8-93d2fa968ca2', 'com.apple.streamingkeydelivery'],\n  WIDEVINE: ['urn:uuid:edef8ba9-79d6-4ace-a3c8-27dcd51d21ed', 'com.widevine.alpha', 'com.widevine'],\n  PLAYREADY: ['urn:uuid:9a04f079-9840-4286-ab92-e65be0885f95', 'com.microsoft.playready']\n}\n\nfunction flatArray (arr) {\n  let ret = []\n\n  for (let i = 0; i < arr.length; i++) {\n    if (Array.isArray(arr[i])) {\n      ret = ret.concat(flatArray(arr[i]))\n    } else {\n      ret.push(arr[i])\n    }\n  }\n\n  return ret\n}\n\nexport class MediaStream {\n  id = 0\n  url = ''\n  default = false\n  autoSelect = false\n  forced = false\n  group = ''\n  name = ''\n  lang = ''\n  segments = []\n  endSN = 0\n}\n\nexport class AudioStream extends MediaStream {\n  mediaType = MediaType.Audio\n  channels = 0\n}\n\nexport class VideoStream extends MediaStream {\n  mediaType = MediaType.Video\n}\n\nexport class SubTitleStream extends MediaStream {\n  mediaType = MediaType.SubTitle\n}\n\nexport class ClosedCaptionsStream extends MediaStream {\n  mediaType = MediaType.ClosedCaptions\n}\n\nexport class MasterStream {\n  id = 0\n  bitrate = 0\n  width = 0\n  height = 0\n  name = ''\n  url = ''\n  audioCodec = ''\n  videoCodec = ''\n  textCodec = ''\n  audioGroup = ''\n\n  /** @type {AudioStream[]} */\n  audioStreams = []\n\n  /** @type {SubTitleStream[]} */\n  subtitleStreams = []\n\n  /** @type {ClosedCaptionsStream[]} */\n  closedCaptionsStream = []\n}\n\nexport class MediaPlaylist {\n  version = 0\n  url = ''\n  type = '' // upper case\n  startCC = 0\n  endCC = 0\n  startSN = 0\n  endSN = 0\n  totalDuration = 0\n  targetDuration = 0\n  partTargetDuration = 0\n  canSkipUntil = 0\n  canSkipDateRanges = false\n  skippedSegments = 0\n  canBlockReload = false\n  partHoldBack = 0\n  live = true\n  lowLatency = false\n  endPartIndex = 0\n  /** @type {Array.<MediaSegment>} */\n  segments = []\n  dateRanges = {}\n  skippedSegments = 0\n}\n\nexport class MediaSegment {\n  sn = 0 // Media Sequence Number\n  cc = 0\n  url = ''\n  parentUrl = ''\n  title = ''\n  start = 0\n  duration = 0\n  dataTime = ''\n  /** @type {?MediaSegmentKey} */\n  key = null\n  byteRange = null // [start, end]\n  isInitSegment = false\n  /** @type {?MediaSegment} */\n  initSegment = null\n  isLast = false\n  hasAudio = false\n  hasVideo = false\n\n  independent = false\n  partIndex = 0\n\n  constructor (parentUrl) {\n    this.parentUrl = parentUrl\n  }\n\n  get end () {\n    return this.start + this.duration\n  }\n\n  setTrackExist (v, a) {\n    this.hasVideo = v\n    this.hasAudio = a\n  }\n\n  setByteRange (data, prevSegment) {\n    this.byteRange = [0]\n    const bytes = data.split('@')\n    if (bytes.length === 1 && prevSegment && prevSegment.byteRange) {\n      this.byteRange[0] = prevSegment.byteRange[1] || 0\n      if (this.byteRange[0]) this.byteRange[0] += 1\n    } else {\n      this.byteRange[0] = parseInt(bytes[1])\n    }\n    this.byteRange[1] = this.byteRange[0] + parseInt(bytes[0]) - 1\n  }\n}\n\nexport class MediaSegmentKey {\n  method = ''\n  url = ''\n  /** @type {?Uint8Array} */\n  iv = null\n  keyFormat = ''\n  keyFormatVersions = ''\n\n  constructor (segKey) {\n    if (segKey instanceof MediaSegmentKey) {\n      this.method = segKey.method\n      this.url = segKey.url\n      this.keyFormat = segKey.keyFormat\n      this.keyFormatVersions = segKey.keyFormatVersions\n      if (segKey.iv) this.iv = new Uint8Array(segKey.iv)\n    }\n  }\n\n  clone (sn) {\n    const key = new MediaSegmentKey(this)\n    if (sn !== null && sn !== undefined) key.setIVFromSN(sn)\n    return key\n  }\n\n  setIVFromSN (sn) {\n    if (!this.iv && this.method === 'AES-128' && typeof sn === 'number' && this.url) {\n      this.iv = new Uint8Array(16)\n      for (let i = 12; i < 16; i++) {\n        this.iv[i] = (sn >> (8 * (15 - i))) & 0xff\n      }\n    }\n  }\n\n  isSegmentEncrypted () {\n    const { method } = this\n    return method === 'AES-128' // || method === 'AES-256' || method === 'AES-256-CTR'\n  }\n\n  isValidKeySystem () {\n    const isKeyFormatValid =\n    flatArray([\n      KeySystems.CLEAR_KEY,\n      KeySystems.FAIRPLAY,\n      KeySystems.WIDEVINE,\n      KeySystems.PLAYREADY\n    ]).indexOf(this.keyFormat) > -1\n    if (!isKeyFormatValid) {\n      return false\n    }\n\n    const isMethodValid =\n      ['SAMPLE-AES', 'SAMPLE-AES-CENC', 'SAMPLE-AES-CTR'].indexOf(this.method) > -1\n    if (!isMethodValid) {\n      return false\n    }\n    return true\n  }\n\n  isSupported () {\n    if (!this.method) {\n      return false\n    }\n    if (this.isSegmentEncrypted()) {\n      return true\n    } else if (this.isValidKeySystem()) {\n      return true\n    }\n    return false\n  }\n}\n\nexport class HlsUrlParameters {\n  constructor (msn, part, skip) {\n    this.msn = msn\n    this.part = part\n    this.skip = skip\n  }\n\n  addDirectives (uri) {\n    const url = new self.URL(uri)\n    if (this.msn !== undefined) {\n      url.searchParams.set('_HLS_msn', this.msn.toString())\n    }\n    if (this.part) {\n      url.searchParams.set('_HLS_part', this.part.toString())\n    }\n    if (this.skip) {\n      url.searchParams.set('_HLS_skip', this.skip)\n    }\n    return url.href\n  }\n}\n","const REGEXP_TAG = /^#(EXT[^:]*)(?::(.*))?$/\nconst REGEXP_ATTR = /([^=]+)=(?:\"([^\"]*)\"|([^\",]*))(?:,|$)/g\nconst REGEXP_ABSOLUTE_URL = /^(?:[a-zA-Z0-9+\\-.]+:)?\\/\\//\nconst REGEXP_URL_PAIR = /^((?:[a-zA-Z0-9+\\-.]+:)?\\/\\/[^/?#]*)?([^?#]*\\/)?/\n\nexport function getLines (text) {\n  return text.split(/[\\r\\n]/).map((x) => x.trim()).filter(Boolean)\n}\n\nexport function parseTag (text) {\n  const ret = text.match(REGEXP_TAG)\n  if (!ret || !ret[1]) return\n  return [ret[1].replace('EXT-X-', ''), ret[2]]\n}\n\nexport function parseAttr (text) {\n  const ret = {}\n  let match = REGEXP_ATTR.exec(text)\n  while (match) {\n    ret[match[1]] = match[2] || match[3]\n    match = REGEXP_ATTR.exec(text)\n  }\n  return ret\n}\n\nexport function getAbsoluteUrl (url, parentUrl) {\n  if (!parentUrl || !url || REGEXP_ABSOLUTE_URL.test(url)) return url\n  const pairs = REGEXP_URL_PAIR.exec(parentUrl)\n  if (!pairs) return url\n  if (url[0] === '/') return pairs[1] + url\n  return pairs[1] + pairs[2] + url\n}\n\nconst CODECS_REGEXP = {\n  audio: [/^mp4a/, /^vorbis$/, /^opus$/, /^flac$/, /^[ae]c-3$/],\n  video: [/^avc/, /^hev/, /^hvc/, /^vp0?[89]/, /^av1$/],\n  text: [/^vtt$/, /^wvtt/, /^stpp/]\n}\n\n/**\n * @param {'audio' | 'video' | 'text'} type\n * @param {Array<string>} codecs\n * @returns {string | undefined}\n */\nexport function getCodecs (type, codecs) {\n  const re = CODECS_REGEXP[type]\n  if (!re || !codecs || !codecs.length) return\n  for (let i = 0; i < re.length; i++) {\n    for (let j = 0; j < codecs.length; j++) {\n      if (re[i].test(codecs[j])) return codecs[j]\n    }\n  }\n}\n\nexport function isValidDaterange (attr, dateRangeWithSameId) {\n  let _badValueForSameId\n  if (dateRangeWithSameId) {\n    for (const key in dateRangeWithSameId) {\n      if (\n        Object.prototype.hasOwnProperty.call(dateRangeWithSameId, key) &&\n        attr[key] !== dateRangeWithSameId[key]\n      ) {\n        _badValueForSameId = key\n        break\n      }\n    }\n  }\n\n  let duration = null\n  if (attr.DURATION) {\n    duration = parseFloat(attr.DURATION)\n    if (!Number.isFinite(duration)) {\n      duration = null\n    } else if (attr._endDate) {\n      duration = (attr._endDate.getTime() - attr._startDate.getTime()) / 1000\n    }\n  }\n\n  const cue = enumeratedStringList(attr.CUE || attr['X-CUE'], {\n    pre: false,\n    post: false,\n    once: false\n  })\n\n  return (\n    !!attr.ID &&\n    !_badValueForSameId &&\n    Number.isFinite(attr._startDate.getTime()) &&\n    (duration === null || duration >= 0) &&\n    (!(attr.END_ON_NEXT === 'YES') || !!attr.CLASS) &&\n    (!attr.CUE ||\n      (!cue.pre && !cue.post) ||\n      cue.pre !== cue.post) &&\n    (!(attr.CLASS === 'com.apple.hls.interstitial') ||\n      'X-ASSET-URI' in attr ||\n      'X-ASSET-LIST' in attr)\n  )\n}\n\nfunction enumeratedStringList (attrValue, dict) {\n  return (attrValue ? attrValue.split(/[ ,]+/) : []).reduce(\n    (result, identifier) => {\n      result[identifier.toLowerCase()] = true\n      return result\n    },\n    dict\n  )\n}\n","import { MasterPlaylist, MasterStream, AudioStream, SubTitleStream, MediaStream } from './model'\nimport { parseAttr, parseTag, getAbsoluteUrl, getCodecs } from './utils'\n\n/**\n * @param {Array<string>} lines\n * @param {string} parentUrl\n * @returns {MasterPlaylist}\n */\nexport function parseMasterPlaylist (lines, parentUrl) {\n  const master = new MasterPlaylist()\n  let index = 0\n  let line\n  const audioStreams = []\n  const subtitleStreams = []\n\n  // eslint-disable-next-line no-cond-assign\n  while (line = lines[index++]) {\n    const tag = parseTag(line)\n    if (!tag) continue\n    const [name, data] = tag\n    if (name === 'VERSION') {\n      master.version = parseInt(data)\n    } else if (name === 'MEDIA' && data) {\n      const attr = parseAttr(data)\n      let stream\n      switch (attr.TYPE) {\n        case 'AUDIO':\n          stream = new AudioStream()\n          break\n        case 'SUBTITLES':\n          stream = new SubTitleStream()\n          break\n        default:\n          stream = new MediaStream()\n      }\n\n      stream.url = getAbsoluteUrl(attr.URI, parentUrl)\n      stream.default = attr.DEFAULT === 'YES'\n      stream.autoSelect = attr.AUTOSELECT === 'YES'\n      stream.group = attr['GROUP-ID']\n      stream.name = attr.NAME\n      stream.lang = attr.LANGUAGE\n      if (attr.CHANNELS) {\n        stream.channels = Number(attr.CHANNELS.split('/')[0])\n        if (Number.isNaN(stream.channels)) stream.channels = 0\n      }\n\n      if (attr.TYPE === 'AUDIO' && attr.URI) {\n        audioStreams.push(stream)\n      }\n\n      if (attr.TYPE === 'SUBTITLES') {\n        subtitleStreams.push(stream)\n      }\n\n    } else if (name === 'STREAM-INF' && data) {\n      const stream = new MasterStream()\n      const attr = parseAttr(data)\n\n      stream.bitrate = parseInt(attr['AVERAGE-BANDWIDTH'] || attr.BANDWIDTH)\n      stream.name = attr.NAME\n      stream.url = getAbsoluteUrl(lines[index++], parentUrl)\n      if (attr.RESOLUTION) {\n        const [w, h] = attr.RESOLUTION.split('x')\n        stream.width = parseInt(w)\n        stream.height = parseInt(h)\n      }\n      if (attr.CODECS) {\n        const codecs = attr.CODECS.split(/[ ,]+/).filter(Boolean)\n        stream.videoCodec = getCodecs('video', codecs)\n        stream.audioCodec = getCodecs('audio', codecs)\n        stream.textCodec = getCodecs('text', codecs)\n      }\n      stream.audioGroup = attr.AUDIO\n      stream.subtitleGroup = attr.SUBTITLES\n\n      master.streams.push(stream)\n    }\n  }\n  master.streams.forEach((s, i) => { s.id = i })\n\n  if (audioStreams.length) {\n    audioStreams.forEach((s, i) => { s.id = i })\n    master.streams.forEach((stream) => {\n      if (stream.audioGroup) {\n        stream.audioStreams = audioStreams.filter(x => x.group === stream.audioGroup)\n      }\n    })\n  }\n\n  if (subtitleStreams.length) {\n    subtitleStreams.forEach((s, i) => { s.id = i })\n    master.streams.forEach((stream) => {\n      if (stream.subtitleGroup) {\n        stream.subtitleStreams = subtitleStreams.filter(x => x.group === stream.subtitleGroup)\n      }\n    })\n  }\n\n  return master\n}\n","import { MediaPlaylist, MediaSegment, MediaSegmentKey } from './model'\nimport { getAbsoluteUrl, parseAttr, parseTag, isValidDaterange } from './utils'\n\nexport function parseMediaPlaylist (lines, parentUrl, useLowLatency) {\n  const media = new MediaPlaylist()\n  media.url = parentUrl\n  let curSegment = new MediaSegment(parentUrl)\n  let curInitSegment = null\n  let curKey = null\n  let totalDuration = 0\n  let curSN = 0\n  let curCC = 0\n  let index = 0\n  let line\n  let endOfList = false\n  let partSegmentIndex = 0\n\n\n  // eslint-disable-next-line no-cond-assign\n  while (line = lines[index++]) {\n    if (line[0] !== '#') { // url\n      if (media.lowLatency) {\n        curSN++\n        continue\n      }\n\n      curSegment.sn = curSN\n      curSegment.cc = curCC\n      curSegment.url = getAbsoluteUrl(line, parentUrl)\n      if (curKey) curSegment.key = curKey.clone(curSN)\n      if (curInitSegment) curSegment.initSegment = curInitSegment\n      media.segments.push(curSegment)\n      curSegment = new MediaSegment(parentUrl)\n      curSN++\n      continue\n    }\n\n    const tag = parseTag(line)\n    if (!tag) continue\n    const [name, data] = tag\n    switch (name) {\n      case 'VERSION':\n        media.version = parseInt(data)\n        break\n      case 'PLAYLIST-TYPE':\n        media.type = data?.toUpperCase()\n        break\n      case 'TARGETDURATION':\n        media.targetDuration = parseFloat(data)\n        break\n      case 'PART-INF': {\n        if (useLowLatency) {\n          media.lowLatency = true\n        }\n        const attr = parseAttr(data)\n        if (attr['PART-TARGET']) {\n          media.partTargetDuration = parseFloat(attr['PART-TARGET'])\n        }\n      }\n        break\n      case 'SERVER-CONTROL':{\n        const attr = parseAttr(data)\n        media.canBlockReload = attr['CAN-BLOCK-RELOAD'] === 'YES'\n        media.partHoldBack = parseFloat(attr['PART-HOLD-BACK'] || 0)\n        media.canSkipUntil = parseFloat(attr['CAN-SKIP-UNTIL'] || 0)\n        media.canSkipDateRanges = media.canSkipUntil > 0 && (attr['CAN-SKIP-DATERANGES'] === 'YES')\n      }\n        break\n      case 'ENDLIST': {\n        endOfList = true\n      }\n        break\n      case 'MEDIA-SEQUENCE':\n        curSN = media.startSN = parseInt(data)\n        break\n      case 'DISCONTINUITY-SEQUENCE':\n        curCC = media.startCC = parseInt(data)\n        break\n      case 'DISCONTINUITY':\n        curCC++\n        break\n      case 'BYTERANGE':\n        curSegment.setByteRange(data, media.segments[media.segments.length - 1])\n        break\n      case 'PART': {\n        if (!media.lowLatency) break\n        const attr = parseAttr(data)\n        curSegment.duration = parseFloat(attr['DURATION'])\n        curSegment.independent = attr['INDEPENDENT'] === 'YES'\n        curSegment.sn = curSN\n        curSegment.cc = curCC\n        curSegment.partIndex = partSegmentIndex\n        curSegment.start = totalDuration\n        curSegment.duration = parseFloat(attr['DURATION'])\n        totalDuration += curSegment.duration\n        curSegment.url = getAbsoluteUrl(attr['URI'], parentUrl)\n        if (curKey) curSegment.key = curKey.clone(curSN)\n        if (curInitSegment) curSegment.initSegment = curInitSegment\n        media.segments.push(curSegment)\n        curSegment = new MediaSegment(parentUrl)\n        partSegmentIndex++\n      }\n\n        break\n      case 'PRELOAD-HINT': {\n        const attr = parseAttr(data)\n        media.preloadHint = attr\n        if (attr['TYPE'] === 'PART' && attr['URI']) {\n          const tmp = attr['URI'].split('.ts')[0].split('-')\n          media.nextSN = tmp[3]\n          media.nextIndex = tmp[tmp.length - 1]\n        }\n      }\n        break\n      case 'PROGRAM-DATE-TIME':\n        curSegment.dataTime = data\n        break\n      case 'EXTINF': {\n        if (media.lowLatency) {\n          partSegmentIndex = 0\n          break\n        }\n        const [duration, title] = data.split(',')\n        curSegment.start = totalDuration\n        curSegment.duration = parseFloat(duration)\n        totalDuration += curSegment.duration\n        curSegment.title = title\n      }\n        break\n      case 'KEY': {\n        const attr = parseAttr(data)\n        if (attr.METHOD === 'NONE') {\n          curKey = null\n          break\n        }\n        curKey = new MediaSegmentKey()\n        curKey.method = attr.METHOD\n        curKey.url = /^blob:/.test(attr.URI) ? attr.URI : getAbsoluteUrl(attr.URI, parentUrl)\n        curKey.keyFormat = attr.KEYFORMAT || 'identity'\n        curKey.keyFormatVersions = attr.KEYFORMATVERSIONS\n        if (!curKey.isSupported()) {\n          throw new Error(`encrypt ${attr.METHOD}/${attr.KEYFORMAT} is not supported`)\n        }\n        if (attr.IV) {\n          let str = attr.IV.slice(2)\n          str = (str.length & 1 ? '0' : '') + str\n          curKey.iv = new Uint8Array(str.length / 2)\n          for (let i = 0, l = str.length / 2; i < l; i++) {\n            curKey.iv[i] = parseInt(str.slice(i * 2, i * 2 + 2), 16)\n          }\n        }\n      }\n        break\n      case 'MAP': {\n        const attr = parseAttr(data)\n        curSegment.url = getAbsoluteUrl(attr.URI, parentUrl)\n        if (attr.BYTERANGE) curSegment.setByteRange(attr.BYTERANGE)\n        curSegment.isInitSegment = true\n        curSegment.sn = 0\n        if (curKey) {\n          curSegment.key = curKey.clone(0)\n        }\n        curInitSegment = curSegment\n        curSegment = new MediaSegment(parentUrl)\n      }\n        break\n      case 'SKIP': {\n        const attr = parseAttr(data)\n        const skippedSegments = parseInt(attr['SKIPPED-SEGMENTS'], 10)\n        if (skippedSegments <= Number.MAX_SAFE_INTEGER) {\n          media.skippedSegments += skippedSegments\n          curSN += skippedSegments\n        }\n      }\n        break\n      case 'DATERANGE': {\n        const attr = parseAttr(data)\n        const dateRangeWithSameId = media.dateRanges[attr.ID]\n        attr._startDate = dateRangeWithSameId ? dateRangeWithSameId._startDate : new Date(attr['START-DATE'])\n        const endDate = dateRangeWithSameId?._endDate || new Date(attr.END_DATE)\n        if (Number.isFinite(endDate)) {\n          attr._endDate = endDate\n        }\n        if (isValidDaterange(attr, dateRangeWithSameId) || media.skippedSegments) {\n          media.dateRanges[attr.ID] = attr\n        }\n      }\n        break\n      default:\n    }\n  }\n\n  media.segments = media.segments.filter(x => x.duration !== 0)\n  const lastSegment = media.segments[media.segments.length - 1]\n\n  if (lastSegment) {\n    if (endOfList) {\n      lastSegment.isLast = true\n    }\n    media.endSN = lastSegment.sn\n    media.endPartIndex = lastSegment.partIndex\n  }\n  if (endOfList) {\n    media.live = false\n  }\n  media.totalDuration = totalDuration\n  media.endCC = curCC\n\n  return media\n}\n","import { parseMasterPlaylist } from './master'\nimport { parseMediaPlaylist } from './media'\nimport { getLines } from './utils'\n\nexport class M3U8Parser {\n  static parse (text = '', parentUrl, useLowLatency) {\n    if (!text.includes('#EXTM3U')) throw new Error('Invalid m3u8 file')\n\n    const lines = getLines(text)\n\n    if (M3U8Parser.isMediaPlaylist(text)) {\n      return parseMediaPlaylist(lines, parentUrl, useLowLatency)\n    }\n    return parseMasterPlaylist(lines, parentUrl)\n  }\n\n  static isMediaPlaylist (text) {\n    return text.includes('#EXTINF:') || text.includes('#EXT-X-TARGETDURATION:')\n  }\n}\n","import { NetLoader, StreamingError, EVENT, ERR } from 'xgplayer-streaming-shared'\nimport { M3U8Parser } from './parser'\nimport { Event } from '../constants'\nimport { HlsUrlParameters } from './parser/model'\n\nexport class ManifestLoader {\n  constructor (hls) {\n    this.hls = hls\n    this._timer = null\n    this._useLowLatency = hls.config.useLowLatency\n\n    const { retryCount, retryDelay, manifestLoadTimeout, fetchOptions } = this.hls.config\n    this._loader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._audioLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n\n    this._subtitleLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'text',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: manifestLoadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n\n  }\n\n  async load (url, audioUrl, subtitleUrl) {\n    const toLoad = [this._loader.load(url)]\n    if (audioUrl) {\n      toLoad.push(this._audioLoader.load(audioUrl))\n    }\n\n    if (subtitleUrl) {\n      toLoad.push(this._subtitleLoader.load(subtitleUrl))\n    }\n\n    let videoText\n    let audioText\n    let subtitleText\n    let videoResUrl\n    let audioResUrl\n    let subtitleResUrl\n\n    try {\n      const [video, audio, subtitle] = await Promise.all(toLoad)\n      if (!video) return []\n\n      this._emitOnLoaded(video, url)\n\n      videoText = video.data\n      videoResUrl = video.response.url || url\n\n      if (audioUrl) {\n        audioText = audio?.data\n        subtitleText = subtitle?.data\n        audioResUrl = audio?.response?.url || audioUrl\n        subtitleResUrl = subtitle?.response?.url || subtitleUrl\n        audioText && this._emitOnLoaded(audio, audioUrl)\n        subtitleText && this._emitOnLoaded(subtitle, subtitleUrl)\n      } else {\n        subtitleText = audio?.data\n        subtitleResUrl = audio?.response?.url || subtitleUrl\n        subtitleText && this._emitOnLoaded(audio, subtitleUrl)\n      }\n\n    } catch (error) {\n      throw StreamingError.network(error)\n    }\n\n    const { onPreM3U8Parse } = this.hls.config\n\n    let playlist\n    let audioPlaylist\n    let subtitlePlaylist\n    try {\n      if (onPreM3U8Parse) {\n        videoText = onPreM3U8Parse(videoText) || videoText\n        if (audioText) audioText = onPreM3U8Parse(audioText, true) || audioText\n        if (subtitleText) subtitleText = onPreM3U8Parse(subtitleText, true) || subtitleText\n      }\n      playlist = M3U8Parser.parse(videoText, videoResUrl, this._useLowLatency)\n      if (playlist?.live === false && playlist.segments && !playlist.segments.length) {\n        throw new Error('empty segments list')\n      }\n      if (audioText) {\n        audioPlaylist = M3U8Parser.parse(audioText, audioResUrl, this._useLowLatency)\n      }\n      if (subtitleText) {\n        subtitlePlaylist = M3U8Parser.parse(subtitleText, subtitleResUrl, this._useLowLatency)\n      }\n\n    } catch (error) {\n      throw new StreamingError(ERR.MANIFEST, ERR.SUB_TYPES.HLS, error)\n    }\n    if (playlist) {\n      if (playlist.isMaster) {\n        this.hls.emit(Event.HLS_MANIFEST_LOADED, { playlist })\n      } else {\n        if (this._useLowLatency) {\n          if (playlist.canBlockReload) {\n            this.deliveryDirectives = new HlsUrlParameters(playlist.nextSN, playlist.nextIndex, '')\n          } else {\n            this.deliveryDirectives = null\n          }\n        }\n        this.hls.emit(Event.HLS_LEVEL_LOADED, { playlist })\n      }\n    }\n\n    return [playlist, audioPlaylist, subtitlePlaylist]\n  }\n\n  parseText (videoText, url) {\n    const { onPreM3U8Parse } = this.hls.config\n\n    let playlist\n    try {\n      if (onPreM3U8Parse) {\n        videoText = onPreM3U8Parse(videoText) || videoText\n      }\n      playlist = M3U8Parser.parse(videoText, url, this._useLowLatency)\n      if (playlist?.live === false && playlist.segments && !playlist.segments.length) {\n        throw new Error('empty segments list')\n      }\n    } catch (error) {\n      throw new StreamingError(ERR.MANIFEST, ERR.SUB_TYPES.HLS, error)\n    }\n    if (playlist) {\n      if (playlist.isMaster) {\n        this.hls.emit(Event.HLS_MANIFEST_LOADED, { playlist })\n      } else {\n        this.hls.emit(Event.HLS_LEVEL_LOADED, { playlist })\n      }\n    }\n    return [playlist]\n  }\n\n  poll (url, audioUrl, subtitleUrl, cb, errorCb, time) {\n    clearTimeout(this._timer)\n    time = time || 3000\n    let retryCount = this.hls.config.pollRetryCount\n    const fn = async () => {\n      clearTimeout(this._timer)\n      let reqUrl = url\n      try {\n        if (this.deliveryDirectives) {\n          reqUrl = this.deliveryDirectives.addDirectives(url)\n        }\n        const res = await this.load(reqUrl, audioUrl, subtitleUrl)\n        if (!res[0]) return\n        retryCount = this.hls.config.pollRetryCount\n        cb(res[0], res[1], res[2])\n      } catch (e) {\n        retryCount--\n        if (retryCount <= 0) {\n          errorCb(e)\n        }\n      }\n      this._timer = setTimeout(fn, time)\n    }\n    this._timer = setTimeout(fn, time)\n  }\n\n  stopPoll () {\n    clearTimeout(this._timer)\n    return this.cancel()\n  }\n\n  cancel () {\n    return Promise.all([\n      this._loader.cancel(),\n      this._audioLoader.cancel()\n    ])\n  }\n\n  _emitOnLoaded = (res, url) => {\n    const { response, options } = res\n    const { firstByteTime, startTime, endTime, contentLength } = options || {}\n    const time = endTime - startTime\n\n    this.hls.emit(EVENT.SPEED, { time, byteLength: contentLength, url })\n    this.hls.emit(EVENT.LOAD_COMPLETE, { url, elapsed: time || 0 })\n    this.hls.emit(EVENT.TTFB, { url, responseUrl: response.url, elapsed: firstByteTime - startTime })\n    this.hls.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers: response.headers, url })\n  }\n\n  _onLoaderRetry = (error, retryTime) => {\n    this.hls.emit(Event.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n}\n","export function clamp (num, min, max) {\n  if (min > max) {\n    max = min\n  }\n  return Math.min(Math.max(num, min), max)\n}\n","import { Logger } from 'xgplayer-streaming-shared'\n\nconst logger = new Logger('playlist')\n\nexport class Stream {\n  live = undefined\n  id = 0\n  bitrate = 0\n  width = 0\n  height = 0\n  name = ''\n  url = ''\n  audioCodec = ''\n  videoCodec = ''\n  textCodec = ''\n\n  startCC = 0\n  endCC = 0\n  startSN = 0\n  endSN = -1\n  totalDuration = 0\n  targetDuration = 0\n\n  partTargetDuration = 0\n  canSkipUntil = 0\n  canSkipDateRanges = false\n  skippedSegments = 0\n  canBlockReload = false\n  partHoldBack = 0\n  lowLatency = false\n  endPartIndex = 0\n\n  snDiff = null // number\n\n  segments = []\n\n  /** @type {import('../../parser/model').AudioStream[]} */\n  audioStreams = []\n\n  /** @type {import('../../parser/model').SubTitleStream[]} */\n  subtitleStreams = []\n\n  /** @type {import('../../parser/model').ClosedCaptionsStream[]} */\n  closedCaptions = []\n\n  /** @type {import('../../parser/model').AudioStream | null} */\n  currentAudioStream = null\n\n  /** @type {import('../../parser/model').subtitleStreams | null} */\n  currentSubtitleStream = null\n\n  /**\n   * asdasd {@link AudioStream}\n   */\n  get lastSegment () {\n    if (this.segments.length) {\n      return this.segments[this.segments.length - 1]\n    }\n    return null\n  }\n\n  get segmentDuration () {\n    return this.targetDuration || this.segments[0]?.duration || 0\n  }\n\n  get liveEdge () {\n    return this.endTime\n  }\n\n  set liveEdge (end) {\n    this.endTime = end\n  }\n\n  get endTime () {\n    return this.lastSegment?.end || 0\n  }\n\n  set endTime (end) {\n    const lastSeg = this.lastSegment\n    if (lastSeg)\n      lastSeg.duration = end - lastSeg.start\n  }\n\n  get currentSubtitleEndSn () {\n    return this.currentSubtitleStream?.endSN || 0\n  }\n\n  constructor (playlist, audioPlaylist, subtitlePlaylist) {\n    this.update(this._setLLPlaybackPoint(playlist), audioPlaylist, subtitlePlaylist)\n  }\n\n  clearOldSegment (startTime, pointer) {\n    if (this.currentAudioStream) {\n      this._clearSegments(startTime, pointer)\n    }\n\n    return this._clearSegments(startTime, pointer)\n  }\n\n  getAudioSegment (seg) {\n    if (!seg || !this.currentAudioStream) return\n    const sn = seg.sn - this.snDiff\n    return this.currentAudioStream.segments.find(x => x.sn === sn)\n  }\n\n  update (playlist, audioPlaylist) {\n    this.url = playlist.url\n    if (Array.isArray(playlist.segments)) { // media\n      if (this.live === null || this.live === undefined) this.live = playlist.live\n      this._updateSegments(playlist, this)\n\n      this.startCC = playlist.startCC\n      this.endCC = playlist.endCC\n      this.startSN = playlist.startSN\n      this.endSN = playlist.endSN || -1\n      this.totalDuration = playlist.totalDuration\n      this.targetDuration = playlist.targetDuration\n      this.live = playlist.live\n\n      this.lowLatency = playlist.lowLatency\n      this.canBlockReload = playlist.canBlockReload\n      this.canSkipDateRanges = playlist.canSkipDateRanges\n      this.canSkipUntil = playlist.canSkipUntil\n      this.partHoldBack = playlist.partHoldBack\n      this.partTargetDuration = playlist.partTargetDuration\n      this.skippedSegments = playlist.skippedSegments\n      this.endPartIndex = playlist.endPartIndex\n\n      if (audioPlaylist && this.currentAudioStream && Array.isArray(audioPlaylist.segments)) {\n        this._updateSegments(audioPlaylist, this.currentAudioStream)\n        if ((this.snDiff === null || this.snDiff === undefined) && playlist.segments.length && audioPlaylist.segments.length) {\n          this.snDiff = playlist.segments[0].sn - audioPlaylist.segments[0].sn\n        }\n      }\n\n    } else { // master stream\n      this.id = playlist.id\n      this.bitrate = playlist.bitrate\n      this.width = playlist.width\n      this.height = playlist.height\n      this.name = playlist.name\n      this.audioCodec = playlist.audioCodec\n      this.videoCodec = playlist.videoCodec\n      this.textCodec = playlist.textCodec\n      this.audioStreams = playlist.audioStreams\n      this.subtitleStreams = playlist.subtitleStreams\n      if (!this.currentAudioStream && this.audioStreams.length) {\n        this.currentAudioStream = this.audioStreams.find(x => x.default) || this.audioStreams[0]\n      }\n\n      if (!this.currentSubtitleStream && this.subtitleStreams.length) {\n        this.currentSubtitleStream = this.subtitleStreams.find(x => x.default) || this.subtitleStreams[0]\n      }\n    }\n  }\n\n  updateSubtitle (subtitlePlaylist) {\n    if (!(subtitlePlaylist && this.currentSubtitleStream && Array.isArray(subtitlePlaylist.segments))) return\n\n    const newSegs = this._updateSegments(subtitlePlaylist, this.currentSubtitleStream)\n    const segs = this.currentSubtitleStream.segments\n    if (segs.length > 100 ) {\n      this.currentSubtitleStream.segments = segs.slice(100)\n    }\n\n    if (!newSegs) return\n\n    return newSegs.map(x => {\n      return {\n        sn: x.sn,\n        url: x.url,\n        duration: x.duration,\n        start: x.start,\n        end: x.end,\n        lang: this.currentSubtitleStream.lang\n      }\n    })\n  }\n\n\n  switchSubtitle (lang) {\n    const toSwitch = this.subtitleStreams.find(x => x.lang === lang)\n    const origin = this.currentSubtitleStream\n    if (toSwitch) {\n      this.currentSubtitleStream = toSwitch\n      origin.segments = []\n    }\n  }\n\n  _setLLPlaybackPoint (playlist) {\n    if (!playlist.lowLatency || !playlist.segments.length) return playlist\n\n    const maxStartPoint = playlist.totalDuration - playlist.partHoldBack\n    const segs = playlist.segments\n    let index = 0\n\n    for (let i = 0, l = segs.length; i < l; i++) {\n      if (segs[i].start <= maxStartPoint && segs[i].independent) {\n        index = i\n      }\n    }\n\n    const usefulSegs = segs.slice(index)\n    let endTime = 0\n\n    usefulSegs.forEach(s => {\n      s.start = endTime\n      endTime = s.end\n    })\n\n    playlist.segments = usefulSegs\n    playlist.totalDuration = endTime\n    playlist.startSN = usefulSegs[0].sn\n    playlist.startCC = usefulSegs[0].cc\n\n    logger.log(`set ll-hls playback point: SN=${playlist.startSN} partIndex=${usefulSegs[0].partIndex}, duration=${endTime}`)\n\n    return playlist\n\n  }\n\n  _clearSegments (startTime, pointer) {\n    let sliceStart = 0\n    const segments = this.segments\n    for (let i = 0, l = segments.length; i < l; i++) {\n      if (segments[i].end >= startTime) {\n        sliceStart = i\n        break\n      }\n    }\n\n    if (sliceStart > pointer) {\n      sliceStart = pointer\n    }\n\n    if (sliceStart) {\n      this.segments = this.segments.slice(sliceStart)\n      if (this.currentAudioStream) {\n        this.currentAudioStream.segments = this.currentAudioStream.segments.slice(sliceStart)\n      }\n    }\n\n    return pointer - sliceStart\n  }\n\n  _updateSegments (playlist, segObj) {\n    const segments = segObj.segments\n    if (this.live) {\n      const lowLatency = playlist.lowLatency\n      const endSeg = segments[segments.length - 1]\n      const endSN = endSeg?.sn ?? -1\n      const endPartIndex = endSeg?.partIndex || 0\n\n      let hasNew = endSN < playlist.endSN && playlist.segments.length\n\n      if (lowLatency) {\n        hasNew = hasNew || endPartIndex < playlist.endPartIndex\n      }\n\n      if (hasNew) {\n        logger.log(`update segments: endSN:${endSN}, partIndex:${endPartIndex} --> endSN:${playlist.endSN}, partIndex:${playlist.endPartIndex}`)\n        const index = playlist.segments.findIndex(x => x.sn === endSN && x.partIndex === endPartIndex)\n        const toAppend = index < 0 ? playlist.segments : playlist.segments.slice(index + 1)\n\n        if (segments.length && toAppend.length) {\n          let endTime = endSeg.end\n          const endTimeBeforeAppend = endTime\n          toAppend.forEach(seg => {\n            seg.start = endTime\n            endTime = seg.end\n          })\n\n          logger.log(`liveEdge: ${endTimeBeforeAppend} -> ${endTime}`)\n\n          const lastCC = endSeg?.cc || -1\n          if (lastCC > toAppend[0].cc) {\n            toAppend.forEach(seg => (seg.cc += lastCC))\n          }\n        }\n        segObj.endSN = playlist.endSN\n        segObj.segments = segments.concat(toAppend)\n\n        return toAppend\n      }\n    } else {\n      segObj.segments = playlist.segments\n    }\n  }\n\n}\n","import { clamp } from '../utils'\nimport { Stream } from './stream'\nimport { Event } from '../constants'\n\nexport class Playlist {\n  /** @type {import('./stream').Stream[]} */\n  streams = []\n\n  /** @type {import('./stream').Stream} */\n  currentStream = null\n\n  dvrWindow = 0\n\n  _segmentPointer = -1\n\n  constructor (hls) {\n    this.hls = hls\n  }\n\n  get lowLatency () {\n    return this.currentStream?.lowLatency\n  }\n\n  get lastSegment () {\n    return this.currentStream?.lastSegment\n  }\n\n  get currentSegment () {\n    return this.currentSegments?.[this._segmentPointer]\n  }\n\n  get nextSegment () {\n    return this.currentSegments?.[this._segmentPointer + 1]\n  }\n\n  get currentSegments () {\n    return this.currentStream?.segments\n  }\n\n  get currentSubtitleEndSn () {\n    return this.currentStream?.currentSubtitleEndSn\n  }\n\n  get liveEdge () {\n    return this.currentStream?.liveEdge\n  }\n\n  set liveEdge (end) {\n    if (this.currentStream) {\n      this.currentStream.liveEdge = end\n    }\n  }\n\n  get totalDuration () {\n    return this.currentStream?.totalDuration || 0\n  }\n\n  get seekRange () {\n    const segments = this.currentSegments\n    if (!segments || !segments.length) return\n    return [\n      segments[0].start,\n      segments[segments.length - 1].end\n    ]\n  }\n\n  get nbSegments () {\n    return this.currentSegments?.length || 0\n  }\n\n  get isEmpty () {\n    return !this.currentSegments?.length\n  }\n\n  get isLive () {\n    return this.currentStream?.live\n  }\n\n  get hadSegmentLoaded () {\n    return this._segmentPointer !== -1\n  }\n\n  get hasSubtitle () {\n    return !!this.currentStream?.currentSubtitleStream\n  }\n\n  getAudioSegment (seg) {\n    return this.currentStream?.getAudioSegment(seg)\n  }\n\n  moveSegmentPointer (pos) {\n    if (pos === null || pos === undefined) pos = this._segmentPointer + 1\n    this._segmentPointer = clamp(pos, -1, this.currentSegments?.length)\n  }\n\n  reset () {\n    this.streams = []\n    this.currentStream = null\n    this.dvrWindow = 0\n    this._segmentPointer = -1\n  }\n\n  getSegmentByIndex (index) {\n    return this.currentSegments?.[index]\n  }\n\n  setNextSegmentByIndex (index = 0) {\n    this._segmentPointer = index - 1\n  }\n\n  setNextSegmentBySN (sn = 0) {\n    const preIndex = this.currentSegments?.findIndex(x => x.sn === sn)\n    if (preIndex !== -1) {\n      this.setNextSegmentByIndex(preIndex + 1)\n    }\n    return preIndex\n  }\n\n  findSegmentIndexByTime (time) {\n    const segments = this.currentSegments\n    if (segments) {\n      for (let i = 0, l = segments.length, seg; i < l; i++) {\n        seg = segments[i]\n        if (time >= seg.start && time < seg.end) {\n          return i\n        }\n      }\n\n      const lastSegment = segments[segments.length - 1]\n      if (Math.abs(time - lastSegment?.end) < 0.2) return segments.length - 1\n    }\n  }\n\n  upsertPlaylist (playlist, audioPlaylist, subtitlePlaylist) {\n    if (!playlist) return\n    if (playlist.isMaster) {\n      this.streams.length = playlist.streams.length\n      playlist.streams.filter(x => x.url).forEach((stream, i) => {\n        if (this.streams[i]) {\n          this.streams[i].update(stream)\n        } else {\n          this.streams[i] = new Stream(stream)\n        }\n      })\n      this.currentStream = this.streams[0]\n      // update media\n    } else if (Array.isArray(playlist.segments)) {\n      const stream = this.currentStream\n      if (stream) {\n        stream.update(playlist, audioPlaylist, subtitlePlaylist)\n        const newSubtitleSegs = stream.updateSubtitle(subtitlePlaylist)\n        if (newSubtitleSegs) {\n          this.hls.emit(Event.SUBTITLE_SEGMENTS, {\n            list: newSubtitleSegs\n          })\n        }\n      } else {\n        this.reset()\n        this.currentStream = this.streams[0] = new Stream(playlist, audioPlaylist, subtitlePlaylist)\n      }\n    }\n\n    const currentStream = this.currentStream\n\n    if (currentStream) {\n      if (this.hls.isLive && !this.dvrWindow) {\n        this.dvrWindow = this.currentSegments.reduce((a, c) => {\n          a += c.duration\n          return a\n        }, 0)\n      }\n    }\n  }\n\n  updateSegmentsRanges (sn, start) {\n    const segs = this.currentSegments?.filter(x => x.sn >= sn)\n    segs.forEach(s => {\n      s.start = start\n      start = s.end\n    })\n  }\n\n  switchSubtitle (lang) {\n    this.currentStream?.switchSubtitle(lang)\n  }\n\n  clearOldSegment (maxPlaylistSize = (this.hls.config.maxPlaylistSize || 50)) {\n    const stream = this.currentStream\n    if (!this.dvrWindow || !stream) return\n    const startTime = stream.endTime - this.dvrWindow\n    if (startTime <= 0) return\n    const segments = stream.segments\n    if (segments.length <= maxPlaylistSize) return\n\n    this._segmentPointer = stream.clearOldSegment(startTime, this._segmentPointer)\n  }\n\n  checkSegmentTrackChange (cTime, nbSb) {\n    const index = this.findSegmentIndexByTime(cTime)\n    const seg = this.getSegmentByIndex(index)\n\n    if (!seg) return\n\n    if (!seg.hasAudio && !seg.hasVideo) return\n\n    // when seek\n    if (nbSb !== 2 && seg.hasAudio && seg.hasVideo) return seg\n\n    // continuous play\n    if (seg.end - cTime > 0.3) return\n\n    const next = this.getSegmentByIndex(index + 1)\n\n    if (!next) return\n\n    if (!next.hasAudio && !next.hasVideo) return\n\n    if ((next.hasAudio !== seg.hasAudio || next.hasVideo !== seg.hasVideo)) return next\n  }\n\n  feedbackLiveEdge (segment, bufferEnd) {\n    const segs = this.currentSegments\n    if (!segs) return\n    const isLast = this.lastSegment?.sn === segment.sn\n    if (isLast) {\n      this.liveEdge = bufferEnd\n      return\n    }\n\n    this.updateSegmentsRanges(segment.sn + 1, bufferEnd)\n  }\n\n}\n","import { NetLoader, EVENT, BandwidthService, StreamingError } from 'xgplayer-streaming-shared'\n\n\n/**\n * @typedef {import('../manifest-loader/parser/model').MediaSegment} MediaSegment\n */\n\nexport class SegmentLoader {\n  /** @type {Error} */\n  error = null\n\n  constructor (hls) {\n    this.hls = hls\n    this._bandwidthService = new BandwidthService()\n    this._mapCache = {}\n    this._keyCache = {}\n\n    const { retryCount, retryDelay, loadTimeout, fetchOptions } = this.hls.config\n    this._segmentLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._audioSegmentLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n    this._keyLoader = new NetLoader({\n      ...fetchOptions,\n      responseType: 'arraybuffer',\n      retry: retryCount,\n      retryDelay: retryDelay,\n      timeout: loadTimeout,\n      onRetryError: this._onLoaderRetry\n    })\n  }\n\n  speedInfo () {\n    return {\n      speed: this._bandwidthService.getLatestSpeed(),\n      avgSpeed: this._bandwidthService.getAvgSpeed()\n    }\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {MediaSegment} audioSeg\n   * @param {boolean} loadInit\n   * @param {boolean} loadAudioInit\n   */\n  load (seg, audioSeg, loadInit, loadAudioInit = loadInit) {\n    const toLoad = []\n    if (seg) toLoad[0] = this.loadVideoSegment(seg, loadInit)\n    if (audioSeg) toLoad[1] = this.loadAudioSegment(audioSeg, loadAudioInit)\n    return Promise.all(toLoad)\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  loadVideoSegment (seg, loadInit) {\n    return this._loadSegment(this._segmentLoader, seg, loadInit)\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  loadAudioSegment (seg, loadInit) {\n    return this._loadSegment(this._audioSegmentLoader, seg, loadInit)\n  }\n\n  /**\n   * @param {NetLoader} segLoader\n   * @param {MediaSegment} seg\n   * @param {boolean} loadInit\n   */\n  async _loadSegment (segLoader, seg, loadInit) {\n    let map\n    let key\n    let keyIv\n    let mapKey\n    let mapKeyIv\n    const toLoad = []\n\n    this.hls.emit(EVENT.LOAD_START, { url: seg.url })\n    toLoad[0] = segLoader.load(seg.url)\n    if (loadInit && seg.initSegment) {\n      const mapUrl = seg.initSegment.url\n      map = this._mapCache[mapUrl]\n      if (!map) {\n        this.hls.emit(EVENT.LOAD_START, { url: mapUrl })\n        toLoad[1] = segLoader.load(mapUrl).then(r => {\n          if (r) {\n            const l = Object.keys(this._mapCache)\n            if (l > 30) this._mapCache = {}\n            map = this._mapCache[mapUrl] = r.data\n            this._emitOnLoaded(r, mapUrl)\n          }\n        })\n      }\n      const keyUrl = seg.initSegment.key?.url\n      if (keyUrl) {\n        mapKeyIv = seg.initSegment.key.iv\n        mapKey = this._keyCache[keyUrl]\n        if (!mapKey) {\n          this.hls.emit(EVENT.LOAD_START, { url: keyUrl })\n          toLoad[2] = this._keyLoader.load(keyUrl).then(r => {\n            if (r) {\n              mapKey = this._keyCache[keyUrl] = r.data\n              this._emitOnLoaded(r, keyUrl)\n            }\n          })\n        }\n      }\n    }\n\n    const keyUrl = seg.key?.url\n    if (keyUrl && seg.key.isSegmentEncrypted()) {\n      keyIv = seg.key.iv\n      key = this._keyCache[keyUrl]\n      if (!key) {\n        this.hls.emit(EVENT.LOAD_START, { url: keyUrl })\n        toLoad[3] = this._keyLoader.load(keyUrl).then(r => {\n          if (r) {\n            key = this._keyCache[keyUrl] = r.data\n            this._emitOnLoaded(r, keyUrl)\n          }\n        })\n      }\n    }\n\n    const [s] = await Promise.all(toLoad)\n    if (!s) return\n    const data = s.data\n    this._emitOnLoaded(s, seg.url)\n\n    return {\n      data,\n      map,\n      key,\n      mapKey,\n      keyIv,\n      mapKeyIv\n    }\n  }\n\n  reset () {\n    this.error = null\n    this._mapCache = {}\n    this._keyCache = {}\n    this._bandwidthService.reset()\n  }\n\n  async cancel () {\n    await Promise.all([this._keyLoader.cancel(), this._segmentLoader.cancel(), this._audioSegmentLoader.cancel()])\n  }\n\n  _emitOnLoaded = (res, url) => {\n    const { data, response, options } = res\n    const { firstByteTime, startTime, endTime, contentLength } = options || {}\n    const time = endTime - startTime\n\n    this._bandwidthService.addRecord(contentLength || data.byteLength, time)\n    this.hls.emit(EVENT.SPEED, { time, byteLength: contentLength, url })\n    this.hls.emit(EVENT.LOAD_COMPLETE, { url, elapsed: time || 0 })\n    this.hls.emit(EVENT.TTFB, { url, responseUrl: response.url, elapsed: firstByteTime - startTime })\n    this.hls.emit(EVENT.LOAD_RESPONSE_HEADERS, { headers: response.headers, url })\n  }\n\n  _onLoaderRetry = (error, retryTime) => {\n    this.hls.emit(EVENT.LOAD_RETRY, {\n      error: StreamingError.network(error),\n      retryTime\n    })\n  }\n}\n","import EventEmitter from 'eventemitter3'\nimport { Buffer, ERR, GapService, Logger, MSE, MediaStatsService, SeiService, StreamingError, getVideoPlaybackQuality, isMediaPlaying } from 'xgplayer-streaming-shared'\nimport { Logger as TransmuxerLogger } from 'xgplayer-transmuxer'\nimport { BufferService } from './buffer-service'\nimport { getConfig } from './config'\nimport { Event } from './constants'\nimport { ManifestLoader } from './manifest-loader'\nimport { Playlist } from './playlist'\nimport { SegmentLoader } from './segment-loader'\nimport { clamp } from './utils'\n\nexport { ManifestLoader, Playlist, SegmentLoader, getConfig }\n/**\n * @typedef {import('./manifest-loader/parser/model').MediaSegment} MediaSegment\n */\n/**\n * @typedef {import(\"../../../xgplayer-streaming-shared/es/services/stats\").StatsInfo} Stats\n */\n/**\n * @typedef {{\n *  seamless?: boolean,\n *  startTime?: number,\n *  bitrate?: number\n * }} SwitchUrlOptions\n */\n/**\n * @typedef {{\n*  reuseMse?: boolean,\n*  clearSwitchStatus?: boolean,\n* }} LoadOptions\n*/\n\nexport const logger = new Logger('hls')\n\nexport class Hls extends EventEmitter {\n  static version = __VERSION__\n  version = Hls.version\n  /** @type {HTMLMediaElement | null} */\n  media = null\n  /** @type {import('./config').HlsOption} */\n  config = null\n\n  /** @type {ManifestLoader} */\n  _manifestLoader = null\n\n  /** @type {SegmentLoader} */\n  _segmentLoader = null\n\n  /** @type {Playlist} */\n  _playlist = null\n\n  /** @type {BufferService} */\n  _bufferService = null\n\n  /** @type {GapService} */\n  _gapService = null\n\n  /** @type {SeiService} */\n  _seiService = null\n\n  /** @type {MediaStatsService} */\n  _stats = null\n\n  _prevSegSn = null\n  _prevSegCc = null\n\n  _tickTimer = null\n  _tickInterval = 500\n\n  _segmentProcessing = false\n  _reloadOnPlay = false\n\n  _switchUrlOpts = null\n  _isProcessQuotaExceeded = false\n\n  constructor (cfg) {\n    super()\n    this.config = cfg = getConfig(cfg)\n    this.media = this.config.media\n\n    this._manifestLoader = new ManifestLoader(this)\n    this._segmentLoader = new SegmentLoader(this)\n    this._playlist = new Playlist(this)\n    this._bufferService = new BufferService(this)\n    if (cfg.seiInTime) {\n      this._seiService = new SeiService(this)\n    }\n    if (!cfg.softDecode) this._gapService = new GapService()\n\n    this._stats = new MediaStatsService(this, 90000)\n\n    this.media.addEventListener('loadeddata', this._onLoadeddata)\n    this.media.addEventListener('play', this._onPlay)\n    this.media.addEventListener('pause', this._onPause)\n    this.media.addEventListener('seeking', this._onSeeking)\n    this.media.addEventListener('timeupdate', this._onTimeupdate)\n  }\n\n  get isLive () { return this._playlist.isLive }\n  get streams () { return this._playlist.streams }\n  get currentStream () { return this._playlist.currentStream }\n  get hasSubtitle () { return this._playlist.hasSubtitle}\n  get totalDuration () { return this._playlist.totalDuration}\n  get baseDts () { return this._bufferService?.baseDts }\n  get abrSwitchPoint () {\n    const targetSeg = this._urlSwitching\n      ? this._playlist.currentSegment\n      : this._playlist.nextSegment\n    return targetSeg ? targetSeg.start + targetSeg.duration / 2 : null\n  }\n\n  speedInfo () {\n    return this._segmentLoader.speedInfo()\n  }\n\n  bufferInfo (maxHole = 0.1) {\n    return Buffer.info(Buffer.get(this.media), this.media?.currentTime, maxHole)\n  }\n\n  /**\n   * @returns {Stats}\n   */\n  getStats () {\n    return this._stats.getStats()\n  }\n\n  playbackQuality () {\n    return getVideoPlaybackQuality(this.media)\n  }\n\n  /**\n   * @param {string} url\n   * @param {LoadOptions | boolean} options\n   */\n  async load (url = '', options = {}) {\n    const reuseMse = typeof options === 'boolean' ? options : !!options?.reuseMse\n\n    if (typeof options === 'object' && options?.clearSwitchStatus) {\n      this._urlSwitching = false\n      this._switchUrlOpts = null\n      this.config.startTime = undefined\n    }\n\n    if (url) this.config.url = url\n    url = this.config.url\n    await this._reset(reuseMse)\n    await this._loadData(url)\n    this._startTick()\n  }\n\n  /**\n   * @param {string} url\n   * @private\n   */\n  async _loadData (url) {\n    try {\n      if (url) url = url.trim()\n    } catch (e) {}\n\n    if (!url) throw this._emitError(new StreamingError(ERR.OTHER, ERR.SUB_TYPES.OPTION, null, null, 'm3u8 url is missing'))\n\n    const manifest = await this._loadM3U8(url)\n    const { currentStream } = this._playlist\n\n    if (this._urlSwitching) {\n      if (this.isLive) {\n        // skip loaded segment\n        const preIndex = this._playlist.setNextSegmentBySN(this._prevSegSn)\n        logger.log(`segment nb=${this._prevSegSn} index of ${preIndex} in the new playlist`)\n        // the new stream no matched with old one\n        if (preIndex === -1) {\n          this._prevSegCc = null\n          this._prevSegSn = null\n        }\n      } else {\n        if (currentStream.bitrate === 0 && this._switchUrlOpts?.bitrate) {\n          currentStream.bitrate = this._switchUrlOpts?.bitrate\n        }\n        const switchTimePoint = typeof this._switchUrlOpts?.startTime === 'number'\n          ? this._switchUrlOpts?.startTime\n          : this._getSeamlessSwitchPoint()\n        this.config.startTime = switchTimePoint\n\n        const segIdx = this._playlist.findSegmentIndexByTime(switchTimePoint)\n        const nextSeg = this._playlist.getSegmentByIndex(segIdx + 1)\n\n        if (nextSeg) {\n          // move to next segment in case of media stall\n          const bufferClearStartPoint = nextSeg.start\n          await this._bufferService.removeBuffer(bufferClearStartPoint)\n        }\n      }\n    }\n\n    if (!manifest) return\n\n    if (this.isLive) {\n      this._bufferService.setLiveSeekableRange(0, 0xffffffff)\n      logger.log('totalDuration first time got:', this._playlist.totalDuration)\n      logger.log('nb segments got:', this._playlist.nbSegments)\n\n      // 配置的目标延迟小于首次获取分片总时长\n      if (this.config.targetLatency < this._playlist.totalDuration) {\n        this.config.targetLatency = this._playlist.totalDuration\n        this.config.maxLatency = 1.5 * this.config.targetLatency\n      }\n\n      if (!manifest.isMaster) this._pollM3U8(url)\n      if (this._playlist.nbSegments < this.config.minSegmentsStartPlay) return\n\n      await this._loadSegment()\n      return\n    }\n\n    await this._bufferService.updateDuration(currentStream.totalDuration)\n\n    const { startTime } = this.config\n    if (startTime) {\n      if (!this._switchUrlOpts?.seamless) {\n        this.media.currentTime = startTime\n      }\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(startTime) || 0)\n    }\n\n    await this._loadSegment()\n  }\n\n  async replay (isPlayEmit) {\n    this.config.startTime = 0\n    this._urlSwitching = false\n    this._switchUrlOpts = null\n    await this.load()\n    this._reloadOnPlay = false\n    return this.media.play(!isPlayEmit)\n  }\n\n  /**\n   * @param {string} url\n   * @param {?SwitchUrlOptions} options\n   * @returns\n   */\n  async switchURL (url, options = {}) {\n    const defaultOpts = {\n      seamless: false,\n      startTime: 0,\n      bitrate: 0\n    }\n    switch (typeof options) {\n      case 'number':\n        options = {startTime: options}\n        break\n      case 'boolean':\n        options = {seamless: options}\n        break\n      case 'object':\n        for (const key in options) {\n          if (options[key] === undefined || options[key] === null) {\n            delete options[key]\n          }\n        }\n        break\n      default:\n        throw `unsupported switchURL args: ${options}`\n    }\n\n    options = Object.assign({}, defaultOpts, options)\n    const { seamless, startTime } = options\n    this.config.url = url\n    this.config.startTime = startTime\n    this._switchUrlOpts = options\n\n    if (!seamless) {\n      let appended\n      try {\n        appended = this.config.softDecode ? this.load(url) : (await this.load(url))\n      } catch (error) {\n        this.emit(Event.SWITCH_URL_FAILED, error)\n        throw error\n      }\n      this._reloadOnPlay = false\n\n      if (appended) {\n        this.emit(Event.SWITCH_URL_SUCCESS, { url })\n      }\n      return this.media.play(true)\n    } else {\n      this._urlSwitching = true\n      if (!this.isLive) {\n        this._prevSegSn = null\n        this._prevSegCc = null\n      }\n\n      this._playlist.reset()\n      this._bufferService.seamlessSwitch()\n      await this._clear()\n      await this._loadData(url)\n      this._startTick()\n    }\n\n    this._switchUrlOpts = null\n  }\n\n  async switchStream (id, force = true) {\n    const curStream = this.currentStream\n    const streams = this.streams\n    if (!curStream || curStream.id === id || !streams || streams.length < 2) return\n    const toSwitch = streams.find(x => x.id === id)\n    if (!toSwitch) return\n\n    try {\n      await this._clear()\n      if (force) await this._bufferService.clearAllBuffer()\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n\n    // 同步更新\n    if (curStream.currentAudioStream && toSwitch.audioStreams.length > 2) {\n      const curId = curStream.currentAudioStream.id\n      toSwitch.currentAudioStream = toSwitch.audioStreams.find(x => x.id === curId) || toSwitch.currentAudioStream\n    }\n\n    this._playlist.currentStream = toSwitch\n\n    try {\n      if (this.isLive || !toSwitch.segments.length) await this._refreshM3U8()\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(this.media.currentTime) || 0)\n      this._prevSegCc = null\n      await this._loadSegmentDirect()\n    } catch (error) {\n      this._playlist.currentStream = curStream\n      throw error\n    }\n\n    this._startTick()\n    return toSwitch\n  }\n\n  async switchAudioStream (id, force = true) {\n    const curStream = this.currentStream\n    if (!curStream) return\n    const audioStream = curStream.currentAudioStream\n    if (!audioStream || audioStream.id === id || curStream.audioStreams.length < 2) return\n    const toSwitch = curStream.audioStreams.find(x => x.id === id)\n    if (!toSwitch) return\n\n    try {\n      await this._clear()\n      if (force) await this._bufferService.clearAllBuffer()\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n\n    curStream.currentAudioStream = toSwitch\n\n    try {\n      if (this.isLive || !toSwitch.segments.length) await this._refreshM3U8()\n      this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(this.media.currentTime) || 0)\n      this._prevSegCc = null\n      await this._loadSegmentDirect()\n    } catch (error) {\n      curStream.currentAudioStream = audioStream\n      throw error\n    }\n\n    this._startTick()\n    return toSwitch\n  }\n\n  async switchSubtitleStream (lang) {\n    this._playlist.switchSubtitle(lang)\n    await this._manifestLoader.stopPoll()\n    await this._refreshM3U8()\n  }\n\n  async detachMedia () {\n    if (this._bufferService) {\n      await this._bufferService.detachMedia()\n    }\n  }\n\n  async destroy () {\n    if (!this.media) return\n    this.removeAllListeners()\n    this._playlist.reset()\n    this._segmentLoader.reset()\n    this._seiService?.reset()\n    this.media.removeEventListener('loadeddata', this._onLoadeddata)\n    this.media.removeEventListener('play', this._onPlay)\n    this.media.removeEventListener('pause', this._onPause)\n    this.media.removeEventListener('seeking', this._onSeeking)\n    this.media.removeEventListener('timeupdate', this._onTimeupdate)\n    await Promise.all([this._clear(), this._bufferService.destroy()])\n    this.media = null\n  }\n\n  /**\n   * @param {('video'|'audio')?} mediaType\n   * @returns {Boolean}\n   */\n  static isSupported (mediaType) {\n    if (!mediaType || mediaType === 'video' || mediaType === 'audio') {\n      return MSE.isSupported()\n    }\n\n    return typeof WebAssembly !== 'undefined'\n  }\n\n  static enableLogger () {\n    Logger.enable()\n    TransmuxerLogger.enable()\n  }\n\n  static disableLogger () {\n    Logger.disable()\n    TransmuxerLogger.disable()\n  }\n\n  /**\n   * @private\n   */\n  async _loadM3U8 (url) {\n    let playlist\n    try {\n      const manifest = this.config.manifestList?.filter(x => x.url === url)[0]?.manifest;\n\n      [playlist] = manifest\n        ? this._manifestLoader.parseText(manifest, url) :\n        await this._manifestLoader.load(url)\n    } catch (error) {\n      throw this._emitError(StreamingError.create(error))\n    }\n    if (!playlist) return\n    this._playlist.upsertPlaylist(playlist)\n\n    if (playlist.isMaster) {\n      if (this._playlist.currentStream.subtitleStreams?.length) {\n        this.emit(Event.SUBTITLE_PLAYLIST, {\n          list: this._playlist.currentStream.subtitleStreams\n        })\n      }\n      await this._refreshM3U8()\n    }\n    this.emit(Event.STREAM_PARSED)\n    return playlist\n  }\n\n  /**\n   * @private 首次更新 master playlist 的 media level\n   */\n  _refreshM3U8 () {\n    const stream = this._playlist.currentStream\n    if (!stream || !stream.url) throw this._emitError(StreamingError.create(null, null, new Error('m3u8 url is not defined')))\n    const url = stream.url\n    const audioUrl = stream.currentAudioStream?.url\n    const subtitleUrl = stream.currentSubtitleStream?.url\n    return this._manifestLoader.load(url, audioUrl, subtitleUrl).then(([mediaPlaylist, audioPlaylist, subtitlePlaylist]) => {\n      if (!mediaPlaylist) return\n      this._playlist.upsertPlaylist(mediaPlaylist, audioPlaylist, subtitlePlaylist)\n      if (!this.isLive) return\n      this._pollM3U8(url, audioUrl, subtitleUrl)\n    }).catch(err => {\n      throw this._emitError(StreamingError.create(err))\n    })\n  }\n\n  /**\n   * @private\n   */\n  _pollM3U8 (url, audioUrl, subtitleUrl) {\n    let isEmpty = this._playlist.isEmpty\n    let pollInterval\n\n    if (this._playlist.lowLatency) {\n      pollInterval = (this._playlist.currentStream.partTargetDuration || 0) * 1000\n    } else {\n      pollInterval = (this._playlist.lastSegment?.duration || 0) * 1000\n    }\n\n    this._manifestLoader.poll(\n      url,\n      audioUrl,\n      subtitleUrl,\n      (p1, p2, p3) => {\n        this._playlist.upsertPlaylist(p1, p2, p3)\n        this._playlist.clearOldSegment()\n        const switchToNoEmpty = p1 && isEmpty && !this._playlist.isEmpty\n        if (switchToNoEmpty || (!this._playlist.hadSegmentLoaded && this._playlist.nbSegments >= this.config.minSegmentsStartPlay)) {\n          this._loadSegment()\n        }\n        if (isEmpty) isEmpty = this._playlist.isEmpty\n      }, (err) => {\n        this._emitError(StreamingError.create(err))\n      },\n      // 刷新时间\n      pollInterval\n    )\n  }\n\n  /**\n   * @private\n   */\n  _loadSegment = async () => {\n    if (this._segmentProcessing || !this.media) return\n    const { nextSegment, lastSegment } = this._playlist\n    const { config } = this\n    const minFrameDuration = 0.016\n    // Constrain in the range of 0.016 ~ 0.1, 0.016 is the duration of 1 frame at 60fps\n    // “minFrameDuration / 2” is to handle the media buffer precision deviation problem\n    const maxBufferThroughout = Math.min(\n      Math.max(lastSegment?.duration - minFrameDuration / 2 || 0, minFrameDuration),\n      0.1\n    )\n\n    if (!nextSegment) return\n\n    if (!this.isLive) {\n      let bInfo = this.bufferInfo()\n      if (this.media.paused && !this.media.currentTime) {\n        bInfo = this.bufferInfo(bInfo.nextStart || 0.5)\n      }\n      const bufferThroughout = Math.abs(bInfo.end - this.media.duration) < maxBufferThroughout\n      if (bInfo.remaining >= config.preloadTime || bufferThroughout) {\n        this._tryEos()\n        return\n      }\n\n      if (config.preferMMSStreaming && !this._bufferService.msStreaming) {\n        return\n      }\n\n      // reset segment pointer by buffer end\n      if (!this._urlSwitching &&\n        this._prevSegSn !== nextSegment.sn - 1 &&\n        bInfo.end &&\n        Math.abs(nextSegment.start - bInfo.end) > 1) {\n        this._playlist.setNextSegmentByIndex(this._playlist.findSegmentIndexByTime(bInfo.end + 0.1))\n      }\n    }\n\n    return this._loadSegmentDirect()\n  }\n\n\n  /**\n   * @private\n   */\n  async _loadSegmentDirect (loadOnce) {\n    const seg = this._playlist.nextSegment\n    if (!seg) return\n\n    let appended = false\n    let cachedError = null\n    try {\n      this._segmentProcessing = true\n      logger.log(`load segment, sn:${seg.sn}, [${seg.start}, ${seg.end}], partIndex:${seg.partIndex}`)\n      appended = await this._reqAndBufferSegment(seg, this._playlist.getAudioSegment(seg))\n    } catch (error) {\n      // If an exception is thrown here, other reference functions\n      // need to handle the exception, so the error stops here\n      cachedError = error\n    } finally {\n      this._segmentProcessing = false\n    }\n\n    if (cachedError) {\n      if (this._bufferService.isFull()) {\n        logger.log(`load segment, sn:${seg.sn}, partIndex:${seg.partIndex}`)\n        // if buffer is full, stop request new fragments\n        this._segmentProcessing = true\n        this._isProcessQuotaExceeded = true\n        return false\n      }\n      return this._emitError(StreamingError.create(cachedError))\n    }\n    if (appended) {\n      const bufferEnd = this.bufferInfo().end\n      if (this.isLive && !this.media.seeking && bufferEnd && Math.abs(seg.end - bufferEnd) > 1) {\n        logger.warn(`segment: ${seg.sn} expected end=${seg.end}, real end=${bufferEnd}`)\n        this._playlist.feedbackLiveEdge(seg, bufferEnd)\n      }\n\n      const sameStream = this._playlist.currentStream?.url === seg.parentUrl\n      // switching -> pre playlist segment appended -> new playlist loaded -> new playlist segment appended\n      // _needInitSegment status maybe reset by pre playlist segment appendBuffer()\n      if (this._urlSwitching && !sameStream) {\n        logger.warn('pre playlist segment appended!')\n        this._bufferService.seamlessSwitch()\n      }\n\n      // switching -> new playlist loaded -> new playlist segment appended\n      if (this.isLive && this._urlSwitching && sameStream) {\n        this._urlSwitching = false\n        this.emit(Event.SWITCH_URL_SUCCESS, { url: this.config.url })\n      }\n\n      this._playlist.moveSegmentPointer()\n      if (seg.isLast) {\n        this._end()\n      } else if (!loadOnce) {\n        this._loadSegment()\n      }\n    }\n\n    return appended\n  }\n\n  /**\n   * @param {MediaSegment} seg\n   * @param {MediaSegment} audioSeg\n   * @private\n   */\n  async _reqAndBufferSegment (seg, audioSeg) {\n    const cc = seg ? seg.cc : audioSeg.cc\n    const discontinuity = this._prevSegCc !== cc\n    let responses = []\n    try {\n      responses = await this._segmentLoader.load(seg, audioSeg, discontinuity)\n    } catch (e) {\n      e.fatal = false\n      this._segmentLoader.error = e\n      throw e\n    }\n    if (!responses[0]) return\n    const data = await this._bufferService.decryptBuffer(...responses)\n    if (!data) return\n    const sn = seg ? seg.sn : audioSeg.sn\n    let start = seg ? seg.start : audioSeg.start\n    const stream = this._playlist.currentStream\n    this._bufferService.createSource(data[0], data[1], stream?.videoCodec, stream?.audioCodec)\n    const before = Date.now()\n    const contiguous = this._prevSegSn === sn - 1\n    if (this.isLive && this._urlSwitching) {\n      const segStart = this.bufferInfo().end\n      // update the new segements [start、end] to match timeline.\n      // (this appended segment duration maybe not matched with m3u8 description)\n      this._playlist.updateSegmentsRanges(sn, segStart)\n      logger.warn(`update the new playlist liveEdge, segment id=${sn}, buffer start=${segStart}, liveEdge=${this._playlist.liveEdge}`)\n      start = segStart\n    }\n    await this._bufferService.appendBuffer(seg, audioSeg, data[0], data[1], discontinuity, contiguous, start)\n    this.emit(Event.APPEND_COST, {elapsed: Date.now() - before, url: seg.url})\n    await this._bufferService.evictBuffer(this.config.bufferBehind)\n    this._prevSegCc = cc\n    this._prevSegSn = sn\n    return true\n  }\n\n  /**\n   * @private\n   */\n  _onLoadeddata = () => {\n    if (this.isLive && !this.config.mseLowLatency) {\n      // update duration to Infinity\n      if (this.media.duration !== Infinity) {\n        this._bufferService.updateDuration(Infinity).catch(e=>{})\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onPlay = async () => {\n    // fix replay 重复请求问题\n    if (this.media.seeking && this.media.currentTime === 0){\n      logger.debug('replay currentTime 0, return')\n      return\n    }\n    clearTimeout(this._disconnectTimer)\n    if (this._reloadOnPlay) {\n      this._reloadOnPlay = false\n      this.replay(true)\n    } else {\n      await this._loadSegment()\n      this._startTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onPause = () => {\n    if (this.isLive) {\n      if (!this._reloadOnPlay) {\n        let { disconnectTime } = this.config\n        if (disconnectTime === null || disconnectTime === undefined) disconnectTime = this._playlist.dvrWindow\n        if (!Number.isFinite(disconnectTime)) return\n        clearTimeout(this._disconnectTimer)\n        this._disconnectTimer = setTimeout(() => {\n          this._reloadOnPlay = true\n          this._clear()\n        }, disconnectTime || 0)\n      }\n    } else {\n      this._stopTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onSeeking = async () => {\n    if (!this.media) return\n    this._onCheckQuotaExceeded()\n    const seekTime = this.media.currentTime\n    const seekRange = this._playlist.seekRange\n    if (seekRange) {\n      const newSeekTime = clamp(seekTime, seekRange[0], this.isLive ? seekRange[1] : this.media.duration)\n      if (\n        // if newSeekTime less than 0, media.currentTime will be 0, this causes an infinite loop\n        newSeekTime >= 0 &&\n        Math.abs(seekTime - newSeekTime) >= 0.1\n      ) {\n        this.media.currentTime = newSeekTime\n        return\n      }\n    }\n\n    const curSeg = this._playlist.currentSegment\n    const info = Buffer.info(Buffer.get(this.media), seekTime, 0.1)\n    if (curSeg) {\n      if (info.end && Math.abs(info.end - curSeg.end) < 0.2) return\n      if (this.isLive && info.end) return\n    }\n\n    const segIndex = this._playlist.findSegmentIndexByTime(seekTime)\n    const seg = this._playlist.getSegmentByIndex(segIndex)\n    if (segIndex === null || segIndex === undefined || !seg || (this._segmentProcessing && seg === this._playlist.nextSegment)) return\n\n    logger.debug('seek to', seekTime, seg)\n\n    this._playlist.setNextSegmentByIndex(segIndex)\n\n    this._stopTick()\n    await this._segmentLoader.cancel()\n\n    this._segmentProcessing = false\n    if (!info.end || this.isLive) {\n      await this._loadSegmentDirect(true)\n    }\n    this._startTick()\n  }\n\n  async _onCheckQuotaExceeded (){\n    const seekTime = this.media.currentTime\n    // handle buffer QuotaExceeded when seek\n    const buffered = this.media.buffered\n    let inBuffered = false\n    for (let i = 0; i < buffered.length; i++){\n      if (buffered.start(0) >= seekTime && seekTime < buffered.end(i)){\n        inBuffered = true\n        break\n      }\n    }\n    if (this._bufferService.isFull() ) {\n      const bufferBehind = inBuffered ? this.config.bufferBehind : 5\n      const mediaTime = this.media.currentTime\n      if (mediaTime - bufferBehind > 0){\n        await this._bufferService.removeBuffer(0, mediaTime - bufferBehind)\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  _onTimeupdate = () => {\n    if (!this.media) return\n    const cfg = this.config\n    if (cfg.isLive && cfg.maxLatency && cfg.targetLatency) {\n      const liveEdge = this._playlist.liveEdge\n      if (!liveEdge) return\n      const latency = liveEdge - this.media.currentTime\n      if (latency >= cfg.maxLatency) {\n        logger.debug(`latency jump, currentTime:${this.media.currentTime}, liveEdge:${liveEdge},  latency=${latency}`)\n        this.media.currentTime = liveEdge - cfg.targetLatency\n      }\n    }\n\n    if (cfg.seiInTime) {\n      this._seiService?.throw(this.media.currentTime)\n    }\n\n    if (cfg.allowedStreamTrackChange && !cfg.softDecode && this.media.readyState) {\n      this._checkStreamTrackChange(this.media.currentTime)\n    }\n  }\n\n  _checkStreamTrackChange (time) {\n    const changedSeg = this._playlist.checkSegmentTrackChange(time, this._bufferService.nbSb)\n    if (!changedSeg) return\n    this.switchURL(this.config.url, changedSeg.start + 0.2)\n  }\n\n  /**\n   * @private\n   */\n  async _clear () {\n    clearTimeout(this._disconnectTimer)\n    this._stopTick()\n    await Promise.all([\n      this._segmentLoader.cancel(),\n      this._manifestLoader.stopPoll()\n    ])\n    this._segmentProcessing = false\n  }\n\n  /**\n   * @private\n   */\n  async _reset (reuseMse = false) {\n    this._reloadOnPlay = false\n    this._prevSegSn = null\n    this._prevSegCc = null\n    this._switchUrlOpts = null\n    this._playlist.reset()\n    this._segmentLoader.reset()\n    this._seiService?.reset()\n    this._stats.reset()\n    await this._clear()\n    return this._bufferService.reset(reuseMse)\n  }\n\n  /**\n   * @private\n   */\n  _end () {\n    this._clear()\n    this._bufferService.endOfStream()\n    if (this.media.readyState <= 2 || this.media.buffered.length > 1) {\n      this._startTick()\n    }\n  }\n\n  /**\n   * @private\n   */\n  _stopTick () {\n    if (this._tickTimer) {\n      clearTimeout(this._tickTimer)\n    }\n    this._tickTimer = null\n  }\n\n  /**\n   * @private\n   */\n  _startTick () {\n    this._stopTick()\n    this._tickTimer = setTimeout(this._tick, this._tickInterval)\n  }\n\n  /**\n   * @private\n   */\n  _tick = () => {\n    if (!this.media) return\n    this._startTick()\n    const media = this.media\n    // const buffered = Buffer.get(media)\n    const segLoaderError = this._segmentLoader.error\n    this._onCheckQuotaExceeded()\n    // change _segmentProcessing to false\n    if (this._isProcessQuotaExceeded){\n      if (!this._bufferService.isFull()){\n        this._isProcessQuotaExceeded = false\n        this._segmentProcessing = false\n      }\n    }\n    if (segLoaderError) {\n      // Compatible with the case where the buffer does not start from 0\n      const bufferMaxHoleTolerance = 0.5\n\n      if (!media.readyState || this.bufferInfo(bufferMaxHoleTolerance).remaining < 1) {\n        segLoaderError.fatal = true\n        this._emitError(StreamingError.network(segLoaderError))\n      }\n      return\n    }\n\n    if (media.readyState) {\n      if (isMediaPlaying(media)) {\n        this._loadSegment()\n        if (this._gapService) {\n          this._gapService.do(media, this.config.maxJumpDistance, this.isLive)\n        }\n      } else {\n        if (media.readyState < 2 && this._gapService) {\n          this._gapService.do(media, this.config.maxJumpDistance, !media.currentTime ? true : this.isLive)\n        }\n      }\n    }\n\n    if (!this.isLive) {\n      this._tryEos()\n    }\n  }\n\n  /**\n   * @param {StreamingError} error\n   * @param {boolean?} endOfStream\n   * @private\n   */\n  _emitError (error, endOfStream = false) {\n    if (error.originError?.fatal === false) {\n      logger.warn(error)\n    } else {\n      logger.table(error)\n      logger.error(error)\n      logger.error(this.media?.error)\n\n      if (this.media?.readyState) {\n        this.media.pause()\n      }\n      this._stopTick()\n      if (this._urlSwitching) {\n        this._urlSwitching = false\n        this.emit(Event.SWITCH_URL_FAILED, error)\n      }\n      this.emit(Event.ERROR, error)\n      if (endOfStream) this._end()\n      this._seiService?.reset()\n    }\n    return error\n  }\n\n  /**\n   * @private\n   */\n  _getSeamlessSwitchPoint () {\n    const { media } = this\n    let nextLoadPoint = media.currentTime\n    if (!media.paused) {\n      const segIdx = this._playlist.findSegmentIndexByTime(media.currentTime)\n      const curSeg = this._playlist.getSegmentByIndex(segIdx)\n      const latestKbps = this._stats?.getStats().downloadSpeed // latest download speed\n      if (latestKbps && curSeg) {\n        const delay = (curSeg.duration * this._playlist.currentStream.bitrate) / latestKbps + 1\n\n        nextLoadPoint += delay\n      } else {\n        nextLoadPoint += 5\n      }\n    }\n\n    return nextLoadPoint\n  }\n\n  /**\n   * @private\n   */\n  _tryEos () {\n    const { media } = this\n    const { nextSegment, lastSegment } = this._playlist\n    const eosAllowed =\n      (!nextSegment ||\n        (lastSegment &&\n          // Use the mid-time of lastSegment to determine\n          // whether the Media Buffer has been buffered to the end\n          Buffer.isBuffered(media, lastSegment.start + lastSegment.duration / 2))) &&\n      media.readyState &&\n      media.duration > 0 &&\n      this._bufferService?.msIsOpened &&\n      !this._bufferService?.msHasOpTasks\n\n    if (!eosAllowed) {\n      return\n    }\n\n    let bInfo = this.bufferInfo()\n    if (media.paused && !media.currentTime) {\n      bInfo = this.bufferInfo(bInfo.nextStart || 0.5)\n    }\n\n    const bufferThroughout = Math.abs(bInfo.end - media.duration) < 0.1 ||\n      (!this.isLive && lastSegment && bInfo.end >= (lastSegment.start + lastSegment.duration))\n    if (bufferThroughout) {\n      this._bufferService.endOfStream()\n    }\n  }\n}\n\ntry {\n  if (localStorage.getItem('xgd')) {\n    Hls.enableLogger()\n  } else {\n    Hls.disableLogger()\n  }\n} catch (error) {\n  // ignore\n}\n","/**\n * @callback m3u8ParseCallback\n * @param {string} m3u8\n * @returns {string?}\n */\n\n/**\n * @typedef {{\n *  media: HTMLMediaElement,\n *  url?: string,\n *  isLive?: boolean,\n *  softDecode?: boolean,\n *  targetLatency?: number,\n *  maxPlaylistSize?: number,\n *  maxLatency?: number,\n *  bufferBehind?: number,\n *  maxJumpDistance?: number,\n *  startTime?: number,\n *  retryCount?: number,\n *  retryDelay?: number,\n *  loadTimeout?: number,\n *  manifestLoadTimeout?:number,\n *  preloadTime?: number,\n *  disconnectTime?: number,\n *  allowedStreamTrackChange?: boolean,\n *  seiInTime?: boolean,\n *  manifestList?: Array<{url: string, manifest: string}>\n *  fetchOptions?: RequestInit\n *  onPreM3U8Parse?: m3u8ParseCallback,\n *  decryptor?: Decryptor,\n *  minSegmentsStartPlay?: number,\n *  preferMMS?: boolean,\n *  preferMMSStreaming?: boolean,\n *  mseLowLatency?: boolean,\n * forceFixLargeGap?:boolean,\n * }} HlsOption\n */\n\n/**\n * @param {HlsOption} cfg\n * @returns {HlsOption}\n */\nexport function getConfig (cfg) {\n  const media = cfg?.media || document.createElement('video')\n  return {\n    maxPlaylistSize: 50,\n    retryCount: 3,\n    retryDelay: 1000,\n    pollRetryCount: 2,\n    loadTimeout: 10000,\n    manifestLoadTimeout:10000,\n    preloadTime: 30,\n    softDecode: false,\n    bufferBehind: 10,\n    maxJumpDistance: 3,\n    startTime: 0,\n    useLowLatency: true,\n    targetLatency: 10,\n    maxLatency: 20,\n    allowedStreamTrackChange: true,\n    seiInTime: false,\n    manifestList: [],\n    minSegmentsStartPlay: 3,\n    preferMMS: false,\n    preferMMSStreaming: false,\n    mseLowLatency: true, // mse 低延迟模式渲染 https://issues.chromium.org/issues/41161663\n    fixerConfig: {\n      forceFixLargeGap:false, // 强制修复音视频PTS LargeGap, PTS从0开始\n      largeGapThreshold: 5 // 单位s\n    },\n    ...cfg,\n    media\n  }\n}\n","import { Event } from './hls/constants'\n\nexport default class PluginExtension {\n  _opts = null\n  _plugin = null\n\n  constructor (opts, plugin) {\n    this._opts = opts\n    this._plugin = plugin\n    this._init()\n  }\n\n  _init () {\n    const { media, preloadTime, innerDegrade, isLive } = this._opts\n\n    if (!media) return\n\n    if (!isLive && media.setPlayMode) {\n      media.setPlayMode('VOD')\n      return\n    }\n\n    if (innerDegrade) {\n      media.setAttribute('innerdegrade', innerDegrade)\n    }\n    if (preloadTime) {\n      media.setAttribute('preloadtime', preloadTime)\n    }\n\n    this._bindEvents()\n  }\n\n  _bindEvents () {\n    const { media } = this._opts\n\n    media.addEventListener('lowdecode', this._onLowDecode)\n  }\n\n  _onLowDecode = () => {\n    const { media, innerDegrade } = this._opts\n\n    this._plugin?.player?.emit('lowdecode', media.degradeInfo)\n    this._plugin?.player?.emit('core_event', {\n      ...media.degradeInfo,\n      eventName: Event.LOWDECODE\n    })\n\n    if (innerDegrade === 1) {\n      this._degrade(media.src)\n    }\n  }\n\n  /**\n   * @param {string | undefined} url\n   */\n  _degrade = (url) => {\n    const { player } = this._plugin\n    const originVideo = player.video\n\n    if (originVideo && originVideo.TAG !== 'MVideo') return\n\n    const newVideo = player.video.degradeVideo\n\n    player.video = newVideo\n\n    originVideo.degrade(url)\n\n    if (url) {\n      player.config.url = url\n    }\n\n    // replace live-video to video element\n    const firstChild = player.root.firstChild\n\n    if (firstChild.TAG === 'MVideo') {\n      player.root.replaceChild(newVideo, firstChild)\n    }\n    const hlsPlugin = this._plugin.constructor.pluginName.toLowerCase()\n    player.unRegisterPlugin(hlsPlugin)\n\n    // play\n    player.once('canplay', () => {\n      player.play()\n    })\n  }\n\n  forceDegradeToVideo = (url) => {\n    const { innerDegrade } = this._opts\n\n    // 降级to video+m3u8\n    if (innerDegrade === 1) {\n      this._degrade(url)\n    }\n  }\n\n  destroy () {\n    this._opts?.media?.removeEventListener('lowdecode', this._onLowDecode)\n    this._plugin = null\n  }\n}\n","import { BasePlugin, Errors, Events } from 'xgplayer'\nimport { EVENT, MSE } from 'xgplayer-streaming-shared'\nimport { Hls, logger } from './hls'\nimport { Event } from './hls/constants'\nimport PluginExtension from './plugin-extension'\n\n/**\n * @param { import('xgplayer').SwitchUrlOptions } args\n * @param { HlsPlugin } plugin\n * @returns\n */\nexport function parseSwitchUrlArgs (args, plugin) {\n  const { player } = plugin\n  const curTime = player.currentTime\n\n  /**\n   * @type {{\n   *  startTime: number\n   *  seamless?: boolean\n   * }}\n   */\n  const options = {\n    startTime: curTime\n  }\n\n  switch (typeof args) {\n    case 'boolean':\n      options.seamless = args\n      break\n    case 'object': {\n      const { currentTime, ...rest } = args\n      Object.assign(options, rest)\n      if (typeof currentTime === 'number') {\n        options.startTime = currentTime\n      }\n      break\n    }\n    default:\n      break\n  }\n  return options\n}\n\nexport class HlsPlugin extends BasePlugin {\n  static Hls = Hls\n\n  static EVENT = Event\n\n  logger = logger\n\n  /**\n   * @type {Hls}\n   */\n  hls = null\n\n  pluginExtension = null\n\n  static get pluginName () {\n    return 'hls'\n  }\n\n  get core () {\n    return this.hls\n  }\n\n  get version () {\n    return this.hls?.version\n  }\n\n  get softDecode () {\n    const mediaType = this.player?.config?.mediaType\n    return !!mediaType && mediaType !== 'video' && mediaType !== 'audio' && mediaType !== 'offscreen-video'\n  }\n\n  beforePlayerInit () {\n    const config = this.player.config\n    const mediaElem = this.player.media || this.player.video\n    const hlsOpts = config.hls || {}\n\n    if (\n      (!config.url &&\n        // private config key\n        !config.__allowHlsEmptyUrl__) ||\n      (!this.softDecode && !hlsOpts.preferMMS && MSE.isMMSOnly())\n    ) {\n      return\n    }\n\n    if (this.hls) this.hls.destroy()\n\n    /**\n     * 支持被继承时，指定不可写的属性。用来实现外部 switchURL 逻辑\n     */\n    const descriptor = Object.getOwnPropertyDescriptor(this.player, 'switchURL')\n    if (!descriptor || descriptor.writable) {\n      this.player.switchURL = (url, args) => {\n        return new Promise((resolve, reject) => {\n          const { player, hls } = this\n          if (hls) {\n            const options = parseSwitchUrlArgs(args, this)\n            player.config.url = url\n            hls.switchURL(url, options)\n              .then(() => resolve(true))\n              .catch(reject)\n\n            if (!options.seamless && this.player.config?.hls?.keepStatusAfterSwitch) {\n              this._keepPauseStatus()\n            }\n          } else {\n            reject()\n          }\n        })\n      }\n    }\n    const onSwitchUrl = this.player.switchURL\n    this.player.handleSource = false // disable player source handle\n\n    hlsOpts.innerDegrade = hlsOpts.innerDegrade || config.innerDegrade\n    if (hlsOpts.disconnectTime === null || hlsOpts.disconnectTime === undefined) hlsOpts.disconnectTime = 0\n\n    this.hls = new Hls({\n      softDecode: this.softDecode,\n      isLive: config.isLive,\n      media: mediaElem,\n      startTime: config.startTime,\n      url: config.url,\n      ...hlsOpts\n    })\n\n    if (!this.softDecode) {\n      BasePlugin.defineGetterOrSetter(this.player, {\n        url: {\n          get: () => this.hls?.media?.src,\n          configurable: true\n        }\n      })\n    }\n\n    if (this.softDecode) {\n      this.pluginExtension = new PluginExtension({\n        isLive: config.isLive,\n        media: mediaElem,\n        ...hlsOpts\n      }, this)\n      this.player.forceDegradeToVideo = (...args) => this.pluginExtension?.forceDegradeToVideo(...args)\n    }\n\n    if (config.isLive) {\n      // This is a heavy operation for the vod flow, which may cause seeked event never emit\n      this.player?.useHooks('replay', () => this.hls?.replay())\n    }\n\n    this.on(Events.URL_CHANGE, onSwitchUrl)\n    this.on(Events.SWITCH_SUBTITLE || 'switch_subtitle', this._onSwitchSubtitle)\n    this.on(Events.DESTROY, this.destroy.bind(this))\n\n    this._transError()\n    this._transCoreEvent(EVENT.TTFB)\n    this._transCoreEvent(EVENT.LOAD_START)\n    this._transCoreEvent(EVENT.LOAD_RESPONSE_HEADERS)\n    this._transCoreEvent(EVENT.LOAD_COMPLETE)\n    this._transCoreEvent(EVENT.LOAD_RETRY)\n    this._transCoreEvent(EVENT.SOURCEBUFFER_CREATED)\n    this._transCoreEvent(EVENT.MEDIASOURCE_OPENED)\n    this._transCoreEvent(EVENT.APPEND_BUFFER)\n    this._transCoreEvent(EVENT.REMOVE_BUFFER)\n    this._transCoreEvent(EVENT.BUFFEREOS)\n    this._transCoreEvent(EVENT.KEYFRAME)\n    this._transCoreEvent(EVENT.METADATA_PARSED)\n    this._transCoreEvent(EVENT.DEMUXED_TRACK)\n    this._transCoreEvent(EVENT.SEI)\n    this._transCoreEvent(EVENT.SEI_IN_TIME)\n    this._transCoreEvent(EVENT.SPEED)\n    this._transCoreEvent(EVENT.HLS_MANIFEST_LOADED)\n    this._transCoreEvent(EVENT.HLS_LEVEL_LOADED)\n    this._transCoreEvent(EVENT.STREAM_EXCEPTION)\n    this._transCoreEvent(EVENT.SWITCH_URL_SUCCESS)\n    this._transCoreEvent(EVENT.SWITCH_URL_FAILED)\n    this._transCoreEvent(Event.NO_AUDIO_TRACK)\n    this._transCoreEvent(Event.STREAM_PARSED)\n    this._transCoreEvent(Event.SUBTITLE_SEGMENTS)\n    this._transCoreEvent(Event.SUBTITLE_PLAYLIST)\n    this._transCoreEvent(Event.APPEND_COST)\n\n    if (config.url) {\n      this.hls.load(config.url, {\n        reuseMse: true\n      }).catch(e => {})\n    }\n  }\n\n  /**\n   * It needs to be supported as a subclass to be inherited externally, so don't write it as an attribute here\n   */\n  destroy () {\n    if (this.hls) {\n      this.hls.destroy()\n      this.hls = null\n    }\n\n    this.pluginExtension?.destroy()\n    this.pluginExtension = null\n  }\n\n  /**\n   * @returns {import('./hls').Stats |  undefined}\n   */\n  getStats = () => {\n    return this.hls?.getStats()\n  }\n\n\n  /**\n   * @param {string | boolean} [mediaType]\n   * @param {string} [codec]\n   * @returns {boolean}\n   * - mediaType: 默认检测 MSE 对 H264 codec是否支持，传入 true 或者配置参数的mediaType的取值检测 WebAssembly是否支持\n   * - codec: 暂无使用\n   */\n  static isSupported (mediaType, codec) {\n    return Hls.isSupported(mediaType, codec)\n  }\n\n  _onSwitchSubtitle = ({lang}) => {\n    this.hls?.switchSubtitleStream(lang)\n  }\n\n  _keepPauseStatus = () => {\n    const paused = this.player.paused\n    if (!paused) return\n    this.player.once('canplay', () => {\n      this.player.pause()\n    })\n  }\n\n  _transError () {\n    this.hls.on(Event.ERROR, (err) => {\n      if (this.player) {\n        this.player.emit(Events.ERROR, new Errors(this.player, err))\n      }\n    })\n  }\n\n  _transCoreEvent (eventName) {\n    this.hls.on(eventName, (e) => {\n      if (this.player) {\n        this.player.emit('core_event', {\n          ...e,\n          eventName\n        })\n\n        if (eventName === EVENT.SEI_IN_TIME && this.hls.hasSubtitle) {\n          this._emitSeiPaylodTime(e)\n        }\n      }\n    })\n  }\n\n  _emitSeiPaylodTime (e) {\n    try {\n      const seiJson = JSON.parse(Array.from(e.data.payload).map(x=>String.fromCharCode(x)).join('').slice(0,-1))\n      if (!seiJson['rtmp_dts']) return\n      this.player.emit('core_event', {\n        eventName: Event.SEI_PAYLOAD_TIME,\n        time: seiJson['rtmp_dts']\n      })\n    } catch (e) {}\n  }\n\n}\n"],"names":["Buffer","_classCallCheck","key","value","buf","length","end","start","b","buffered","error","maxHole","buffers","i","l","bufLen","last","lastEnd","push","reduce","a","c","pos","arguments","undefined","index","nextStart","nextEnd","prevStart","prevEnd","item","currentTime","behind","remaining","totalLength","media","get","isBrowser","window","ERR","FLV","HLS","MP4","FMP4","MSE_ADD_SB","MSE_APPEND_BUFFER","MSE_OTHER","MSE_FULL","MSE_CHANGE_TYPE","OPTION","DASH","LICENSE","CUSTOM_LICENSE","MSE_HIJACK","EME_HIJACK","SIDX","NO_CANPLAY_ERROR","BUFFERBREAK_ERROR","WAITING_TIMEOUT_ERROR","MEDIA_ERR_ABORTED","MEDIA_ERR_NETWORK","MEDIA_ERR_DECODE","MEDIA_ERR_SRC_NOT_SUPPORTED","MEDIA_ERR_CODEC_NOT_SUPPORTED","MEDIA_ERR_URL_EMPTY","ERR_CODE","_defineProperty","_ERR_CODE","StreamingError","_Error","_inherits","_super","_createSuper","type","subType","origin","payload","msg","_this","call","message","errorType","originError","ext","errorCode","errorMessage","Error","_error$response","isTimeout","url","response","httpCode","status","LogCacheLevel","DEBUG","LOG","WARN","ERROR","SIMPLE_TYPE","Logger","name","config","this","_prefix","concat","logCacheLevel","logMaxSize","logSize","logTextArray","_createClass","_console","_len","args","Array","_key","logCache","apply","disabled","console","debug","nowTime","_console2","_len2","_key2","log","_console3","_len3","_key3","warn","_console4","_len4","_key4","text","_len5","logText","_key5","finLogText","map","logable","JSON","stringify","e","delLog","shift","join","reset","_console5","group","table","groupEnd","val","Date","toLocaleString","reduceDepth","_typeof","objType","Object","prototype","toString","slice","obj","maxDepth","depth","result","includes","hasOwnProperty","createPublicPromise","res","rej","promise","Promise","resolve","reject","used","parseInt","performance","now","getTime","SafeJSON","getMediaSource","preferMMS","ManagedMediaSource","MediaSource","isMMS","mediaSource","test","OP_NAME","MSE","_this2","create","_logger","queue","_queue","op","opName","_this2$_sourceBuffer$","_op$context","costtime","_opst","ranges","TimeRanges","getTimeRanges","_sourceBuffer","context","callback","_startQueue","event","_config","assign","getDefaultConfig","bindMedia","openLog","enable","_enqueueBlockingOp2","_unbindMedia","_bindMedia","_this$mediaSource","readyState","_this3","flag","keys","forEach","k","isArray","_url","_this$mediaSource2","duration","streaming","_mseFullFlag","VIDEO","_this4","isReduceDuration","bufferEnd","Math","max","_enqueueBlockingOp","isEnded","_this5","_openPromise","isOpened","ms","addEventListener","onOpen","costTime","_st","removeEventListener","_asyncToGenerator","_regeneratorRuntime","mark","_callee","useMMS","_this6","wrap","_context","prev","next","unbindMedia","revokeObjectURL","src","_onStartStreaming","_onEndStreaming","URL","createObjectURL","disableRemotePlayback","abrupt","stop","_x","_callee2","hasMetadata","mseOpen","_this7","_context2","t","x","_x$promise","_x$promise$resolve","endOfStream","removeSourceBuffer","removeAttribute","load","mimeType","sb","addSourceBuffer","_onSBUpdateEnd","bind","_onSBUpdateError","_this8","changeType","_enqueueOp","createSource","buffer","_this9","byteLength","_this9$_sourceBuffer$","appendBuffer","startTime","endTime","_this10","isInsertHead","remove","p","_this11","_this12","allClear","_this$_queue$type","initQueue","isinit","reason","_this13","setLiveSeekableRange","exec","_this14","splice","then","_callee3","types","waiters","_this15","_context3","prom","all","updating","_x2","_x3","_x4","_op$promise","_op$promise2","indexOf","isFull","constructor","timestampOffset","_this16","_this17","abort","mime","isTypeSupported","LoaderType","ResponseType","NetError","request","_assertThisInitialized","isPlainObject","getPrototypeOf","getRangeValue","ret","encode","encodeURIComponent","replace","setUrlParams","params","v","str","toISOString","isObject","filter","Boolean","hashIndex","createResponse","data","done","contentLength","age","firstByteTime","range","vid","priOptions","parseFloat","Number","isNaN","options","calculateSpeed","byteLen","milliSecond","round","EVENT","TTFB","LOAD_START","LOAD_RESPONSE_HEADERS","LOAD_COMPLETE","LOAD_RETRY","SOURCEBUFFER_CREATED","MEDIASOURCE_OPENED","ANALYZE_DURATION_EXCEEDED","APPEND_BUFFER","REMOVE_BUFFER","BUFFEREOS","KEYFRAME","CHASEFRAME","METADATA_PARSED","SEI","SEI_IN_TIME","FLV_SCRIPT_DATA","LOWDECODE","SWITCH_URL_SUCCESS","SWITCH_URL_FAILED","SPEED","HLS_MANIFEST_LOADED","HLS_LEVEL_LOADED","DEMUXED_TRACK","STREAM_EXCEPTION","LARGE_AV_FIRST_FRAME_GAP_DETECT","LARGE_VIDEO_DTS_GAP_DETECT","LARGE_AUDIO_DTS_GAP_DETECT","AUDIO_GAP_DETECT","AUDIO_OVERLAP_DETECT","MAX_DTS_DELTA_WITH_NEXT_SEGMENT_DETECT","REAL_TIME_SPEED","has","prefix","Events","EE","fn","once","addListener","emitter","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","events","getOwnPropertySymbols","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","len","removeListener","j","on","removeAllListeners","off","prefixed","module","exports","CACHESIZE","FetchLoader","_EventEmitter","_cancel","_ref","_this$_abortControlle","timeout","responseType","onProgress","onTimeout","onCancel","transformResponse","logger","method","headers","body","mode","credentials","cache","redirect","referrer","referrerPolicy","onProcessMinLen","_aborted","_onProcessMinLen","_onCancel","_abortController","AbortController","_running","_index","_range","_vid","_priOptions","init","signal","clearTimeout","_timeoutTimer","rangeValue","Headers","append","Range","setTimeout","cancel","fetch","_ref2","speed","_response","ok","sent","json","_loadChunk","arrayBuffer","Uint8Array","time","catch","_error","_reader","t0","st","getReader","err","_cache","_writeIdx","reader","pump","_ref3","_this3$_range","startRange","startByte","curLen","retData","temp","read","_receivedLength","set","XhrLoader","req","_onProgress","_headers","_withCredentials","_body","_method","_timeout","_runing","_responseType","_firstRtt","_onTimeout","_request","_loadCompleteResolve","_loadCompleteReject","_startLoad","chunkSize","_currentChunkSizeKB","from","to","_internalOpen","_startTime","xhr","_xhr","XMLHttpRequest","open","withCredentials","onload","_onLoad","onreadystatechange","_onReadyStatechange","onerror","errorEvent","_errorEvent$currentTa","_errorEvent$currentTa2","_errorEvent$currentTa3","currentTarget","statusText","ontimeout","setRequestHeader","send","target","_this$_range","_objectSpread","byteStart","_this$_range2","chunk","responseURL","_getHeaders","_transformResponse","_getPrototypeOf","_step","_iterator","_createForOfIteratorHelper","getAllResponseHeaders","trim","split","s","n","parts","toLowerCase","f","Task","alive","_loaderType","_loader","_retryCount","_retryTimer","_canceled","_retryCheckFunc","retryCheckFunc","_this$_config","retry","retryDelay","onRetryError","transformError","rest","_objectWithoutProperties","_excluded","isRetry","running","loaderType","retryCount","concatUint8Array","arr","prevLen","d","sleep","NetLoader","cfg","transformRequest","integrity","getConfig","isSupported","task","loader","_currentTask","_processTask","cancels","_alive","finally","_this3$_currentTask","_this3$_alive","GapService","maxJumpDistance","isLive","seekThreshold","jumpTo","_prevCurrentTime","info","seeking","SeiService","Set","sei","_seiSet","add","size","min","toThrow","delete","clear","BandwidthService","opts","_opts","totalByte","_speeds","_this$_opts","_this$_opts2","skipChunkSize","_totalSize","_totalCost","_chunkSpeed","_chunkCache","timestamp","chunkCountForSpeed","_this$_opts3","lastSample","cost","longtimeNoReceived","Stats","timescale","_timescale","encodeType","audioCodec","videoCodec","domain","fps","bitrate","width","height","samplerate","channelCount","gop","_data$onMetaData","onMetaData","framerate","track","codec","codecType","fpsNum","fpsDen","sampleRate","responseUrl","samples","sample","_startGopId","gopId","_bitsAccumulateDuration","_bitsAccumulateSize","units","MediaStatsService","core","_core","_stats","_bindEvents","_this$_core","_this$_core2","_this$_core2$speedInf","_this$_core3","_this$_core3$speedInf","_this$_core4","_this$_core4$speedInf","_this$_core5","_this$_core5$speedInf","_this$_core6","_this$_core6$bufferIn","_ref2$currentTime","_ref2$decodeFps","decodeFps","getStats","downloadSpeed","speedInfo","avgSpeed","totalReceivedByte","totalSize","totalReceivedCost","totalCost","bufferInfo","videoTrack","updateBitrate","setFpsFromScriptData","setVideoMeta","setAudioMeta","setDomain","_samples","TrackType","VideoCodecType","AudioCodecType","WarningType","VideoTrack","sequenceNumber","baseMediaDecodeTime","present","pid","pps","sps","vps","sarRatio","warnings","hvcC","dts","pts","first","isVideoEncryption","AudioTrack","sampleDuration","container","isAudioEncryption","VideoSample","originPts","originDts","keyframe","dependsOn","isNonSyncSample","AudioSample","sampleOffset","Sample","FlvScriptSample","_Sample","SeiSample","_Sample2","_super2","MetadataTrack","flvScriptSamples","seiSamples","ExpGolomb","_data","_bytesAvailable","_loadWord","_bitsAvailable","position","availableBytes","workingBytes","subarray","_word","DataView","getUint32","count","skipBytes","floor","bits","readBits","leadingZeroCount","skipLZ","skipBits","clz","readUEG","lastScale","nextScale","readEG","UTF8","uint8array","out","input","String","fromCharCode","_checkContinuation","ucs4","_ucs2","checkLength","array","ua","navigator","userAgent","toLocaleLowerCase","isSafari","isFirefox","isAndroid","MAX_SIZE","pow","readBig16","readBig32","readBig64","getAvcCodec","codecs","h","parse","combineToFloat","integer","decimal","AAC","rate","FREQ","skip","frames","samplingFrequencyIndex","protectionSkipBytes","frameLength","objectType","_AAC$_getConfig","_getConfig","frameIndex","getFrameDuration","originCodec","_AAC$_getConfig2","samplingIndex","originObjectType","extensionSamplingIndex","NALu","dropZerosLength","offset","dataLen","unit","isHevc","uuid","uint","emulationPreventionBytesPositions","newLength","newData","sourceIndex","AVC","nalUnitSize","spsParsed","spsSize","spsArr","ppsArr","spsCount","parseSPS","removeEPB","ppsSize","ppsCount","eg","readUByte","profileIdc","profileCompatibility","levelIdc","skipUEG","chromaFormat","chromaFormatIdc","readBool","scalingListCount","skipScalingList","picOrderCntType","numRefFramesInPicOrderCntCycle","picWidthInMbsMinus1","picHeightInMapUnitsMinus1","frameMbsOnlyFlag","fixedFrame","frameCropLeftOffset","frameCropRightOffset","frameCropTopOffset","frameCropBottomOffset","aspectRatioIdc","numUnitsInTick","timeScale","ceil","HEVC","vpsParsed","nalUnitType","numNalus","nalSize","vpsArr","numOfArrays","parseVPS","vpsMaxSubLayersMinus1","numTemporalLayers","_parseProfileTierLevel","spsMaxSubLayersMinus1","temporalIdNested","separateColourPlaneFlag","confWinLeftOffset","confWinRightOffset","confWinTopOffset","confWinBottomOffset","conformanceWindowFlag","bitDepthLumaMinus8","bitDepthChromaMinus8","subWidthC","subHeightC","maxSubLayersMinus1","generalTierFlag","generalProfileSpace","generalProfileIdc","generalProfileCompatibilityFlags","generalConstraintIndicatorFlags","generalLevelIdc","subLayerProfilePresentFlag","subLayerLevelPresentFlag","bitsAvailable","OPUS","dv","byteOffset","magicSignature","fromCodePoint","outputGain","getInt16","BitratesMap","SamplesCoefficients","BytesInSlot","chromeVersion","MPEG","header","parseHeader","stamp","samplesPerFrame","mpegVersion","mpegLayer","bitRateIndex","sampleRateIndex","paddingBit","channelMode","bitRate","sampleCoefficient","bytesInSlot","match","MAX_SILENT_FRAME_DURATION","AUDIO_EXCEPTION_LOG_EMIT_DURATION","FlvFixer","audioTrack","metadataTrack","_baseDts","_baseDtsInited","_audioNextPts","_videoNextDts","_audioTimestampBreak","_videoTimestampBreak","_lastVideoDuration","_keyFrameInNextChunk","_lastAudioExceptionGapDot","Infinity","_lastAudioExceptionOverlapDot","_lastAudioExceptionLargeGapDot","_lastVideoExceptionLargeGapDot","_lastVideoExceptionChunkFirstDtsDot","discontinuity","contiguous","_videoLastSample","_calculateBaseDts","resetBaseDts","exist","_resetBaseDtsWhenStreamBreaked","_fixAudio","_fixVideo","refSampleDurationInt","pop","unshift","samp0","firstSample","vDelta","abs","_samples$","nextDts","firstSampleDts","nextSampleDts","nextSample","refSampleDuration","_doFixAudioInternal","audioSamps","videoSamps","audioBasePts","videoBaseDts","baseDts","delta","isFinite","G711PCMA","_getG711Duration","sampleDurationInSampleRate","nextPts","silentFrame","_getSilentFrame","silentSample","sampleSize","getSilentFrame","AMF","_parseValue","view","isEnd","getUint8","getFloat64","_AMF$_parseString","_parseString","terminal","_AMF$_parseObject","_parseObject","_terminal","_AMF$_parseObject2","strictArrayLength","_AMF$_parseValue","decode","getUint16","FlvSoundFormat","FlvDemuxer","_fixer","_scriptDataObject$dat","seamlessLoadingSwitching","_remainingData","_headerParsed","probe","tagType","dataSize","bodyData","prevTagSize","_parseAudio","_parseVideo","_parseScript","formatTimescale","hasSample","scriptDataObject","metaData","fix","demux","format","soundRate","soundSize","soundType","AUDIO_RATE","G711A","_parseG711","_parseAac","_parseOpus","packetType","parseHeaderPackets","newSample","audioData","parseAudioSpecificConfig","frameType","codecId","cts","configData","parseHEVCDecoderConfigurationRecord","parseAVCDecoderConfigurationRecord","parseAvcC","_checkAddMetaNalToUnits","lastKeyFrameDts","setToKeyframe","parseSEI","_gopId","hevc","_needAddMetaBeforeKeyFrameNal","AUDIO_EXCETION_LOG_EMIT_DURATION","MAX_VIDEO_FRAME_DURATION","TsFixer","fixerConfig","_baseVideoDts","_baseAudioDts","_needForceFixLargeGap","forceFixLargeGap","_largeGapThreshold","largeGapThreshold","vSamples","aSamples","firstVideoSample","firstAudioSample","vaDelta","vDeltaToNextDts","aDeltaToNextDts","_samples$i","prevDts","second","expectFragEnd","lastAudioSample","largeGap","_audioLastSample","TsDemuxer","_pmtId","_remainingPacketData","_videoPesData","_audioPesData","remainingLength","videoPid","audioPid","payloadUnitStartIndicator","adaptationFiledControl","tableEnd","programInfoLength","esPid","_parseVideoData","_parseAudioData","pes","_parsePES","_toConsumableArray","parseAnnexB","_createVideoSample","spsInfo","ffByteFound","_pushVideoSample","_parseAacData","_parseMPEG","_track$samples","parseADTS","isHeader","frame","appendFrame","headerDataLen","pesLen","ptsDtsFlags","ByteReader","byteNum","getFloat32","getInt8","getInt32","back","setUint8","setUint16","setUint32","uint8","unreadLength","concatUint8s","BitReader","byte","MP4Parser","headerSize","subData","findBox","box","parseBox","trackId","baseDataOffsetPresent","flags","sampleDescriptionIndexPresent","defaultSampleDurationPresent","defaultSampleSizePresent","defaultSampleFlagsPresent","baseDataOffset","sampleDescriptionIndex","defaultSampleDuration","defaultSampleSize","defaultSampleFlags","reference_ID","version","earliest_presentation_time","first_offset","references","ref","tmp32","reference_type","referenced_size","subsegment_duration","starts_with_SAP","SAP_type","SAP_delta_time","mvhd","trak","pssh","nextTrackId","tkhd","mdia","fromUint8","matrix","int32","caculatedMatrix","readInt","rotation","scaled0","hypot","scaled1","atan2","PI","toDegree","mdhd","hdlr","minf","lang","language","handlerType","vmhd","smhd","stbl","graphicsmode","opcolor","balance","_ret$stsd$entries$","_ret$stsd$entries$$si","_ret$stsd$entries$$si2","stsd","stts","ctts","stsc","stsz","stco","co64","default_IV_size","entries","sinf","schi","tenc","stss","senc","iv","sampleCount","InitializationVector","subsamples","subsampleCount","subsample","BytesOfClearData","BytesOfProtectedData","keyIds","systemId","toHex","numKeyIds","keyId","data_size","kid","system_id","entryCount","av01","avc1","hvc1","mp4a","alaw","samplesize","esds","horizresolution","vertresolution","avcC","pasp","default_IsEncrypted","default_KID","frma","data_format","colorType","readString","colorPrimaries","transferCharacteristics","matrixCoefficients","fullRangeFlag","iccProfile","readToUint8","bodyStart","parseVisualSampleEntry","av1C","colr","bitdepth","bit","fromByte","marker","seqProfile","seqLevelIdx0","seqTier0","highBitdepth","twelveBit","monochrome","chromaSubsamplingX","chromaSubsamplingY","chromaSamplePosition","reserved","initialPresentationDelayPresent","initialPresentationDelayMinusOne","configOBUs","configurationVersion","AVCProfileIndication","AVCLevelIndication","lengthSizeMinusOne","spsLength","ppsLength","tmp","generalProfileCompatibility","avgFrameRate","_ret$vps","nalus","_ret$sps","_ret$pps","hSpacing","vSpacing","parseAudioSampleEntry","byteRead","tag","substring","padStart","firstChunk","samplesPerChunk","entrySizes","mfhd","traf","tfhd","tfdt","trun","dataOffset","firstSampleFlags","isLeading","isDependedOn","hasRedundancy","paddingValue","degradationPriority","moov","_e$esds","_e$esds2","tracks","vTrack","find","_t$mdia","_t$mdia$hdlr","aTrack","_t$mdia2","_t$mdia2$hdlr","_vTrack$tkhd","_vTrack$mdia","_vTrack$mdia$minf","_vTrack$mdia$minf$stb","_vTrack$mdia2","_vTrack$mdia2$minf","_vTrack$mdia2$minf$st","_vTrackId","id","tkhdDuration","mvhdDurtion","mvhdTimecale","_e1$sinf","_e1$sinf$schi","_e1$sinf2","_e1$sinf2$schi","_e1$sinf3","_e1$sinf3$schi","_e1$sinf4","_e1$sinf4$frma","e1","videoSenc","useEME","kidValue","encv","_aTrack$tkhd","_e$esds3","_e$esds4","_aTrack$mdia","_aTrack$mdia$minf","_aTrack$mdia$minf$stb","_aTrack$mdia2","_aTrack$mdia2$minf","_aTrack$mdia2$minf$st","_aTrackId","_e$sinf","_e$sinf$frma","_e$sinf2","_e$sinf2$schi","_e$sinf3","_e$sinf3$schi","_e$sinf4","_e$sinf4$schi","getRateIndexByRate","audioSenc","enca","_videoTrack$encv","_audioTrack$enca","vkid","akid","videoSampleCount","_audioTrack$samples","audioSampleCount","moof","defaultSize","defaultDuration","evaluateDefaultDuration","_t$mdia3","_t$mdia3$hdlr","_t$mdia4","_t$mdia4$hdlr","videoSamples","audioSamples","_vTrack$mdia3","_vTrack$mdia3$minf","videoStbl","getSamples","_aTrack$mdia3","_aTrack$mdia3$minf","_aTrack$mdia$mdhd","audioStbl","keyframeMap","cttsArr","cttsEntries","stscEntries","stcoEntries","stszEntrySizes","stssEntries","chunkIndex","chunkRunIndex","offsetInChunk","lastSampleInChunk","lastChunkInRun","dataReferenceIndex","frameCount","isFullBox","readBig24","pad","charstr","maxlen","chars","r","hex","FMP4Demuxer","partData","partDataStart","videoExist","audioExist","isAV01","dataStart","__lastRemainData","lastRemainDataEnd","__lastRemainDataStart","noDuplicateData","__nextMoofStart","moovBox","dataEnd","moovToTrack","moofBoxes","moofBox","w","__loadedMoofWraps","nextMoofStart","sort","_loop","moofWrap","moofStart","moofToSamples","videoBaseMediaDecodeTime","audioBaseMediaDecodeTime","some","xStart","sampleData","videoData","baseOffset","Concat","ResultConstructor","arrays","self","UINT32_MAX","FTYPHEV1","FTYPAVC1","ftyp","content","mvex","HDLR_TYPES","VMHD","SMHD","DINF","extBox","STTS","STSC","STSZ","STCO","opus","avc1hev1","_concat$concat","avcc","btrt","charCodeAt","schm","typ","boxes","fiel","_concat$concat2","ArrayBuffer","pcf","cif","write","_ref4","_slicedToArray","opusAudioDescription","opusSpecificConfig","dOps","Opus","trex","sencLength","isVideo","videoSencLength","saiz","saio","trun1","sbgp","sdtp","extension","writeUint32","samplesLength","writeUint16","upperWordBaseMediaDecodeTime","lowerWordBaseMediaDecodeTime","sampleLen","_samples$i$flag","_samples$i$cts","trackMP4","mdiaMP4","minfMP4","stblMP4","_ref5","_ref6","sampleDescIndex","samplesSizes","offsets","keyframeIndexes","_ref7","styp","durationCount","earliestTime","mdatSize","sidx","mdat","video","audio","dinf","dref","StblTable","FMP4Remuxer","browserVersions","forceFirstIDR","createInit","videoInitSegment","audioInitSegment","initSegment","videoSegment","audioSegment","hasVideo","hasAudio","initMerge","_remuxVideo","_remuxAudio","mdata","mdatView","_offset2","_sample2","u","_offset","_sample","Base","properties","clone","_construct","WordArray","_Base","words","sigBytes","typedArray","Int8Array","Uint8ClampedArray","Int16Array","Uint16Array","Int32Array","Uint32Array","Float32Array","Float64Array","typedArrayByteLength","_words","encoder","Hex","wordArray","thisWords","thatWords","thisSigBytes","thatSigBytes","clamp","thatByte","_get","nBytes","rcache","m_w","_m_w","_m_z","mask","random","_r","hexChars","bite","hexStr","hexStrLength","substr","Latin1","latin1Str","latin1StrLength","Utf8","utf8Str","unescape","BufferedBlockAlgorithm","_Base2","_minBufferSize","_nDataBytes","m_data","doFlush","processedWords","blockSize","dataWords","dataSigBytes","nBlocksReady","nWordsReady","nBytesReady","_doProcessBlock","Hasher","_BufferedBlockAlgorit","_super3","_doReset","messageUpdate","_append","_process","hash","_doFinalize","SubHasher","finalize","HMAC","_Base3","_super4","hasher","_hasher","hasherBlockSize","hasherBlockSizeBytes","oKey","_oKey","iKey","_iKey","oKeyWords","iKeyWords","update","innerHash","hmac","Base64","_map","base64Chars","triplet","charAt","paddingChar","base64Str","base64StrLength","reverseMap","_reverseMap","paddingIndex","parseLoop","bits1","bitsCombined","T","sin","FF","GG","HH","II","MD5Algo","_Hasher","_hash","M","_M","offset_i","M_offset_i","H","M_offset_0","M_offset_1","M_offset_2","M_offset_3","M_offset_4","M_offset_5","M_offset_6","M_offset_7","M_offset_8","M_offset_9","M_offset_10","M_offset_11","M_offset_12","M_offset_13","M_offset_14","M_offset_15","nBitsTotal","nBitsLeft","nBitsTotalH","nBitsTotalL","H_i","_createHelper","_createHmacHelper","EvpKDFAlgo","keySize","iterations","password","salt","derivedKeyWords","block","derivedKey","Cipher","xformMode","_xformMode","dataUpdate","finalProcessedData","_ENC_XFORM_MODE","_DEC_XFORM_MODE","SubCipher","selectCipherStrategy","PasswordBasedCipher","SerializableCipher","encrypt","decrypt","ciphertext","ivSize","BlockCipherMode","cipher","_cipher","_iv","Encryptor","Decryptor","xorBlock","_prevBlock","CBC","_BlockCipherMode","_CBC","_class","_super5","encryptBlock","_CBC2","_class2","_super6","thisBlock","decryptBlock","Pkcs7","blockSizeBytes","nPaddingBytes","paddingWord","paddingWords","padding","unpad","BlockCipher","_Cipher2","_super7","modeCreator","createEncryptor","createDecryptor","_mode","__creator","processBlock","finalProcessedBlocks","CipherParams","_super8","cipherParams","mixIn","formatter","OpenSSLFormatter","openSSLStr","ciphertextWords","_super9","_cfg","encryptor","cipherCfg","algorithm","_ciphertext","plaintext","_parse","OpenSSLKdf","execute","_salt","compute","_SerializableCipher","_super10","derivedParams","kdf","_SBOX","INV_SBOX","_SUB_MIX_0","_SUB_MIX_1","_SUB_MIX_2","_SUB_MIX_3","INV_SUB_MIX_0","INV_SUB_MIX_1","INV_SUB_MIX_2","INV_SUB_MIX_3","xi","sx","x2","x4","x8","RCON","AESAlgo","_BlockCipher","_nRounds","_keyPriorReset","keyWords","ksRows","_keySchedule","keySchedule","ksRow","_invKeySchedule","invKeySchedule","invKsRow","_doCryptBlock","SUB_MIX_0","SUB_MIX_1","SUB_MIX_2","SUB_MIX_3","SBOX","nRounds","s0","s1","s2","s3","t1","t2","t3","CTR","_CTR","counter","_counter","keystream","crypto","msCrypto","subtle","webkitSubtle","externalDecryptor","_decryptData2","_decryptSegment2","_this$externalDecrypt","destroy","_decryptSegment","seg","_decryptData","keyIv","aesKey","importKey","_x5","_x6","_x7","Event","STREAM_PARSED","NO_AUDIO_TRACK","SUBTITLE_SEGMENTS","SUBTITLE_PLAYLIST","SEI_PAYLOAD_TIME","APPEND_COST","Transmuxer","hls","isMP4","needRemux","_demuxer","_isMP4","_remuxer","videoChunk","audioChunk","needInit","demuxer","demuxAndFix","vParsed","firstDts","firstPts","samplesDuration","aParsed","newId","_initSegmentId","_fireEvents","mseLowLatency","totalDuration","_this$_remuxer$remux","remux","logCC","toFixed","meta","code","BufferService","softDecode","_softVideo","_mse","decryptor","_decryptor","_destroy","_detachMedia","_setLiveSeekableRange","_endOfStream","_reset","_clearAllBuffer","_evictBuffer","_removeBuffer","_appendBuffer","_updateDuration","_this$_transmuxer","_this$_transmuxer$_de","_this$_transmuxer$_de2","_transmuxer","_this$_mse","_this$_mse2","_this$_mse3","hasOpTasks","_this$_mse4","updateDuration","_sourceCreated","_directAppend","mix","_createMseSource","segment","afterAppend","_this$_transmuxer$tra","_this$_transmuxer$tra2","isFirstAppend","mse","_p","videoRest","audioRest","_this2$hls","_this2$hls2","AUDIO","_needInitSegment","transmux","setTrackExist","_handleCodecChange","_excluded2","_x8","_args3","clearBuffer","removeEnd","_callee4","bufferBehind","_context4","removeBuffer","_x9","_callee5","_context5","clearAllBuffer","_callee6","reuseMse","_args6","_context6","_callee7","_context7","_callee8","_context8","_x10","_x11","_callee9","_context9","_callee10","_this$_decryptor","_context10","detachMedia","tasks","sourceBuffer","getSourceBuffer","RegExp","_this$_mse5","mediaType","MasterPlaylist","MediaType","KeySystems","CLEAR_KEY","FAIRPLAY","WIDEVINE","PLAYREADY","flatArray","MediaStream","AudioStream","_MediaStream","SubTitleStream","_MediaStream3","MasterStream","MediaPlaylist","MediaSegment","parentUrl","prevSegment","byteRange","bytes","MediaSegmentKey","segKey","keyFormat","keyFormatVersions","sn","setIVFromSN","isSegmentEncrypted","isValidKeySystem","HlsUrlParameters","msn","part","uri","searchParams","href","REGEXP_TAG","REGEXP_ATTR","REGEXP_ABSOLUTE_URL","REGEXP_URL_PAIR","getLines","parseTag","parseAttr","getAbsoluteUrl","pairs","CODECS_REGEXP","getCodecs","re","isValidDaterange","attr","dateRangeWithSameId","_badValueForSameId","DURATION","_endDate","_startDate","attrValue","dict","cue","CUE","pre","post","identifier","ID","END_ON_NEXT","CLASS","parseMasterPlaylist","lines","line","master","audioStreams","subtitleStreams","_tag","stream","TYPE","URI","default","DEFAULT","autoSelect","AUTOSELECT","NAME","LANGUAGE","CHANNELS","channels","BANDWIDTH","RESOLUTION","_attr$RESOLUTION$spli2","CODECS","textCodec","audioGroup","subtitleGroup","SUBTITLES","streams","parseMediaPlaylist","useLowLatency","curSegment","curInitSegment","curKey","curSN","curCC","endOfList","partSegmentIndex","toUpperCase","targetDuration","lowLatency","partTargetDuration","canBlockReload","partHoldBack","canSkipUntil","canSkipDateRanges","startSN","startCC","setByteRange","segments","independent","cc","partIndex","preloadHint","nextSN","nextIndex","dataTime","_data$split2","title","METHOD","KEYFORMAT","KEYFORMATVERSIONS","IV","BYTERANGE","isInitSegment","skippedSegments","MAX_SAFE_INTEGER","dateRanges","endDate","END_DATE","lastSegment","isLast","endSN","endPartIndex","live","endCC","M3U8Parser","isMediaPlaylist","ManifestLoader","elapsed","retryTime","network","_timer","_useLowLatency","_this$hls$config","manifestLoadTimeout","fetchOptions","_onLoaderRetry","_audioLoader","_subtitleLoader","_load","audioUrl","subtitleUrl","toLoad","videoText","audioText","subtitleText","videoResUrl","audioResUrl","subtitleResUrl","_yield$Promise$all","_yield$Promise$all2","subtitle","_audio$response","_subtitle$response","_audio$response2","onPreM3U8Parse","playlist","audioPlaylist","subtitlePlaylist","_playlist","_emitOnLoaded","isMaster","deliveryDirectives","_playlist2","cb","errorCb","pollRetryCount","reqUrl","addDirectives","num","Stream","_setLLPlaybackPoint","_this$segments$","_this$lastSegment","lastSeg","_this$currentSubtitle","currentSubtitleStream","pointer","currentAudioStream","_clearSegments","snDiff","_updateSegments","newSegs","segs","toSwitch","maxStartPoint","usefulSegs","sliceStart","segObj","_endSeg$sn","endSeg","hasNew","findIndex","toAppend","endTimeBeforeAppend","lastCC","Playlist","_this$currentStream","currentStream","_this$currentStream2","_this$currentSegments","currentSegments","_segmentPointer","_this$currentSegments2","_this$currentStream3","_this$currentStream4","currentSubtitleEndSn","_this$currentStream5","liveEdge","_this$currentStream6","_this$currentSegments3","_this$currentSegments4","_this$currentStream7","_this$currentStream8","_this$currentStream9","getAudioSegment","_this$currentSegments5","dvrWindow","_this$currentSegments6","_this$currentSegments7","preIndex","setNextSegmentByIndex","newSubtitleSegs","updateSubtitle","list","_this$currentSegments8","_this$currentStream10","switchSubtitle","maxPlaylistSize","clearOldSegment","cTime","nbSb","findSegmentIndexByTime","getSegmentByIndex","updateSegmentsRanges","SegmentLoader","_bandwidthService","addRecord","_mapCache","_keyCache","loadTimeout","_segmentLoader","_audioSegmentLoader","_keyLoader","_loadSegment2","getLatestSpeed","getAvgSpeed","audioSeg","loadInit","loadAudioInit","loadVideoSegment","loadAudioSegment","_loadSegment","segLoader","_seg$key","mapKey","mapKeyIv","_seg$initSegment$key","mapUrl","_keyUrl","keyUrl","Hls","_reset2","_clear2","_onCheckQuotaExceeded2","_reqAndBufferSegment2","_loadSegmentDirect2","_loadM3U","_switchSubtitleStream","_switchAudioStream","_switchStream","_switchURL","_replay","_loadData2","_this$_playlist","nextSegment","_assertThisInitialize","maxBufferThroughout","bInfo","bufferThroughout","_segmentProcessing","minFrameDuration","paused","preloadTime","_tryEos","preferMMSStreaming","_bufferService","msStreaming","_urlSwitching","_prevSegSn","_loadSegmentDirect","_disconnectTimer","_reloadOnPlay","replay","_startTick","disconnectTime","_clear","_stopTick","seekTime","seekRange","newSeekTime","curSeg","segIndex","_onCheckQuotaExceeded","currentSegment","_this$_seiService","maxLatency","targetLatency","latency","seiInTime","_seiService","throw","allowedStreamTrackChange","_checkStreamTrackChange","segLoaderError","_isProcessQuotaExceeded","fatal","_emitError","ended","playbackRate","isMediaPlaying","_gapService","do","document","createElement","manifestList","minSegmentsStartPlay","_manifestLoader","_onLoadeddata","_onPlay","_onPause","_onSeeking","_onTimeupdate","hasSubtitle","_this$_bufferService","targetSeg","_this$media","getVideoPlaybackQuality","droppedVideoFrames","corruptedVideoFrames","totalVideoFrames","creationTime","webkitDroppedFrameCount","webkitDecodedFrameCount","_args4","clearSwitchStatus","_switchUrlOpts","_loadData","manifest","_this$_switchUrlOpts","_this$_switchUrlOpts3","_this$_switchUrlOpts4","_this$_switchUrlOpts2","switchTimePoint","segIdx","nextSeg","bufferClearStartPoint","_this$_switchUrlOpts5","_loadM3U8","setNextSegmentBySN","_prevSegCc","_getSeamlessSwitchPoint","nbSegments","_pollM3U8","seamless","isPlayEmit","play","defaultOpts","_options","appended","_args7","seamlessSwitch","force","curStream","curId","_args8","_refreshM3U8","audioStream","_args9","stopPoll","_callee11","_context11","_callee12","_this$_seiService2","_context12","_callee13","_this$config$manifest","_this$config$manifest2","_this$_playlist$curre","_context13","parseText","upsertPlaylist","_stream$currentAudioS","_stream$currentSubtit","mediaPlaylist","pollInterval","_this$_playlist$lastS","isEmpty","poll","p1","p2","p3","hadSegmentLoaded","_callee14","loadOnce","cachedError","_this$_playlist$curre2","sameStream","_context14","_reqAndBufferSegment","finish","feedbackLiveEdge","moveSegmentPointer","_end","_callee15","_this$_bufferService2","responses","before","segStart","_context15","decryptBuffer","evictBuffer","_callee16","inBuffered","mediaTime","_context16","changedSeg","checkSegmentTrackChange","switchURL","_callee17","_context17","_callee18","_this$_seiService3","_args18","_context18","_tickTimer","_tick","_tickInterval","_error$originError","_this$media2","_this$media3","_this$_seiService4","pause","nextLoadPoint","_this$_stats","latestKbps","delay","_this$_bufferService3","_this$_bufferService4","_this$_playlist2","isBuffered","msIsOpened","msHasOpTasks","WebAssembly","TransmuxerLogger","disable","localStorage","getItem","enableLogger","disableLogger","PluginExtension","plugin","_this$_plugin","_this$_plugin$player","_this$_plugin2","_this$_plugin2$player","innerDegrade","_plugin","player","degradeInfo","eventName","_degrade","originVideo","TAG","newVideo","degradeVideo","degrade","firstChild","root","replaceChild","hlsPlugin","pluginName","unRegisterPlugin","_init","setPlayMode","setAttribute","_onLowDecode","_this$_opts3$media","HlsPlugin","_BasePlugin","_this$hls","_this$hls2","switchSubtitleStream","_this$hls3","_this$player","_this$player$config","mediaElem","hlsOpts","__allowHlsEmptyUrl__","isMMSOnly","descriptor","getOwnPropertyDescriptor","writable","_this2$player$config","_this2$player$config$","parseSwitchUrlArgs","keepStatusAfterSwitch","_keepPauseStatus","onSwitchUrl","_this$player2","handleSource","defineGetterOrSetter","_this2$hls$media","configurable","pluginExtension","forceDegradeToVideo","_this2$pluginExtensio","useHooks","URL_CHANGE","SWITCH_SUBTITLE","_onSwitchSubtitle","DESTROY","_transError","_transCoreEvent","_this$pluginExtension","Errors","_emitSeiPaylodTime","seiJson","BasePlugin"],"mappings":"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"}